<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ay.MvcFramework.Wpf</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Windows.Shell.JumpItemRejectionReason">
            <summary>
            The list of possible reasons why a JumpItem would be rejected from a JumpList when applied.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.JumpItemRejectionReason.None">
            <summary>
            Unknown reason.  This should not be used.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.JumpItemRejectionReason.InvalidItem">
            <summary>
            The item was rejected because it was invalid for a jump list.  E.g. the file path didn't exist.
            </summary>
            <remarks>
            If the application is running on a system where jump lists are not available (like XP or Vista)
            items will get rejected with this reason.
            </remarks>
        </member>
        <member name="F:Microsoft.Windows.Shell.JumpItemRejectionReason.NoRegisteredHandler">
            <summary>
            The item was rejected because the program was not registered to handle the file extension.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.JumpItemRejectionReason.RemovedByUser">
            <summary>
            The item was rejected because the user had explicitly removed it since the last time a JumpList was applied.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Shell.JumpItemsRejectedEventArgs">
            <summary>
            EventArgs for JumpList.JumpItemsRejected event.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Shell.JumpItemsRemovedEventArgs">
            <summary>
            EventArgs for JumpList.JumpItemsRemovedByUser event.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Shell.JumpList">
            <summary>
            Manage the tasks and files that Shell associates with this application.
            This allows modification of the Jump List UI in Windows 7 that appears on the Taskbar and Start Menu.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Shell.JumpList.AddToRecentCategory(System.String)">
            <summary>
            Add the item at the specified file path to the application's JumpList's recent items.
            </summary>
            <remarks>
            This makes the item eligible for inclusion in the special Recent and Frequent categories.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Shell.JumpList.AddToRecentCategory(Microsoft.Windows.Shell.JumpPath)">
            <summary>
            Add the item to the application's JumpList's recent items.
            </summary>
            <remarks>
            This makes the item eligible for inclusion in the special Recent and Frequent categories.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Shell.JumpList.AddToRecentCategory(Microsoft.Windows.Shell.JumpTask)">
            <summary>
            Add the task at the specified file path to the application's JumpList's recent items.
            </summary>
            <remarks>
            This makes the item eligible for inclusion in the special Recent and Frequent categories.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Shell.JumpList._ShellObjectPair.ReleaseShellObjects(System.Collections.Generic.List{Microsoft.Windows.Shell.JumpList._ShellObjectPair})">
            <summary>
            Releases all native references in a list of _ShellObjectPairs.
            </summary>
            <param name="list">The list from which to release the resources.</param>
        </member>
        <member name="M:Microsoft.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,Microsoft.Windows.Shell.JumpList)">
            <summary>
            Set the JumpList attached property on an Application.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)">
            <summary>
            Get the JumpList attached property for an Application.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.JumpList.ShowFrequentCategory">
            <summary>
            Whether to show the special "Frequent" category.
            </summary>
            <remarks>
            This category is managed by the Shell and keeps track of items that are frequently accessed by this program.
            Applications can request that specific items are included here by calling JumpList.AddToRecentCategory.
            Because of duplication, applications generally should not have both ShowRecentCategory and ShowFrequentCategory set at the same time.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Shell.JumpList.ShowRecentCategory">
            <summary>
            Whether to show the special "Recent" category.
            </summary>
            <remarks>
            This category is managed by the Shell and keeps track of items that have been recently accessed by this program.
            Applications can request that specific items are included here by calling JumpList.AddToRecentCategory
            Because of duplication, applications generally should not have both ShowRecentCategory and ShowFrequentCategory set at the same time.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Shell.JumpList.JumpItems">
            <summary>
            The list of JumpItems to be in the JumpList.  After a call to Apply this list will contain only those items that were successfully added.
            </summary>
            <remarks>
            This object is not guaranteed to retain its identity after a call to Apply or other implicit setting of the JumpList.
            It should be requeried at such times.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Shell.JumpList.BeginInit">
            <summary>
            Prepare the JumpList for modification.
            </summary>
            <remarks>
            This works in concert with the Application.JumpList attached property.  The JumpList will automatically be applied
            to the current application when attached and a corresponding call to EndInit is made.
            Nested calls to BeginInit are not allowed.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Shell.JumpList.EndInit">
            <summary>
            Signal the end of initialization of this JumpList.  If it is attached to the current Application, apply the contents of the jump list.
            </summary>
            <remarks>
            Calls to EndInit must be paired with calls to BeginInit.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Shell.JumpList._RuntimeId">
            <summary>
            Get the AppUserModelId for the running process.
            </summary>
            <remarks>
            This is a Shell property that currently is only used as part of a heuristic
            for what taskbar item an HWND should be associated with, e.g. you can put
            windows from multiple processes into the same group, or you can prevent glomming
            of HWNDs that would otherwise be shown together.
            
            Even though this property isn't exposed on the public WPF OM
            we still want to make sure that the jump list gets associated with
            the current running app even if the client has explicitly changed the id.
            
            It's straightforward to p/invoke to set these for the running application or
            the HWND.  Not so much for this object.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Shell.JumpList.GetShellObjectForJumpItem(Microsoft.Windows.Shell.JumpItem)">
            <summary>
            </summary>
            <remarks>
            This returns a native COM object that should be deterministically released by the caller, when possible.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Shell.JumpList.ShellLinkToString(Standard.IShellLinkW)">
            <summary>
            Generate a unique string for the ShellLink that can be used for equality checks.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Shell.SystemCommands.ShowSystemMenu(System.Windows.Window,System.Windows.Point)">
            <summary>Display the system menu at a specified location.</summary>
            <param name="screenLocation">The location to display the system menu, in logical screen coordinates.</param>
        </member>
        <member name="M:Microsoft.Windows.Shell.SystemParameters2.#ctor">
            <summary>
            Private constructor.  The public way to access this class is through the static Current property.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.TaskbarItemInfo.TaskbarItemInfoProperty">
            <summary>
            TaskbarItem Attached Dependency Property
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Shell.TaskbarItemInfo._OnTaskbarItemInfoChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the TaskbarItem property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Shell.TaskbarItemInfo._CoerceTaskbarItemInfoValue(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the TaskbarItem value.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.TaskbarItemInfo.ProgressStateProperty">
            <summary>
            ProgressState Dependency Property
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.TaskbarItemInfo.ProgressState">
            <summary>
            Gets or sets the ProgressState property.  This dependency property 
            indicates the progress state of the Window on the superbar.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Shell.TaskbarItemInfo._OnProgressStateChanged">
            <summary>
            Handles changes to the ProgressState property.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.TaskbarItemInfo.ProgressValueProperty">
            <summary>
            ProgressValue Dependency Property
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.TaskbarItemInfo.ProgressValue">
            <summary>
            Gets or sets the ProgressValue property.  This dependency property 
            indicates the value of the progress bar for the Window's Superbar item.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.TaskbarItemInfo.OverlayProperty">
            <summary>
            Overlay Dependency Property
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.TaskbarItemInfo.Overlay">
            <summary>
            Gets or sets the Overlay property.  This dependency property 
            indicates the overlay that is used to indicate status for the associated Window.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Shell.TaskbarItemInfo._OnOverlayChanged">
            <summary>
            Handles changes to the Overlay property.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.TaskbarItemInfo.DescriptionProperty">
            <summary>
            Description Dependency Property
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.TaskbarItemInfo.Description">
            <summary>
            Gets or sets the Description property.  This dependency property 
            indicates the tooltip to display on the thumbnail for this window.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Shell.TaskbarItemInfo._OnDescriptionChanged">
            <summary>
            Handles changes to the Description property.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty">
            <summary>
            ThumbnailClipMargin Dependency Property
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin">
            <summary>
            Gets or sets the LiveThumbnailClipMargin property.  This dependency property 
            indicates the border of the Window to clip when displayed in the taskbar thumbnail preview.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Shell.TaskbarItemInfo._OnThumbnailClipMarginChanged">
            <summary>
            Handles changes to the LiveThumbnailClipMargin property.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty">
            <summary>
            ThumbButtonInfos Dependency Property
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos">
            <summary>
            Gets or sets the ThumbButtonInfos property.  This dependency property 
            indicates the collection of command buttons to be displayed in the Window's DWM thumbnail.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.ThumbButtonInfo.Visibility">
            <summary>
            Gets or sets the whether this should be visible in the UI.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.ThumbButtonInfo.DismissWhenClicked">
            <summary>
            Gets or sets the DismissWhenClicked property.  This dependency property 
            indicates whether the thumbnail window should disappear as a result
            of the user clicking this button.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.ThumbButtonInfo.ImageSource">
            <summary>
            Gets or sets the ImageSource property.  This dependency property 
            indicates the ImageSource to use for this button's display.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible">
            <summary>
            Gets or sets the IsBackgroundVisible property.  This dependency property 
            indicates whether the default background should be shown.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.ThumbButtonInfo.Description">
            <summary>
            Gets or sets the Description property.  This dependency property 
            indicates the text to display in the tooltip for this button.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.ThumbButtonInfo.IsEnabled">
            <summary>
            Gets or sets the IsEnabled property.
            </summary>
            <remarks>
            This dependency property
            indicates whether the button is receptive to user interaction and
            should appear as such.  The button will not raise click events from
            the user when this property is false.
            See also IsInteractive.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Shell.ThumbButtonInfo.IsInteractive">
            <summary>
            Gets or sets the IsInteractive property.
            </summary>
            <remarks>
            This dependency property allows an enabled button, as determined
            by the IsEnabled property, to not raise click events.  Buttons that
            have IsInteractive=false can be used to indicate status.
            IsEnabled=false takes precedence over IsInteractive=false.
            </remarks>
        </member>
        <member name="F:Microsoft.Windows.Shell.ThumbButtonInfo.CommandParameterProperty">
            <summary>
            CommandParameter Dependency Property
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.ThumbButtonInfo.CommandTargetProperty">
            <summary>
            CommandTarget Dependency Property
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.ThumbButtonInfoCollection.Empty">
            <summary>
            A frozen empty ThumbButtonInfoCollection.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.WindowChrome.CaptionHeight">
            <summary>The extent of the top of the window to treat as the caption.</summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChrome.IgnoreTaskbarOnMaximizeProperty">
            <summary>Dependency property for IgnoreTaskbarOnMaximize</summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.WindowChrome.IgnoreTaskbarOnMaximize">
            <summary>
            If this property is true and the attached window's WindowStyle=None then when the window is maximized it will cover the entire
            monitor, including the taskbar.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.WindowChromeWorker._IsPresentationFrameworkVersionLessThan4">
            <summary>
            Is this using WPF4?
            </summary>
            <remarks>
            There are a few specific bugs in Window in 3.5SP1 and below that require workarounds
            when handling WM_NCCALCSIZE on the HWND.
            </remarks>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChromeWorker._window">
            <summary>The Window that's chrome is being modified.</summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChromeWorker._hwnd">
            <summary>Underlying HWND for the _window.</summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChromeWorker._chromeInfo">
            <summary>Object that describes the current modifications being made to the chrome.</summary>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._ModifyStyle(Standard.WS,Standard.WS)">
            <summary>Add and remove a native WindowStyle from the HWND.</summary>
            <param name="removeStyle">The styles to be removed.  These can be bitwise combined.</param>
            <param name="addStyle">The styles to be added.  These can be bitwise combined.</param>
            <returns>Whether the styles of the HWND were modified as a result of this call.</returns>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._GetHwndState">
            <summary>
            Get the WindowState as the native HWND knows it to be.  This isn't necessarily the same as what Window thinks.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._GetWindowRect">
            <summary>
            Get the bounding rectangle for the window in physical coordinates.
            </summary>
            <returns>The bounding rectangle for the window.</returns>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._UpdateSystemMenu(System.Nullable{System.Windows.WindowState})">
            <summary>
            Update the items in the system menu based on the current, or assumed, WindowState.
            </summary>
            <param name="assumeState">
            The state to assume that the Window is in.  This can be null to query the Window's state.
            </param>
            <remarks>
            We want to update the menu while we have some control over whether the caption will be repainted.
            </remarks>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChromeWorker._HitTestBorders">
            <summary>
            Matrix of the HT values to return when responding to NC window messages.
            </summary>
        </member>
        <member name="T:Standard.Assert">
            <summary>A static class for verifying assumptions.</summary>
        </member>
        <member name="T:Standard.Assert.EvaluateFunction">
            <summary>A function signature for Assert.Evaluate.</summary>
        </member>
        <member name="T:Standard.Assert.ImplicationFunction">
            <summary>A function signature for Assert.Implies.</summary>
            <returns>Returns the truth of a predicate.</returns>
        </member>
        <member name="M:Standard.Assert.Evaluate(Standard.Assert.EvaluateFunction)">
            <summary>
            Executes the specified argument.
            </summary>
            <param name="argument">The function to execute.</param>
        </member>
        <member name="M:Standard.Assert.Equals``1(``0,``0)">
            <summary>Obsolete: Use Standard.Assert.AreEqual instead of Assert.Equals</summary>
            <typeparam name="T">The generic type to compare for equality.</typeparam>
            <param name="expected">The first generic type data to compare.  This is is the expected value.</param>
            <param name="actual">The second generic type data to compare.  This is the actual value.</param>
        </member>
        <member name="M:Standard.Assert.AreEqual``1(``0,``0)">
            <summary>
            Verifies that two generic type data are equal.  The assertion fails if they are not.
            </summary>
            <typeparam name="T">The generic type to compare for equality.</typeparam>
            <param name="expected">The first generic type data to compare.  This is is the expected value.</param>
            <param name="actual">The second generic type data to compare.  This is the actual value.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.AreNotEqual``1(``0,``0)">
            <summary>
            Verifies that two generic type data are not equal.  The assertion fails if they are.
            </summary>
            <typeparam name="T">The generic type to compare for inequality.</typeparam>
            <param name="notExpected">The first generic type data to compare.  This is is the value that's not expected.</param>
            <param name="actual">The second generic type data to compare.  This is the actual value.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.Implies(System.Boolean,System.Boolean)">
            <summary>
            Verifies that if the specified condition is true, then so is the result.
            The assertion fails if the condition is true but the result is false.
            </summary>
            <param name="condition">if set to <c>true</c> [condition].</param>
            <param name="result">
            A second Boolean statement.  If the first was true then so must this be.
            If the first statement was false then the value of this is ignored.
            </param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.Implies(System.Boolean,Standard.Assert.ImplicationFunction)">
            <summary>
            Lazy evaluation overload.  Verifies that if a condition is true, then so is a secondary value.
            </summary>
            <param name="condition">The conditional value.</param>
            <param name="result">A function to be evaluated for truth if the condition argument is true.</param>
            <remarks>
            This overload only evaluates the result if the first condition is true.
            </remarks>
        </member>
        <member name="M:Standard.Assert.IsNeitherNullNorEmpty(System.String)">
            <summary>
            Verifies that a string has content.  I.e. it is not null and it is not empty.
            </summary>
            <param name="value">The string to verify.</param>
        </member>
        <member name="M:Standard.Assert.IsNeitherNullNorWhitespace(System.String)">
            <summary>
            Verifies that a string has content.  I.e. it is not null and it is not purely whitespace.
            </summary>
            <param name="value">The string to verify.</param>
        </member>
        <member name="M:Standard.Assert.IsNotNull``1(``0)">
            <summary>
            Verifies the specified value is not null.  The assertion fails if it is.
            </summary>
            <typeparam name="T">The generic reference type.</typeparam>
            <param name="value">The value to check for nullness.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.IsFalse(System.Boolean)">
            <summary>
            Verifies that the specified condition is false.  The assertion fails if it is true.
            </summary>
            <param name="condition">The expression that should be <c>false</c>.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.IsFalse(System.Boolean,System.String)">
            <summary>
            Verifies that the specified condition is false.  The assertion fails if it is true.
            </summary>
            <param name="condition">The expression that should be <c>false</c>.</param>
            <param name="message">The message to display if the condition is <c>true</c>.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.IsTrue(System.Boolean)">
            <summary>
            Verifies that the specified condition is true.  The assertion fails if it is not.
            </summary>
            <param name="condition">A condition that is expected to be <c>true</c>.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.IsTrue(System.Boolean,System.String)">
            <summary>
            Verifies that the specified condition is true.  The assertion fails if it is not.
            </summary>
            <param name="condition">A condition that is expected to be <c>true</c>.</param>
            <param name="message">The message to write in case the condition is <c>false</c>.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.Fail">
            <summary>
            This line should never be executed.  The assertion always fails.
            </summary>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.Fail(System.String)">
            <summary>
            This line should never be executed.  The assertion always fails.
            </summary>
            <param name="message">The message to display if this function is executed.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.IsNull``1(``0)">
            <summary>
            Verifies that the specified object is null.  The assertion fails if it is not.
            </summary>
            <param name="item">The item to verify is null.</param>
        </member>
        <member name="M:Standard.Assert.BoundedDoubleInc(System.Double,System.Double,System.Double)">
            <summary>
            Verifies that the specified value is within the expected range.  The assertion fails if it isn't.
            </summary>
            <param name="lowerBoundInclusive">The lower bound inclusive value.</param>
            <param name="value">The value to verify.</param>
            <param name="upperBoundInclusive">The upper bound inclusive value.</param>
        </member>
        <member name="M:Standard.Assert.BoundedInteger(System.Int32,System.Int32,System.Int32)">
            <summary>
            Verifies that the specified value is within the expected range.  The assertion fails if it isn't.
            </summary>
            <param name="lowerBoundInclusive">The lower bound inclusive value.</param>
            <param name="value">The value to verify.</param>
            <param name="upperBoundExclusive">The upper bound exclusive value.</param>
        </member>
        <member name="M:Standard.Assert.IsApartmentState(System.Threading.ApartmentState)">
            <summary>
            Verify the current thread's apartment state is what's expected.  The assertion fails if it isn't
            </summary>
            <param name="expectedState">
            The expected apartment state for the current thread.
            </param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="T:Standard.DoubleUtilities">
            <summary>
            DoubleUtil uses fixed eps to provide fuzzy comparison functionality for doubles.
            Note that FP noise is a big problem and using any of these compare 
            methods is not a complete solution, but rather the way to reduce 
            the probability of repeating unnecessary work.
            </summary>
        </member>
        <member name="F:Standard.DoubleUtilities.Epsilon">
            <summary>
            Epsilon - more or less random, more or less small number.
            </summary>
        </member>
        <member name="M:Standard.DoubleUtilities.AreClose(System.Double,System.Double)">
            <summary>
            AreClose returns whether or not two doubles are "close".  That is, whether or 
            not they are within epsilon of each other.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this 
            returns false. 
            </summary>
            <param name="value1">The first double to compare.</param>
            <param name="value2">The second double to compare.</param>
            <returns>The result of the AreClose comparision.</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsStrictlyLessThan(System.Double,System.Double)">
            <summary>
            LessThan returns whether or not the first double is less than the second double.
            That is, whether or not the first is strictly less than *and* not within epsilon of
            the other number.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this 
            returns false.
            </summary>
            <param name="value1">The first double to compare.</param>
            <param name="value2">The second double to compare.</param>
            <returns>The result of the LessThan comparision.</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsStrictlyGreaterThan(System.Double,System.Double)">
            <summary>
            GreaterThan returns whether or not the first double is greater than the second double.
            That is, whether or not the first is strictly greater than *and* not within epsilon of
            the other number.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this 
            returns false.
            </summary>
            <param name="value1">The first double to compare.</param>
            <param name="value2">The second double to compare.</param>
            <returns>The result of the GreaterThan comparision.</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsLessThanOrCloseTo(System.Double,System.Double)">
            <summary>
            LessThanOrClose returns whether or not the first double is less than or close to
            the second double.  That is, whether or not the first is strictly less than or within
            epsilon of the other number.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this 
            returns false.
            </summary>
            <param name="value1">The first double to compare.</param>
            <param name="value2">The second double to compare.</param>
            <returns>The result of the LessThanOrClose comparision.</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsGreaterThanOrCloseTo(System.Double,System.Double)">
            <summary>
            GreaterThanOrClose returns whether or not the first double is greater than or close to
            the second double.  That is, whether or not the first is strictly greater than or within
            epsilon of the other number.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this 
            returns false.
            </summary>
            <param name="value1">The first double to compare.</param>
            <param name="value2">The second double to compare.</param>
            <returns>The result of the GreaterThanOrClose comparision.</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsFinite(System.Double)">
            <summary>
            Test to see if a double is a finite number (is not NaN or Infinity).
            </summary>
            <param name='value'>The value to test.</param>
            <returns>Whether or not the value is a finite number.</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsValidSize(System.Double)">
            <summary>
            Test to see if a double a valid size value (is finite and > 0).
            </summary>
            <param name='value'>The value to test.</param>
            <returns>Whether or not the value is a valid size value.</returns>
        </member>
        <member name="M:Standard.Utility.SafeCopyFile(System.String,System.String,Standard.SafeCopyFileOptions)">
            <summary>
            Wrapper around File.Copy to provide feedback as to whether the file wasn't copied because it didn't exist.
            </summary>
            <param name="cachePath"></param>
            <param name="suggestedPath"></param>
            <param name="overwrite"></param>
            <returns></returns>
        </member>
        <member name="M:Standard.Utility.SafeDeleteFile(System.String)">
            <summary>
            Simple guard against the exceptions that File.Delete throws on null and empty strings.
            </summary>
            <param name="path">The path to delete.  Unlike File.Delete, this can be null or empty.</param>
            <remarks>
            Note that File.Delete, and by extension SafeDeleteFile, does not throw an exception
            if the file does not exist.
            </remarks>
        </member>
        <member name="M:Standard.Utility.GeneratePropertyString(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Utility to help classes catenate their properties for implementing ToString().
            </summary>
            <param name="source">The StringBuilder to catenate the results into.</param>
            <param name="propertyName">The name of the property to be catenated.</param>
            <param name="value">The value of the property to be catenated.</param>
        </member>
        <member name="M:Standard.Utility.GenerateToString``1(``0)">
            <summary>
            Generates ToString functionality for a struct.  This is an expensive way to do it,
            it exists for the sake of debugging while classes are in flux.
            Eventually this should just be removed and the classes should
            do this without reflection.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="object"></param>
            <returns></returns>
        </member>
        <member name="M:Standard.Utility.UrlEncode(System.String)">
            <summary>
            Encodes a URL string.  Duplicated functionality from System.Web.HttpUtility.UrlEncode.
            </summary>
            <param name="url"></param>
            <returns></returns>
            <remarks>
            Duplicated from System.Web.HttpUtility because System.Web isn't part of the client profile.
            URL Encoding replaces ' ' with '+' and unsafe ASCII characters with '%XX'.
            Safe characters are defined in RFC2396 (http://www.ietf.org/rfc/rfc2396.txt).
            They are the 7-bit ASCII alphanumerics and the mark characters "-_.!~*'()".
            This implementation does not treat '~' as a safe character to be consistent with the System.Web version.
            </remarks>
        </member>
        <member name="M:Standard.Utility.SafeDeleteObject(System.IntPtr@)">
            <summary>GDI's DeleteObject</summary>
        </member>
        <member name="M:Standard.Utility.SafeDisposeImage(System.IntPtr@)">
            <summary>GDI+'s DisposeImage</summary>
            <param name="gdipImage"></param>
        </member>
        <member name="M:Standard.Utility._GetBestMatch(System.Collections.Generic.IList{System.Windows.Media.Imaging.BitmapFrame},System.Int32,System.Int32,System.Int32)">
            From a list of BitmapFrames find the one that best matches the requested dimensions.
            The methods used here are copied from Win32 sources.  We want to be consistent with
            system behaviors.
        </member>
        <member name="M:Standard.Utility.ColorFromArgbDword(System.UInt32)">
            <summary>Convert a native integer that represent a color with an alpha channel into a Color struct.</summary>
            <param name="color">The integer that represents the color.  Its bits are of the format 0xAARRGGBB.</param>
            <returns>A Color representation of the parameter.</returns>
        </member>
        <member name="T:Standard.Verify">
            <summary>
            A static class for retail validated assertions.
            Instead of breaking into the debugger an exception is thrown.
            </summary>
        </member>
        <member name="M:Standard.Verify.IsApartmentState(System.Threading.ApartmentState,System.String)">
            <summary>
            Ensure that the current thread's apartment state is what's expected.
            </summary>
            <param name="requiredState">
            The required apartment state for the current thread.
            </param>
            <param name="message">
            The message string for the exception to be thrown if the state is invalid.
            </param>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the calling thread's apartment state is not the same as the requiredState.
            </exception>
        </member>
        <member name="M:Standard.Verify.IsNeitherNullNorEmpty(System.String,System.String)">
            <summary>
            Ensure that an argument is neither null nor empty.
            </summary>
            <param name="value">The string to validate.</param>
            <param name="name">The name of the parameter that will be presented if an exception is thrown.</param>
        </member>
        <member name="M:Standard.Verify.IsNeitherNullNorWhitespace(System.String,System.String)">
            <summary>
            Ensure that an argument is neither null nor does it consist only of whitespace.
            </summary>
            <param name="value">The string to validate.</param>
            <param name="name">The name of the parameter that will be presented if an exception is thrown.</param>
        </member>
        <member name="M:Standard.Verify.IsNotDefault``1(``0,System.String)">
            <summary>Verifies that an argument is not null.</summary>
            <typeparam name="T">Type of the object to validate.  Must be a class.</typeparam>
            <param name="obj">The object to validate.</param>
            <param name="name">The name of the parameter that will be presented if an exception is thrown.</param>
        </member>
        <member name="M:Standard.Verify.IsNotNull``1(``0,System.String)">
            <summary>Verifies that an argument is not null.</summary>
            <typeparam name="T">Type of the object to validate.  Must be a class.</typeparam>
            <param name="obj">The object to validate.</param>
            <param name="name">The name of the parameter that will be presented if an exception is thrown.</param>
        </member>
        <member name="M:Standard.Verify.IsNotNull``1(``0,System.String,System.String)">
            <summary>Verifies that an argument is not null.</summary>
            <typeparam name="T">Type of the object to validate.  Must be a class.</typeparam>
            <param name="obj">The object to validate.</param>
            <param name="name">The name of the parameter that will be presented if an exception is thrown.</param>
            <param name="message">The message to display with the exception</param>
        </member>
        <member name="M:Standard.Verify.IsNull``1(``0,System.String)">
            <summary>Verifies that an argument is null.</summary>
            <typeparam name="T">Type of the object to validate.  Must be a class.</typeparam>
            <param name="obj">The object to validate.</param>
            <param name="name">The name of the parameter that will be presented if an exception is thrown.</param>
        </member>
        <member name="M:Standard.Verify.IsTrue(System.Boolean,System.String,System.String)">
            <summary>
            Verifies the specified statement is true.  Throws an ArgumentException if it's not.
            </summary>
            <param name="statement">The statement to be verified as true.</param>
            <param name="name">Name of the parameter to include in the ArgumentException.</param>
            <param name="message">The message to include in the ArgumentException.</param>
        </member>
        <member name="M:Standard.Verify.BoundedInteger(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Verifies that the specified value is within the expected range.  The assertion fails if it isn't.
            </summary>
            <param name="lowerBoundInclusive">The lower bound inclusive value.</param>
            <param name="value">The value to verify.</param>
            <param name="upperBoundExclusive">The upper bound exclusive value.</param>
        </member>
        <member name="F:Standard.IID.ApplicationAssociationRegistration">
            <summary>IID_IApplicationAssociationRegistration</summary>
        </member>
        <member name="F:Standard.IID.ConnectionPoint">
            <summary>IID_IConnectionPoint</summary>
        </member>
        <member name="F:Standard.IID.ConnectionPointContainer">
            <summary>IID_IConnectionPointContainer</summary>
        </member>
        <member name="F:Standard.IID.EnumConnectionPoints">
            <summary>IID_IEnumConnectionPoints</summary>
        </member>
        <member name="F:Standard.IID.EnumConnections">
            <summary>IID_IEnumConnections</summary>
        </member>
        <member name="F:Standard.IID.EnumIdList">
            <summary>IID_IEnumIDList</summary>
        </member>
        <member name="F:Standard.IID.EnumObjects">
            <summary>IID_IEnumObjects</summary>
        </member>
        <member name="F:Standard.IID.FileDialog">
            <summary>IID_IFileDialog</summary>
        </member>
        <member name="F:Standard.IID.FileDialogEvents">
            <summary>IID_IFileDialogEvents</summary>
        </member>
        <member name="F:Standard.IID.FileOpenDialog">
            <summary>IID_IFileOpenDialog</summary>
        </member>
        <member name="F:Standard.IID.FileSaveDialog">
            <summary>IID_IFileSaveDialog</summary>
        </member>
        <member name="F:Standard.IID.HtmlDocument">
            <summary>IID_IHTMLDocument</summary>
        </member>
        <member name="F:Standard.IID.HtmlDocument2">
            <summary>IID_IHTMLDocument2</summary>
        </member>
        <member name="F:Standard.IID.ModalWindow">
            <summary>IID_IModalWindow</summary>
        </member>
        <member name="F:Standard.IID.ObjectArray">
            <summary>IID_IObjectArray</summary>
        </member>
        <member name="F:Standard.IID.ObjectCollection">
            <summary>IID_IObjectCollection</summary>
        </member>
        <member name="F:Standard.IID.PropertyNotifySink">
            <summary>IID_IPropertyNotifySink</summary>
        </member>
        <member name="F:Standard.IID.PropertyStore">
            <summary>IID_IPropertyStore</summary>
        </member>
        <member name="F:Standard.IID.ServiceProvider">
            <summary>IID_IServiceProvider</summary>
        </member>
        <member name="F:Standard.IID.ShellFolder">
            <summary>IID_IShellFolder</summary>
        </member>
        <member name="F:Standard.IID.ShellLink">
            <summary>IID_IShellLink</summary>
        </member>
        <member name="F:Standard.IID.ShellItem">
            <summary>IID_IShellItem</summary>
        </member>
        <member name="F:Standard.IID.ShellItem2">
            <summary>IID_IShellItem2</summary>
        </member>
        <member name="F:Standard.IID.ShellItemArray">
            <summary>IID_IShellItemArray</summary>
        </member>
        <member name="F:Standard.IID.TaskbarList">
            <summary>IID_ITaskbarList</summary>
        </member>
        <member name="F:Standard.IID.TaskbarList2">
            <summary>IID_ITaskbarList2</summary>
        </member>
        <member name="F:Standard.IID.Unknown">
            <summary>IID_IUnknown</summary>
        </member>
        <member name="F:Standard.IID.WebBrowser2">
            <summary>IID_IWebBrowser2</summary>
        </member>
        <member name="F:Standard.IID.WebBrowserEvents">
            <summary>DIID_DWebBrowserEvents</summary>
        </member>
        <member name="F:Standard.IID.WebBrowserEvents2">
            <summary>IID_DWebBrowserEvents2</summary>
        </member>
        <member name="F:Standard.IID.WICBitmapDecoder">
            <summary>IID_IWICBitmapDecoder</summary>
        </member>
        <member name="F:Standard.IID.WICBitmapFlipRotator">
            <summary>IID_IWICBitmapFlipRotator</summary>
        </member>
        <member name="F:Standard.IID.WICBitmapFrameDecode">
            <summary>IID_IWICBitmapFrameDecode</summary>
        </member>
        <member name="F:Standard.IID.WICBitmap">
            <summary>IID_IWICBitmap</summary>
        </member>
        <member name="F:Standard.IID.WICBitmapSource">
            <summary>IID_IWICBitmapSource</summary>
        </member>
        <member name="F:Standard.IID.WICFormatConverter">
            <summary>IID_IWICFormatConverter</summary>
        </member>
        <member name="F:Standard.IID.WICImagingFactory">
            <summary>IID_IWICImagingFactory</summary>
        </member>
        <member name="F:Standard.IID.WICStream">
            <summary>IID_IWICStream</summary>
        </member>
        <member name="F:Standard.IID.ApplicationDestinations">
            <summary>IID_IApplicationDestinations</summary>
        </member>
        <member name="F:Standard.IID.ApplicationDocumentLists">
            <summary>IID_IApplicationDocumentLists</summary>
        </member>
        <member name="F:Standard.IID.CustomDestinationList">
            <summary>IID_ICustomDestinationList</summary>
        </member>
        <member name="F:Standard.IID.ObjectWithAppUserModelId">
            <summary>IID_IObjectWithAppUserModelID</summary>
        </member>
        <member name="F:Standard.IID.ObjectWithProgId">
            <summary>IID_IObjectWithProgID</summary>
        </member>
        <member name="F:Standard.IID.TaskbarList3">
            <summary>IID_ITaskbarList3</summary>
        </member>
        <member name="F:Standard.IID.TaskbarList4">
            <summary>IID_ITaskbarList4</summary>
        </member>
        <member name="F:Standard.SID.SWebBrowserApp">
            <summary>SID_SWebBrowserApp</summary>
        </member>
        <member name="F:Standard.CLSID.ApplicationAssociationRegistration">
            <summary>CLSID_ApplicationAssociationRegistration</summary>
            <remarks>IID_IApplicationAssociationRegistration</remarks>
        </member>
        <member name="F:Standard.CLSID.DragDropHelper">
            <summary>CLSID_DragDropHelper</summary>
        </member>
        <member name="F:Standard.CLSID.FileOpenDialog">
            <summary>CLSID_FileOpenDialog</summary>
            <remarks>IID_IFileOpenDialog</remarks>
        </member>
        <member name="F:Standard.CLSID.FileSaveDialog">
            <summary>CLSID_FileSaveDialog</summary>
            <remarks>IID_IFileSaveDialog</remarks>
        </member>
        <member name="F:Standard.CLSID.TaskbarList">
            <summary>CLSID_TaskbarList</summary>
            <remarks>IID_ITaskbarList</remarks>
        </member>
        <member name="F:Standard.CLSID.EnumerableObjectCollection">
            <summary>CLSID_EnumerableObjectCollection</summary>
            <remarks>IID_IEnumObjects.</remarks>
        </member>
        <member name="F:Standard.CLSID.ShellLink">
            <summary>CLSID_ShellLink</summary>
            <remarks>IID_IShellLink</remarks>
        </member>
        <member name="F:Standard.CLSID.WICImagingFactory">
            <summary>CLSID_WICImagingFactory</summary>
        </member>
        <member name="F:Standard.CLSID.DestinationList">
            <summary>CLSID_DestinationList</summary>
            <remarks>IID_ICustomDestinationList</remarks>
        </member>
        <member name="F:Standard.CLSID.ApplicationDestinations">
            <summary>CLSID_ApplicationDestinations</summary>
            <remarks>IID_IApplicationDestinations</remarks>
        </member>
        <member name="F:Standard.CLSID.ApplicationDocumentLists">
            <summary>CLSID_ApplicationDocumentLists</summary>
            <remarks>IID_IApplicationDocumentLists</remarks>
        </member>
        <member name="T:Standard.Win32Error">
            <summary>
            Wrapper for common Win32 status codes.
            </summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_SUCCESS">
            <summary>The operation completed successfully.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_INVALID_FUNCTION">
            <summary>Incorrect function.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_FILE_NOT_FOUND">
            <summary>The system cannot find the file specified.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_PATH_NOT_FOUND">
            <summary>The system cannot find the path specified.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_TOO_MANY_OPEN_FILES">
            <summary>The system cannot open the file.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_ACCESS_DENIED">
            <summary>Access is denied.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_INVALID_HANDLE">
            <summary>The handle is invalid.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_OUTOFMEMORY">
            <summary>Not enough storage is available to complete this operation.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_NO_MORE_FILES">
            <summary>There are no more files.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_SHARING_VIOLATION">
            <summary>The process cannot access the file because it is being used by another process.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_INVALID_PARAMETER">
            <summary>The parameter is incorrect.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_INSUFFICIENT_BUFFER">
            <summary>The data area passed to a system call is too small.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_NESTING_NOT_ALLOWED">
            <summary>Cannot nest calls to LoadModule.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_KEY_DELETED">
            <summary>Illegal operation attempted on a registry key that has been marked for deletion.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_NOT_FOUND">
            <summary>Element not found.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_NO_MATCH">
            <summary>There was no match for the specified key in the index.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_BAD_DEVICE">
            <summary>An invalid device was specified.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_CANCELLED">
            <summary>The operation was canceled by the user.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_CANNOT_FIND_WND_CLASS">
            <summary>Cannot find window class.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_CLASS_ALREADY_EXISTS">
            <summary>The window class was already registered.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_INVALID_DATATYPE">
            <summary>The specified datatype is invalid.</summary>
        </member>
        <member name="M:Standard.Win32Error.#ctor(System.Int32)">
            <summary>
            Create a new Win32 error.
            </summary>
            <param name="i">The integer value of the error.</param>
        </member>
        <member name="M:Standard.Win32Error.op_Explicit(Standard.Win32Error)~Standard.HRESULT">
            <summary>Performs HRESULT_FROM_WIN32 conversion.</summary>
            <param name="error">The Win32 error being converted to an HRESULT.</param>
            <returns>The equivilent HRESULT value.</returns>
        </member>
        <member name="M:Standard.Win32Error.ToHRESULT">
            <summary>Performs HRESULT_FROM_WIN32 conversion.</summary>
            <param name="error">The Win32 error being converted to an HRESULT.</param>
            <returns>The equivilent HRESULT value.</returns>
        </member>
        <member name="M:Standard.Win32Error.GetLastError">
            <summary>Performs the equivalent of Win32's GetLastError()</summary>
            <returns>A Win32Error instance with the result of the native GetLastError</returns>
        </member>
        <member name="M:Standard.Win32Error.op_Equality(Standard.Win32Error,Standard.Win32Error)">
            <summary>
            Compare two Win32 error codes for equality.
            </summary>
            <param name="errLeft">The first error code to compare.</param>
            <param name="errRight">The second error code to compare.</param>
            <returns>Whether the two error codes are the same.</returns>
        </member>
        <member name="M:Standard.Win32Error.op_Inequality(Standard.Win32Error,Standard.Win32Error)">
            <summary>
            Compare two Win32 error codes for inequality.
            </summary>
            <param name="errLeft">The first error code to compare.</param>
            <param name="errRight">The second error code to compare.</param>
            <returns>Whether the two error codes are not the same.</returns>
        </member>
        <member name="F:Standard.Facility.Null">
            <summary>FACILITY_NULL</summary>
        </member>
        <member name="F:Standard.Facility.Rpc">
            <summary>FACILITY_RPC</summary>
        </member>
        <member name="F:Standard.Facility.Dispatch">
            <summary>FACILITY_DISPATCH</summary>
        </member>
        <member name="F:Standard.Facility.Storage">
            <summary>FACILITY_STORAGE</summary>
        </member>
        <member name="F:Standard.Facility.Itf">
            <summary>FACILITY_ITF</summary>
        </member>
        <member name="F:Standard.Facility.Win32">
            <summary>FACILITY_WIN32</summary>
        </member>
        <member name="F:Standard.Facility.Windows">
            <summary>FACILITY_WINDOWS</summary>
        </member>
        <member name="F:Standard.Facility.Control">
            <summary>FACILITY_CONTROL</summary>
        </member>
        <member name="F:Standard.Facility.Ese">
            <summary>MSDN doced facility code for ESE errors.</summary>
        </member>
        <member name="F:Standard.Facility.WinCodec">
            <summary>FACILITY_WINCODEC (WIC)</summary>
        </member>
        <member name="T:Standard.HRESULT">
            <summary>Wrapper for HRESULT status codes.</summary>
        </member>
        <member name="F:Standard.HRESULT.S_OK">
            <summary>S_OK</summary>
        </member>
        <member name="F:Standard.HRESULT.S_FALSE">
            <summary>S_FALSE</summary>
        </member>
        <member name="F:Standard.HRESULT.E_PENDING">
            <summary>E_PENDING</summary>
        </member>
        <member name="F:Standard.HRESULT.E_NOTIMPL">
            <summary>E_NOTIMPL</summary>
        </member>
        <member name="F:Standard.HRESULT.E_NOINTERFACE">
            <summary>E_NOINTERFACE</summary>
        </member>
        <member name="F:Standard.HRESULT.E_POINTER">
            <summary>E_POINTER</summary>
        </member>
        <member name="F:Standard.HRESULT.E_ABORT">
            <summary>E_ABORT</summary>
        </member>
        <member name="F:Standard.HRESULT.E_FAIL">
            <summary>E_FAIL</summary>
        </member>
        <member name="F:Standard.HRESULT.E_UNEXPECTED">
            <summary>E_UNEXPECTED</summary>
        </member>
        <member name="F:Standard.HRESULT.STG_E_INVALIDFUNCTION">
            <summary>STG_E_INVALIDFUNCTION</summary>
        </member>
        <member name="F:Standard.HRESULT.REGDB_E_CLASSNOTREG">
            <summary>REGDB_E_CLASSNOTREG</summary>
        </member>
        <member name="F:Standard.HRESULT.DESTS_E_NO_MATCHING_ASSOC_HANDLER">
            <summary>DESTS_E_NO_MATCHING_ASSOC_HANDLER.  Win7 internal error code for Jump Lists.</summary>
            <remarks>There is no Assoc Handler for the given item registered by the specified application.</remarks>
        </member>
        <member name="F:Standard.HRESULT.DESTS_E_NORECDOCS">
            <summary>DESTS_E_NORECDOCS.  Win7 internal error code for Jump Lists.</summary>
            <remarks>The given item is excluded from the recent docs folder by the NoRecDocs bit on its registration.</remarks>
        </member>
        <member name="F:Standard.HRESULT.DESTS_E_NOTALLCLEARED">
            <summary>DESTS_E_NOTALLCLEARED.  Win7 internal error code for Jump Lists.</summary>
            <remarks>Not all of the items were successfully cleared</remarks>
        </member>
        <member name="F:Standard.HRESULT.E_ACCESSDENIED">
            <summary>E_ACCESSDENIED</summary>
            <remarks>Win32Error ERROR_ACCESS_DENIED.</remarks>
        </member>
        <member name="F:Standard.HRESULT.E_OUTOFMEMORY">
            <summary>E_OUTOFMEMORY</summary>
            <remarks>Win32Error ERROR_OUTOFMEMORY.</remarks>
        </member>
        <member name="F:Standard.HRESULT.E_INVALIDARG">
            <summary>E_INVALIDARG</summary>
            <remarks>Win32Error ERROR_INVALID_PARAMETER.</remarks>
        </member>
        <member name="F:Standard.HRESULT.INTSAFE_E_ARITHMETIC_OVERFLOW">
            <summary>INTSAFE_E_ARITHMETIC_OVERFLOW</summary>
        </member>
        <member name="F:Standard.HRESULT.COR_E_OBJECTDISPOSED">
            <summary>COR_E_OBJECTDISPOSED</summary>
        </member>
        <member name="F:Standard.HRESULT.WC_E_GREATERTHAN">
            <summary>WC_E_GREATERTHAN</summary>
        </member>
        <member name="F:Standard.HRESULT.WC_E_SYNTAX">
            <summary>WC_E_SYNTAX</summary>
        </member>
        <member name="M:Standard.HRESULT.#ctor(System.UInt32)">
            <summary>
            Create an HRESULT from an integer value.
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Standard.HRESULT.op_Explicit(Standard.HRESULT)~System.Int32">
            <summary>
            Convert an HRESULT to an int.  Used for COM interface declarations out of our control.
            </summary>
        </member>
        <member name="P:Standard.HRESULT.Facility">
            <summary>
            retrieve HRESULT_FACILITY
            </summary>
        </member>
        <member name="P:Standard.HRESULT.Code">
            <summary>
            retrieve HRESULT_CODE
            </summary>
        </member>
        <member name="M:Standard.HRESULT.ToString">
            <summary>
            Get a string representation of this HRESULT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Standard.HRESULT.ThrowLastError">
            <summary>
            Convert the result of Win32 GetLastError() into a raised exception.
            </summary>
        </member>
        <member name="T:Standard.HCF">
            <summary>
            HIGHCONTRAST flags
            </summary>
        </member>
        <member name="T:Standard.DROPIMAGETYPE">
            <summary>
            DROPIMAGE_*
            </summary>
        </member>
        <member name="T:Standard.BI">
            <summary>
            BITMAPINFOHEADER Compression type.  BI_*.
            </summary>
        </member>
        <member name="T:Standard.RGN">
            <summary>
            CombingRgn flags.  RGN_*
            </summary>
        </member>
        <member name="F:Standard.RGN.AND">
            <summary>
            Creates the intersection of the two combined regions.
            </summary>
        </member>
        <member name="F:Standard.RGN.OR">
            <summary>
            Creates the union of two combined regions.
            </summary>
        </member>
        <member name="F:Standard.RGN.XOR">
            <summary>
            Creates the union of two combined regions except for any overlapping areas.
            </summary>
        </member>
        <member name="F:Standard.RGN.DIFF">
            <summary>
            Combines the parts of hrgnSrc1 that are not part of hrgnSrc2.
            </summary>
        </member>
        <member name="F:Standard.RGN.COPY">
            <summary>
            Creates a copy of the region identified by hrgnSrc1.
            </summary>
        </member>
        <member name="T:Standard.OLECMDEXECOPT">
            <summary>
            For IWebBrowser2.  OLECMDEXECOPT_*
            </summary>
        </member>
        <member name="T:Standard.OLECMDF">
            <summary>
            For IWebBrowser2.  OLECMDF_*
            </summary>
        </member>
        <member name="T:Standard.OLECMDID">
            <summary>
            For IWebBrowser2.  OLECMDID_*
            </summary>
        </member>
        <member name="T:Standard.READYSTATE">
            <summary>
            For IWebBrowser2.  READYSTATE_*
            </summary>
        </member>
        <member name="T:Standard.DOGIF">
            <summary>
            DATAOBJ_GET_ITEM_FLAGS.  DOGIF_*.
            </summary>
        </member>
        <member name="F:Standard.ErrorModes.Default">
            <summary>Use the system default, which is to display all error dialog boxes.</summary>
        </member>
        <member name="F:Standard.ErrorModes.FailCriticalErrors">
            <summary>
            The system does not display the critical-error-handler message box. 
            Instead, the system sends the error to the calling process.
            </summary>
        </member>
        <member name="F:Standard.ErrorModes.NoGpFaultErrorBox">
            <summary>
            64-bit Windows:  The system automatically fixes memory alignment faults and makes them 
            invisible to the application. It does this for the calling process and any descendant processes.
            After this value is set for a process, subsequent attempts to clear the value are ignored.
            </summary>
        </member>
        <member name="F:Standard.ErrorModes.NoAlignmentFaultExcept">
            <summary>
            The system does not display the general-protection-fault message box. 
            This flag should only be set by debugging applications that handle general 
            protection (GP) faults themselves with an exception handler.
            </summary>
        </member>
        <member name="F:Standard.ErrorModes.NoOpenFileErrorBox">
            <summary>
            The system does not display a message box when it fails to find a file. 
            Instead, the error is returned to the calling process.
            </summary>
        </member>
        <member name="T:Standard.HT">
            <summary>
            Non-client hit test values, HT*
            </summary>
        </member>
        <member name="T:Standard.GCLP">
            <summary>
            GetClassLongPtr values, GCLP_*
            </summary>
        </member>
        <member name="T:Standard.GWL">
            <summary>
            GetWindowLongPtr values, GWL_*
            </summary>
        </member>
        <member name="T:Standard.SM">
            <summary>
            SystemMetrics.  SM_*
            </summary>
        </member>
        <member name="T:Standard.SPI">
            <summary>
            SystemParameterInfo values, SPI_*
            </summary>
        </member>
        <member name="T:Standard.SPIF">
            <summary>
            SystemParameterInfo flag values, SPIF_*
            </summary>
        </member>
        <member name="T:Standard.CS">
            <summary>
            CS_*
            </summary>
        </member>
        <member name="T:Standard.WS">
            <summary>
            WindowStyle values, WS_*
            </summary>
        </member>
        <member name="T:Standard.WM">
            <summary>
            Window message values, WM_*
            </summary>
        </member>
        <member name="T:Standard.WS_EX">
            <summary>
            Window style extended values, WS_EX_*
            </summary>
        </member>
        <member name="T:Standard.DeviceCap">
            <summary>
            GetDeviceCaps nIndex values.
            </summary>
        </member>
        <member name="F:Standard.DeviceCap.BITSPIXEL">
            <summary>Number of bits per pixel
            </summary>
        </member>
        <member name="F:Standard.DeviceCap.PLANES">
            <summary>
            Number of planes
            </summary>
        </member>
        <member name="F:Standard.DeviceCap.LOGPIXELSX">
            <summary>
            Logical pixels inch in X
            </summary>
        </member>
        <member name="F:Standard.DeviceCap.LOGPIXELSY">
            <summary>
            Logical pixels inch in Y
            </summary>
        </member>
        <member name="T:Standard.FOF">
            <summary>
            "FILEOP_FLAGS", FOF_*.
            </summary>
        </member>
        <member name="T:Standard.MF">
            <summary>
            EnableMenuItem uEnable values, MF_*
            </summary>
        </member>
        <member name="F:Standard.MF.DOES_NOT_EXIST">
            <summary>
            Possible return value for EnableMenuItem
            </summary>
        </member>
        <member name="T:Standard.WINDOWTHEMEATTRIBUTETYPE">
            <summary>Specifies the type of visual style attribute to set on a window.</summary>
        </member>
        <member name="F:Standard.WINDOWTHEMEATTRIBUTETYPE.WTA_NONCLIENT">
            <summary>Non-client area window attributes will be set.</summary>
        </member>
        <member name="T:Standard.DWMFLIP3D">
            <summary>
            DWMFLIP3DWINDOWPOLICY.  DWMFLIP3D_*
            </summary>
        </member>
        <member name="T:Standard.DWMNCRP">
            <summary>
            DWMNCRENDERINGPOLICY. DWMNCRP_*
            </summary>
        </member>
        <member name="T:Standard.DWMWA">
            <summary>
            DWMWINDOWATTRIBUTE.  DWMWA_*
            </summary>
        </member>
        <member name="T:Standard.WTNCA">
            <summary>
            WindowThemeNonClientAttributes
            </summary>
        </member>
        <member name="F:Standard.WTNCA.NODRAWCAPTION">
            <summary>Prevents the window caption from being drawn.</summary>
        </member>
        <member name="F:Standard.WTNCA.NODRAWICON">
            <summary>Prevents the system icon from being drawn.</summary>
        </member>
        <member name="F:Standard.WTNCA.NOSYSMENU">
            <summary>Prevents the system icon menu from appearing.</summary>
        </member>
        <member name="F:Standard.WTNCA.NOMIRRORHELP">
            <summary>Prevents mirroring of the question mark, even in right-to-left (RTL) layout.</summary>
        </member>
        <member name="F:Standard.WTNCA.VALIDBITS">
            <summary> A mask that contains all the valid bits.</summary>
        </member>
        <member name="T:Standard.SWP">
            <summary>
            SetWindowPos options
            </summary>
        </member>
        <member name="T:Standard.SW">
            <summary>
            ShowWindow options
            </summary>
        </member>
        <member name="F:Standard.SC.F_ISSECURE">
            <summary>
            SCF_ISSECURE
            </summary>
        </member>
        <member name="T:Standard.Status">
            <summary>
            GDI+ Status codes
            </summary>
        </member>
        <member name="T:Standard.MSGFLT">
            <summary>
            MSGFLT_*.  New in Vista.  Realiased in Windows 7.
            </summary>
        </member>
        <member name="T:Standard.NIM">
            <summary>
            Shell_NotifyIcon messages.  NIM_*
            </summary>
        </member>
        <member name="T:Standard.SHARD">
            <summary>
            SHAddToRecentDocuments flags.  SHARD_*
            </summary>
        </member>
        <member name="T:Standard.NIF">
            <summary>
            Shell_NotifyIcon flags.  NIF_*
            </summary>
        </member>
        <member name="F:Standard.NIF.REALTIME">
            <summary>
            Vista only.
            </summary>
        </member>
        <member name="F:Standard.NIF.SHOWTIP">
            <summary>
            Vista only.
            </summary>
        </member>
        <member name="T:Standard.NIIF">
            <summary>
            Shell_NotifyIcon info flags.  NIIF_*
            </summary>
        </member>
        <member name="F:Standard.NIIF.USER">
            <summary>XP SP2 and later.</summary>
        </member>
        <member name="F:Standard.NIIF.NOSOUND">
            <summary>XP and later.</summary>
        </member>
        <member name="F:Standard.NIIF.LARGE_ICON">
            <summary>Vista and later.</summary>
        </member>
        <member name="F:Standard.NIIF.NIIF_RESPECT_QUIET_TIME">
            <summary>Windows 7 and later</summary>
        </member>
        <member name="F:Standard.NIIF.XP_ICON_MASK">
            <summary>XP and later.  Native version called NIIF_ICON_MASK.</summary>
        </member>
        <member name="T:Standard.AC">
            <summary>
            AC_*
            </summary>
        </member>
        <member name="F:Standard.NOTIFYICONDATA.dwState">
            <summary>
            The state of the icon.  There are two flags that can be set independently.
            NIS_HIDDEN = 1.  The icon is hidden.
            NIS_SHAREDICON = 2.  The icon is shared.
            </summary>
        </member>
        <member name="F:Standard.SHARDAPPIDINFOIDLIST.pidl">
            <summary>The idlist for the shell item that should be added to the recent docs folder.</summary>
        </member>
        <member name="F:Standard.SHARDAPPIDINFOIDLIST.pszAppID">
            <summary>The id of the application that should be associated with this recent doc.</summary>
        </member>
        <member name="T:Standard.WTA_OPTIONS">
            <summary>Defines options that are used to set window visual style attributes.</summary>
        </member>
        <member name="F:Standard.WTA_OPTIONS.dwFlags">
            <summary>
            A combination of flags that modify window visual style attributes.
            Can be a combination of the WTNCA constants.
            </summary>
        </member>
        <member name="F:Standard.WTA_OPTIONS.dwMask">
            <summary>
            A bitmask that describes how the values specified in dwFlags should be applied.
            If the bit corresponding to a value in dwFlags is 0, that flag will be removed.
            If the bit is 1, the flag will be added.
            </summary>
        </member>
        <member name="F:Standard.MARGINS.cxLeftWidth">
            <summary>Width of left border that retains its size.</summary>
        </member>
        <member name="F:Standard.MARGINS.cxRightWidth">
            <summary>Width of right border that retains its size.</summary>
        </member>
        <member name="F:Standard.MARGINS.cyTopHeight">
            <summary>Height of top border that retains its size.</summary>
        </member>
        <member name="F:Standard.MARGINS.cyBottomHeight">
            <summary>Height of bottom border that retains its size.</summary>
        </member>
        <member name="T:Standard.WndProc">
            <summary>Delegate declaration that matches native WndProc signatures.</summary>
        </member>
        <member name="T:Standard.MessageHandler">
            <summary>Delegate declaration that matches managed WndProc signatures.</summary>
        </member>
        <member name="M:Standard.NativeMethods.SetWindowThemeAttribute(System.IntPtr,Standard.WINDOWTHEMEATTRIBUTETYPE,Standard.WTA_OPTIONS@,System.UInt32)">
            <summary>
            Sets attributes to control how visual styles are applied to a specified window.
            </summary>
            <param name="hwnd">
            Handle to a window to apply changes to.
            </param>
            <param name="eAttribute">
            Value of type WINDOWTHEMEATTRIBUTETYPE that specifies the type of attribute to set.
            The value of this parameter determines the type of data that should be passed in the pvAttribute parameter.
            Can be the following value:
            <list>WTA_NONCLIENT (Specifies non-client related attributes).</list>
            pvAttribute must be a pointer of type WTA_OPTIONS.
            </param>
            <param name="pvAttribute">
            A pointer that specifies attributes to set. Type is determined by the value of the eAttribute value.
            </param>
            <param name="cbAttribute">
            Specifies the size, in bytes, of the data pointed to by pvAttribute.
            </param>
        </member>
        <member name="M:Standard.NativeMethods._SystemParametersInfo_NONCLIENTMETRICS(Standard.SPI,System.Int32,Standard.NONCLIENTMETRICS@,Standard.SPIF)">
            <summary>Overload of SystemParametersInfo for getting and setting NONCLIENTMETRICS.</summary>
        </member>
        <member name="M:Standard.NativeMethods._SystemParametersInfo_HIGHCONTRAST(Standard.SPI,System.Int32,Standard.HIGHCONTRAST@,Standard.SPIF)">
            <summary>Overload of SystemParametersInfo for getting and setting HIGHCONTRAST.</summary>
        </member>
        <member name="M:Standard.NativeMethods.SetCurrentProcessExplicitAppUserModelID(System.String)">
            <summary>
            Sets the User Model AppID for the current process, enabling Windows to retrieve this ID
            </summary>
            <param name="AppID"></param>
        </member>
        <member name="M:Standard.NativeMethods.GetCurrentProcessExplicitAppUserModelID(System.String@)">
            <summary>
            Retrieves the User Model AppID that has been explicitly set for the current process via SetCurrentProcessExplicitAppUserModelID
            </summary>
            <param name="AppID"></param>
        </member>
        <member name="T:Standard.AL">
            <summary>ASSOCIATIONLEVEL, AL_*</summary>
        </member>
        <member name="T:Standard.AT">
            <summary>ASSOCIATIONTYPE, AT_*</summary>
        </member>
        <member name="T:Standard.FDAP">
            <summary>FileDialog AddPlace options.  FDAP_*</summary>
        </member>
        <member name="T:Standard.FOS">
            <summary>IFileDialog options.  FOS_*</summary>
        </member>
        <member name="T:Standard.FDEOR">
            <summary>FDE_OVERWRITE_RESPONSE.  FDEOR_*</summary>
        </member>
        <member name="T:Standard.FDESVR">
            <summary>FDE_SHAREVIOLATION_RESPONSE.  FDESVR_*</summary>
        </member>
        <member name="T:Standard.SIATTRIBFLAGS">
            <summary>ShellItem attribute flags.  SIATTRIBFLAGS_*</summary>
        </member>
        <member name="T:Standard.STPF">
            <summary>
            Flags for SetTabProperties.  STPF_*
            </summary>
            <remarks>The native enum was called STPFLAG.</remarks>
        </member>
        <member name="T:Standard.TBPF">
            <summary>
            Flags for Setting Taskbar Progress state.  TBPF_*
            </summary>
            <remarks>
            The native enum was called TBPFLAG.
            </remarks>
        </member>
        <member name="T:Standard.THB">
            <summary>
            THUMBBUTTON mask.  THB_*
            </summary>
        </member>
        <member name="T:Standard.THBF">
            <summary>
            THUMBBUTTON flags.  THBF_*
            </summary>
        </member>
        <member name="T:Standard.GPS">
            <summary>
            GetPropertyStoreFlags.  GPS_*.
            </summary>
            <remarks>
            These are new for Vista, but are used in downlevel components
            </remarks>
        </member>
        <member name="T:Standard.KDC">
            <summary>
            KNOWNDESTCATEGORY.  KDC_*
            </summary>
        </member>
        <member name="F:Standard.SFGAO.CANCOPY">
            <summary>Objects can be copied</summary>
            <remarks>DROPEFFECT_COPY</remarks>
        </member>
        <member name="F:Standard.SFGAO.CANMOVE">
            <summary>Objects can be moved</summary>
            <remarks>DROPEFFECT_MOVE</remarks>
        </member>
        <member name="F:Standard.SFGAO.CANLINK">
            <summary>Objects can be linked</summary>
            <remarks>
            DROPEFFECT_LINK.
            
            If this bit is set on an item in the shell folder, a
            'Create Shortcut' menu item will be added to the File
            menu and context menus for the item.  If the user selects
            that command, your IContextMenu::InvokeCommand() will be called
            with 'link'.
            That flag will also be used to determine if 'Create Shortcut'
            should be added when the item in your folder is dragged to another
            folder.
            </remarks>
        </member>
        <member name="F:Standard.SFGAO.STORAGE">
            <summary>supports BindToObject(IID_IStorage)</summary>
        </member>
        <member name="F:Standard.SFGAO.CANRENAME">
            <summary>Objects can be renamed</summary>
        </member>
        <member name="F:Standard.SFGAO.CANDELETE">
            <summary>Objects can be deleted</summary>
        </member>
        <member name="F:Standard.SFGAO.HASPROPSHEET">
            <summary>Objects have property sheets</summary>
        </member>
        <member name="F:Standard.SFGAO.DROPTARGET">
            <summary>Objects are drop target</summary>
        </member>
        <member name="F:Standard.SFGAO.ENCRYPTED">
            <summary>Object is encrypted (use alt color)</summary>
        </member>
        <member name="F:Standard.SFGAO.ISSLOW">
            <summary>'Slow' object</summary>
        </member>
        <member name="F:Standard.SFGAO.GHOSTED">
            <summary>Ghosted icon</summary>
        </member>
        <member name="F:Standard.SFGAO.LINK">
            <summary>Shortcut (link)</summary>
        </member>
        <member name="F:Standard.SFGAO.SHARE">
            <summary>Shared</summary>
        </member>
        <member name="F:Standard.SFGAO.READONLY">
            <summary>Read-only</summary>
        </member>
        <member name="F:Standard.SFGAO.HIDDEN">
            <summary> Hidden object</summary>
        </member>
        <member name="F:Standard.SFGAO.FILESYSANCESTOR">
            <summary> May contain children with SFGAO_FILESYSTEM</summary>
        </member>
        <member name="F:Standard.SFGAO.FOLDER">
            <summary>Support BindToObject(IID_IShellFolder)</summary>
        </member>
        <member name="F:Standard.SFGAO.FILESYSTEM">
            <summary>Is a win32 file system object (file/folder/root)</summary>
        </member>
        <member name="F:Standard.SFGAO.HASSUBFOLDER">
            <summary>May contain children with SFGAO_FOLDER (may be slow)</summary>
        </member>
        <member name="F:Standard.SFGAO.VALIDATE">
            <summary>Invalidate cached information (may be slow)</summary>
        </member>
        <member name="F:Standard.SFGAO.REMOVABLE">
            <summary>Is this removeable media?</summary>
        </member>
        <member name="F:Standard.SFGAO.COMPRESSED">
            <summary> Object is compressed (use alt color)</summary>
        </member>
        <member name="F:Standard.SFGAO.BROWSABLE">
            <summary>Supports IShellFolder, but only implements CreateViewObject() (non-folder view)</summary>
        </member>
        <member name="F:Standard.SFGAO.NONENUMERATED">
            <summary>Is a non-enumerated object (should be hidden)</summary>
        </member>
        <member name="F:Standard.SFGAO.NEWCONTENT">
            <summary>Should show bold in explorer tree</summary>
        </member>
        <member name="F:Standard.SFGAO.CANMONIKER">
            <summary>Obsolete</summary>
        </member>
        <member name="F:Standard.SFGAO.HASSTORAGE">
            <summary>Obsolete</summary>
        </member>
        <member name="F:Standard.SFGAO.STREAM">
            <summary>Supports BindToObject(IID_IStream)</summary>
        </member>
        <member name="F:Standard.SFGAO.STORAGEANCESTOR">
            <summary>May contain children with SFGAO_STORAGE or SFGAO_STREAM</summary>
        </member>
        <member name="F:Standard.SFGAO.STORAGECAPMASK">
            <summary>For determining storage capabilities, ie for open/save semantics</summary>
        </member>
        <member name="F:Standard.SFGAO.PKEYSFGAOMASK">
            <summary>
            Attributes that are masked out for PKEY_SFGAOFlags because they are considered
            to cause slow calculations or lack context
            (SFGAO_VALIDATE | SFGAO_ISSLOW | SFGAO_HASSUBFOLDER and others)
            </summary>
        </member>
        <member name="T:Standard.SHCONTF">
            <summary>
            IShellFolder::EnumObjects grfFlags bits.  Also called SHCONT
            </summary>
        </member>
        <member name="T:Standard.SHGDN">
            <summary>
            IShellFolder::GetDisplayNameOf/SetNameOf uFlags.  Also called SHGDNF.
            </summary>
            <remarks>
            For compatibility with SIGDN, these bits must all sit in the LOW word.
            </remarks>
        </member>
        <member name="T:Standard.SICHINT">
            <summary>
            SHELLITEMCOMPAREHINTF.  SICHINT_*.
            </summary>
        </member>
        <member name="F:Standard.SICHINT.DISPLAY">
            <summary>iOrder based on display in a folder view</summary>
        </member>
        <member name="F:Standard.SICHINT.ALLFIELDS">
            <summary>exact instance compare</summary>
        </member>
        <member name="F:Standard.SICHINT.CANONICAL">
            <summary>iOrder based on canonical name (better performance)</summary>
        </member>
        <member name="T:Standard.SIGDN">
            <summary>
            ShellItem enum.  SIGDN_*.
            </summary>
        </member>
        <member name="T:Standard.STR_GPS">
             <summary>
             STR_GPS_*
             </summary>
             <remarks>
             When requesting a property store through IShellFolder, you can specify the equivalent of
             GPS_DEFAULT by passing in a null IBindCtx parameter.
            
             You can specify the equivalent of GPS_READWRITE by passing a mode of STGM_READWRITE | STGM_EXCLUSIVE
             in the bind context
            
             Here are the string versions of GPS_ flags, passed to IShellFolder::BindToObject() via IBindCtx::RegisterObjectParam()
             These flags are valid when requesting an IPropertySetStorage or IPropertyStore handler
            
             The meaning of these flags are described above.
            
             There is no STR_ equivalent for GPS_TEMPORARY because temporary property stores
             are provided by IShellItem2 only -- not by the underlying IShellFolder.
             </remarks>
        </member>
        <member name="F:Standard.THUMBBUTTON.THBN_CLICKED">
            <summary>
            WPARAM value for a THUMBBUTTON being clicked.
            </summary>
        </member>
        <member name="F:Standard.PKEY._fmtid">
            <summary>fmtid</summary>
        </member>
        <member name="F:Standard.PKEY._pid">
            <summary>pid</summary>
        </member>
        <member name="F:Standard.PKEY.Title">
            <summary>PKEY_Title</summary>
        </member>
        <member name="F:Standard.PKEY.AppUserModel_ID">
            <summary>PKEY_AppUserModel_ID</summary>
        </member>
        <member name="F:Standard.PKEY.AppUserModel_IsDestListSeparator">
            <summary>PKEY_AppUserModel_IsDestListSeparator</summary>
        </member>
        <member name="F:Standard.PKEY.AppUserModel_RelaunchCommand">
            <summary>PKEY_AppUserModel_RelaunchCommand</summary>
        </member>
        <member name="F:Standard.PKEY.AppUserModel_RelaunchDisplayNameResource">
            <summary>PKEY_AppUserModel_RelaunchDisplayNameResource</summary>
        </member>
        <member name="F:Standard.PKEY.AppUserModel_RelaunchIconResource">
            <summary>PKEY_AppUserModel_RelaunchIconResource</summary>
        </member>
        <member name="T:Standard.IObjectArray">
            <summary>Unknown Object Array</summary>
        </member>
        <member name="T:Standard.IShellItem">
            <summary>
            Shell Namespace helper
            </summary>
        </member>
        <member name="T:Standard.IShellItem2">
            <summary>
            Shell Namespace helper 2
            </summary>
        </member>
        <member name="M:Standard.ITaskbarList.HrInit">
            <summary>
            This function must be called first to validate use of other members.
            </summary>
        </member>
        <member name="M:Standard.ITaskbarList.AddTab(System.IntPtr)">
            <summary>
            This function adds a tab for hwnd to the taskbar.
            </summary>
            <param name="hwnd">The HWND for which to add the tab.</param>
        </member>
        <member name="M:Standard.ITaskbarList.DeleteTab(System.IntPtr)">
            <summary>
            This function deletes a tab for hwnd from the taskbar.
            </summary>
            <param name="hwnd">The HWND for which the tab is to be deleted.</param>
        </member>
        <member name="M:Standard.ITaskbarList.ActivateTab(System.IntPtr)">
            <summary>
            This function activates the tab associated with hwnd on the taskbar.
            </summary>
            <param name="hwnd">The HWND for which the tab is to be actuvated.</param>
        </member>
        <member name="M:Standard.ITaskbarList.SetActiveAlt(System.IntPtr)">
            <summary>
            This function marks hwnd in the taskbar as the active tab.
            </summary>
            <param name="hwnd">The HWND to activate.</param>
        </member>
        <member name="M:Standard.ITaskbarList2.MarkFullscreenWindow(System.IntPtr,System.Boolean)">
            <summary>
            Marks a window as full-screen.
            </summary>
            <param name="hwnd">The handle of the window to be marked.</param>
            <param name="fFullscreen">A Boolean value marking the desired full-screen status of the window.</param>
            <remarks>
            Setting the value of fFullscreen to true, the Shell treats this window as a full-screen window, and the taskbar
            is moved to the bottom of the z-order when this window is active.  Setting the value of fFullscreen to false
            removes the full-screen marking, but <i>does not</i> cause the Shell to treat the window as though it were
            definitely not full-screen.  With a false fFullscreen value, the Shell depends on its automatic detection facility
            to specify how the window should be treated, possibly still flagging the window as full-screen.
            </remarks>
        </member>
        <member name="T:Standard.IApplicationDocumentLists">
            <summary>
            Allows an application to retrieve the most recent and frequent documents opened in that app, as reported via SHAddToRecentDocs
            </summary>
        </member>
        <member name="M:Standard.IApplicationDocumentLists.SetAppID(System.String)">
            <summary>
            Set the App User Model ID for the application retrieving this list.  If an AppID is not provided via this method,
            the system will use a heuristically determined ID.  This method must be called before GetList. 
            </summary>
            <param name="pszAppID">App Id.</param>
        </member>
        <member name="M:Standard.IApplicationDocumentLists.GetList(Standard.APPDOCLISTTYPE,System.UInt32,System.Guid@)">
            <summary>
            Retrieve an IEnumObjects or IObjectArray for IShellItems and/or IShellLinks. 
            Items may appear in both the frequent and recent lists.  
            </summary>
            <param name="??"></param>
            <returns></returns>
        </member>
        <member name="T:Standard.IObjectWithAppUserModelId">
            <summary>
            Provides access to the App User Model ID on objects supporting this value.
            </summary>
        </member>
        <member name="T:Standard.IObjectWithProgId">
            <summary>
            Provides access to the ProgID associated with an object 
            </summary>
        </member>
        <member name="T:Standard.ComStream">
            <summary>
            Wraps an IStream interface pointer from COM into a form consumable by .Net.
            </summary>
            <remarks>
            This implementation is immutable, though it's possible that the underlying
            stream can be changed in another context.
            </remarks>
        </member>
        <member name="M:Standard.ComStream.#ctor(System.Runtime.InteropServices.ComTypes.IStream@)">
            <summary>
            Wraps a native IStream interface into a CLR Stream subclass.
            </summary>
            <param name="stream">
            The stream that this object wraps.
            </param>
            <remarks>
            Note that the parameter is passed by ref.  On successful creation it is
            zeroed out to the caller.  This object becomes responsible for the lifetime
            management of the wrapped IStream.
            </remarks>
        </member>
        <member name="T:Standard.ManagedIStream">
            <summary>
            Wraps a managed stream instance into an interface pointer consumable by COM.
            </summary>
        </member>
        <member name="M:Standard.ManagedIStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the ManagedIStream class with the specified managed Stream object.
            </summary>
            <param name="source">
            The stream that this IStream reference is wrapping.
            </param>
        </member>
        <member name="M:Standard.ManagedIStream.Clone(System.Runtime.InteropServices.ComTypes.IStream@)">
            <summary>
            Creates a new stream object with its own seek pointer that
            references the same bytes as the original stream. 
            </summary>
            <param name="ppstm">
            When this method returns, contains the new stream object. This parameter is passed uninitialized.
            </param>
            <remarks>
            For more information, see the existing documentation for IStream::Clone in the MSDN library.
            This class doesn't implement Clone.  A COMException is thrown if it is used.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Commit(System.Int32)">
            <summary>
            Ensures that any changes made to a stream object that is open in transacted
            mode are reflected in the parent storage. 
            </summary>
            <param name="grfCommitFlags">
            A value that controls how the changes for the stream object are committed. 
            </param>
            <remarks>
            For more information, see the existing documentation for IStream::Commit in the MSDN library.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)">
            <summary>
            Copies a specified number of bytes from the current seek pointer in the
            stream to the current seek pointer in another stream. 
            </summary>
            <param name="pstm">
            A reference to the destination stream. 
            </param>
            <param name="cb">
            The number of bytes to copy from the source stream. 
            </param>
            <param name="pcbRead">
            On successful return, contains the actual number of bytes read from the source.
            (Note the native signature is to a ULARGE_INTEGER*, so 64 bits are written
            to this parameter on success.)
            </param>
            <param name="pcbWritten">
            On successful return, contains the actual number of bytes written to the destination.
            (Note the native signature is to a ULARGE_INTEGER*, so 64 bits are written
            to this parameter on success.)
            </param>
        </member>
        <member name="M:Standard.ManagedIStream.LockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>
            Restricts access to a specified range of bytes in the stream. 
            </summary>
            <param name="libOffset">
            The byte offset for the beginning of the range. 
            </param>
            <param name="cb">
            The length of the range, in bytes, to restrict.
            </param>
            <param name="dwLockType">
            The requested restrictions on accessing the range.
            </param>
            <remarks>
            For more information, see the existing documentation for IStream::LockRegion in the MSDN library.
            This class doesn't implement LockRegion.  A COMException is thrown if it is used.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Read(System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            Reads a specified number of bytes from the stream object into memory starting at the current seek pointer. 
            </summary>
            <param name="pv">
            When this method returns, contains the data read from the stream. This parameter is passed uninitialized.
            </param>
            <param name="cb">
            The number of bytes to read from the stream object. 
            </param>
            <param name="pcbRead">
            A pointer to a ULONG variable that receives the actual number of bytes read from the stream object.
            </param>
            <remarks>
            For more information, see the existing documentation for ISequentialStream::Read in the MSDN library.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Revert">
            <summary>
            Discards all changes that have been made to a transacted stream since the last Commit call.
            </summary>
            <remarks>
            This class doesn't implement Revert.  A COMException is thrown if it is used.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Seek(System.Int64,System.Int32,System.IntPtr)">
            <summary>
            Changes the seek pointer to a new location relative to the beginning of the
            stream, to the end of the stream, or to the current seek pointer.
            </summary>
            <param name="dlibMove">
            The displacement to add to dwOrigin.
            </param>
            <param name="dwOrigin">
            The origin of the seek. The origin can be the beginning of the file, the current seek pointer, or the end of the file. 
            </param>
            <param name="plibNewPosition">
            On successful return, contains the offset of the seek pointer from the beginning of the stream.
            (Note the native signature is to a ULARGE_INTEGER*, so 64 bits are written
            to this parameter on success.)
            </param>
            <remarks>
            For more information, see the existing documentation for IStream::Seek in the MSDN library.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.SetSize(System.Int64)">
            <summary>
            Changes the size of the stream object. 
            </summary>
            <param name="libNewSize">
            The new size of the stream as a number of bytes. 
            </param>
            <remarks>
            For more information, see the existing documentation for IStream::SetSize in the MSDN library.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)">
            <summary>
            Retrieves the STATSTG structure for this stream. 
            </summary>
            <param name="pstatstg">
            When this method returns, contains a STATSTG structure that describes this stream object.
            This parameter is passed uninitialized.
            </param>
            <param name="grfStatFlag">
            Members in the STATSTG structure that this method does not return, thus saving some memory allocation operations. 
            </param>
        </member>
        <member name="M:Standard.ManagedIStream.UnlockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>
            Removes the access restriction on a range of bytes previously restricted with the LockRegion method.
            </summary>
            <param name="libOffset">The byte offset for the beginning of the range.
            </param>
            <param name="cb">
            The length, in bytes, of the range to restrict.
            </param>
            <param name="dwLockType">
            The access restrictions previously placed on the range.
            </param>
            <remarks>
            For more information, see the existing documentation for IStream::UnlockRegion in the MSDN library.
            This class doesn't implement UnlockRegion.  A COMException is thrown if it is used.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Write(System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            Writes a specified number of bytes into the stream object starting at the current seek pointer.
            </summary>
            <param name="pv">
            The buffer to write this stream to.
            </param>
            <param name="cb">
            The number of bytes to write to the stream. 
            </param>
            <param name="pcbWritten">
            On successful return, contains the actual number of bytes written to the stream object. 
            If the caller sets this pointer to null, this method does not provide the actual number
            of bytes written.
            </param>
        </member>
        <member name="M:Standard.ManagedIStream.Dispose">
            <summary>
            Releases resources controlled by this object.
            </summary>
            <remarks>
            Dispose can be called multiple times, but trying to use the object
            after it has been disposed will generally throw ObjectDisposedExceptions.
            </remarks>
        </member>
        <member name="M:Standard.DpiHelper.LogicalPixelsToDevice(System.Windows.Point)">
            <summary>
            Convert a point in device independent pixels (1/96") to a point in the system coordinates.
            </summary>
            <param name="logicalPoint">A point in the logical coordinate system.</param>
            <returns>Returns the parameter converted to the system's coordinates.</returns>
        </member>
        <member name="M:Standard.DpiHelper.DevicePixelsToLogical(System.Windows.Point)">
            <summary>
            Convert a point in system coordinates to a point in device independent pixels (1/96").
            </summary>
            <param name="logicalPoint">A point in the physical coordinate system.</param>
            <returns>Returns the parameter converted to the device independent coordinate system.</returns>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyIconAll">
            <summary>
            AyIconControl.xaml 的交互逻辑
            2015-4-13 13:20:09 杨洋
            目标:支持各种图像展示的一个控件
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyIconAll.Stroke">
            <summary>
            控制path或者fontawesome的Stroke
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyIconAll.IsFontStrokeLabel">
            <summary>
            是否描边字体
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyIconAll.StrokeThickness">
            <summary>
            控制path或者fontawesome的StrokeThickness
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyIconAll.ImageStretch">
            <summary>
            ayui 3.5增加
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyIconAll.Icon">
            <summary>
            支持jpg,png
            支持gif
            支持@开头的fontawesome字体
            支持path_   此名字来自application.xml中
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.IsResizeColumnWidth">
            <summary>
            是否拖拉过 列头thumb,拖动过，就是true，对百分比布局将不再生效
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.PercentWidthSupport">
            <summary>
            是否支持百分比宽度
            2018-5-3 15:09:44
            AY
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.TableViewStatus">
            <summary>
            表状态，  normal和append状态
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyTableView.RowEditBegin">
            <summary>
            行开始编辑时候
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyTableView.RowClickModes">
            <summary>
            行单击模式
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyTableView.RowClickModes.Select">
            <summary>
            选择，默认值
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyTableView.RowClickModes.RowEdit">
            <summary>
            单击编辑 ,暂不支持
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyTableView.RowClickModes.CellEdit">
            <summary>
            单元格编辑,暂不支持
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyTableView.RowClickModes.MannalRowEdit">
            <summary>
            手动行编辑
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyTableView.RowClickModes.RowDetail">
            <summary>
            行详情
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.RowClickMode">
            <summary>
            行单击模式
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyTableView.RowEditEnd">
            <summary>
            行编辑完
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyTableView.CellEditBegin">
            <summary>
            行开始编辑时候
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyTableView.CellEditEnd">
            <summary>
            单元编辑完
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyTableView.DoubleClickRow">
            <summary>
            行双击事件
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTableView.CreateColumns(Ay.Framework.WPF.Controls.AyTableViewColumn,System.Double@)">
            <summary>
            根据用户的列创建自己的最后一排列
            </summary>
            <param name="col1"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTableView.ResetSelectedItems">
            <summary>
            重置选择
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.ColumnLastClickOrderBy">
            <summary>
            最后1次单击的排序列
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.OrderCondition">
            <summary>
            排序条件   field asc, 或者 field desc
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTableView.CreateColumnsPercent(Ay.Framework.WPF.Controls.AyTableViewColumn,System.Double@)">
            <summary>
            根据用户的列创建自己的最后一排列
            </summary>
            <param name="col1"></param>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.SYWIDTH">
            <summary>
            剩余的宽度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.SYWIDTH33">
            <summary>
            数字宽度占用的总宽度,由于未初始化完,整个aytableview是拿不到值
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.DoubleSelectedItem">
            <summary>
            双击时候用于绑定的选中对象
            AY
            2017-12-4 16:59:25
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.AlterLineBrushSupport">
            <summary>
            是否支持各行换色
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.SelectedItem">
            <summary>
            当前选中的对象
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.SelectedItems">
            <summary>
            当前选中的多个
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.HeadRowCount">
            <summary>
            列头行数，默认1
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.RowHeight">
            <summary>
            行高
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.MinRowHeight">
            <summary>
            最小行高
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.MaxRowHeight">
            <summary>
            最大行高
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.AlterLineBrush">
            <summary>
            隔行换色 2017-12-1 21:35:45
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.HasIndexColumn">
            <summary>
            是否有索引列
            ay
            2017-12-2 09:30:31
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.RowSelectedBrush">
            <summary>
            行选中颜色
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.HeaderStaticForeground">
            <summary>
            头部文字默认颜色
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.HeaderHoverBackground">
            <summary>
            头部移上去背景色
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.HeaderSortActive">
            <summary>
            都不排序 按钮激活 颜色
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.OrderBySupport">
            <summary>
            是否支持排序，控制是否显示
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.HeadVisibility">
            <summary>
            列头可见性
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableView.IndexColumnWidth">
            <summary>
            索引列宽度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewCell.CellTextWrapping">
            <summary>
            单元格内容换行方式
            2017-11-29 22:05:43
            AY
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewCellsPresenter.AyTableViewRowStatus">
            <summary>
            行状态
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewCellsPresenter.IsAlterRowLine">
            <summary>
            是否是偶数行
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewCellsPresenter.IsEdit">
            <summary>
            是否编辑 2017-12-15 17:22:09
            虚拟化问题
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTableViewCellsPresenter.OpenEditRow(System.Boolean)">
            <summary>
            开始编辑说
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTableViewCellsPresenter.CloseEditRow(System.Boolean)">
            <summary>
            关闭
            </summary>
        </member>
        <!-- 对于成员“P:Ay.Framework.WPF.Controls.AyTableViewColumn.PercentWidth”忽略有格式错误的 XML 注释 -->
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewColumn.ColSpan">
            <summary>
            位置列，用于组
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewColumn.RowSpan">
            <summary>
            位置行
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewColumn.CellContentStringFormat">
            <summary>
            ay 2017-11-29 19:01:27 格式化cell
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewColumn.ResizeColumn">
            <summary>
            可以调整列宽
            2017-12-1 13:09:01
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewColumn.HeaderMargin">
             <summary>
             列单元格的内容margin
            2017-11-29 20:35:29
             </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewColumn.CellMargin">
            <summary>
            cell单元格的内容margin
            2017-11-29 20:32:03
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewColumn.ColumnFocusBrush">
            <summary>
            聚焦时候颜色
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewColumn.CellEditTemplate">
            <summary>
            编辑模板
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewColumn.CellTextWrapping">
            <summary>
            单元格内容换行方式
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewColumnHeader.ColumnHeight">
            <summary>
            列高,单倍列高
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.TableViewColumnCollection">
            <summary>
            列集合
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewRowEventArgs.Data">
            <summary>
            行对象
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewCellEventArgs.Data">
            <summary>
            行对象
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTableViewSelectionAdorner.#ctor(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Initializes a new instance of the AyTableViewSelectionAdorner class.
            </summary>
            <param name="parent">
            The UIElement which this instance will overlay.
            </param>
            <exception cref="T:System.ArgumentNullException">parent is null.</exception>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTableViewSelectionAdorner.SelectionArea">
            <summary>Gets or sets the area of the selection rectangle.</summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTableViewSelectionAdorner.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTableViewItemsControlSelector.#ctor(System.Windows.Controls.ItemsControl)">
            <summary>
            Initializes a new instance of the AyTableViewItemsControlSelector class.
            </summary>
            <param name="itemsControl">
            The control that contains the items to select.
            </param>
            <exception cref="T:System.ArgumentNullException">itemsControl is null.</exception>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTableViewItemsControlSelector.Reset">
            <summary>
            Resets the cached information, allowing a new selection to begin.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTableViewItemsControlSelector.Scroll(System.Double,System.Double)">
            <summary>
            Scrolls the selection area by the specified amount.
            </summary>
            <param name="x">The horizontal scroll amount.</param>
            <param name="y">The vertical scroll amount.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTableViewItemsControlSelector.UpdateSelection(System.Windows.Rect)">
            <summary>
            Updates the controls selection based on the specified area.
            </summary>
            <param name="area">
            The selection area, relative to the control passed in the contructor.
            </param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyTableViewSelector.EnabledProperty">
            <summary>Identifies the IsEnabled attached property.</summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTableViewSelector.GetEnabled(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the IsEnabled attached property that indicates
            whether a selection rectangle can be used to select items or not.
            </summary>
            <param name="obj">Object on which to get the property.</param>
            <returns>
            true if items can be selected by a selection rectangle; otherwise, false.
            </returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTableViewSelector.SetEnabled(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the IsEnabled attached property that indicates
            whether a selection rectangle can be used to select items or not.
            </summary>
            <param name="obj">Object on which to set the property.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyTooltip">
            <summary>
            AyTooltip.xaml 的交互逻辑
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTooltip.Background">
            <summary>
            重写背景色 2015-10-8 15:10:58
            ay 杨洋
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTooltip.Placement">
            <summary>
            三角形位置
            ay 杨洋
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AySetProperty.PropertyValue">
            <summary>
            The value to set the property to.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AySetProperty.TargetObject">
            <summary>
            Specifies the object upon which to set the property.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AySplitView.PaneProperty">
            <summary>
             Identifies the <see cref="P:Ay.Framework.WPF.Controls.AySplitView.Pane"/> dependency property.
            </summary>
            <value>The identifier for the Pane dependency property.</value>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AySplitView.CompactPaneLength">
            <summary>
            Gets or sets the width of the SplitView pane in its compact display mode.
            </summary>
            <value>
            The width of the pane in it's compact display mode. The default is 48 device-independent
            pixel (DIP) (defined by the SplitViewCompactPaneThemeLength resource).
            </value>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AySplitView.CompactPaneLengthProperty">
            <summary>
            Identifies the CompactPaneLength dependency property.
            </summary>
            <value>
            The identifier for the CompactPaneLength dependency property.
            </value>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCheckBoxItemModel.IsChecked">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCheckBoxItemModel.ItemText">
            <summary>
            显示的内容
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCheckBoxItemModel.ItemValue">
            <summary>
            隐藏选中的值
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyCheckBoxList">
            <summary>
            checkbox列表控件 AY 2017-10-20 17:45:33
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCheckBoxList.IsSelectAllChecked">
            <summary>
            返回或设置全选复选框的选中状态
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCheckBoxList.IsHighlight">
            <summary>
            是否高亮，默认不是
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCheckBoxList.Rule">
            <summary>
            规则：AY表达式 , 支持required
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCheckBoxList.ItemsSource">
            <summary>
            生成CheckBox的数据源
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCheckBoxList.SelectedValue">
            <summary>
            选中的Value
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCheckBoxList.SelectedText">
            <summary>
            选中的Text
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCheckBoxList.SelectedObject">
            <summary>
            选中的对象的结合
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyCheckBoxList.CheckAll">
            <summary>
            全选或清空所用选择
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCheckBoxList.IsOpenSelectedFunc">
            <summary>
            是否开启SelectedValue，Text，Object功能，开启后，这3个对象会有值
            2016-12-23 10:32:02
            AY
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyCheckBoxList.UpdateCheckedState">
            <summary>
            根据当前选择的个数来更新全选框的状态
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyComboBox">
            <summary>
            本代码由Aaronyang www.ayjs.net独家拥有，未经允许不许外传
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyComboBox.SearchBoxVisibility">
            <summary>
            下拉框中的SearchBox是否可见
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyComboBox.PanelMinHeight">
            <summary>
            下拉区域最小高度
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyComboBox.Validate">
            <summary>
            验证统一接口
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyComboBox.Rule">
            <summary>
            规则：AY表达式
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyComboBox.ValdiateTextBox(Ay.Framework.WPF.Controls.AyTextBox)">
            <summary>
            验证 提示控制
            </summary>
            <param name="_d"></param>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyComboBox.IsHighlight">
            <summary>
            是否高亮，默认不是
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyComboBox.IsTextMustInDropDown">
            <summary>
            输入的值是不是必须在下拉框里面的，这里不考虑选中后，把文字删掉几个，combobox取值的时候是选中的对象，不要相信Text中的
            作者：A Y
            作者：Aaronyang
            2016-10-07 17:13:50
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyComboBox.IsFirstItemInvalid">
            <summary>
            第一项是否是空项目,如果是空，表示如果用户是required的，如果用户选了第一项，会验证失败的。提示不能为空
            2016-10-03 19:48:01
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyComboBox.IcoVisibility">
            <summary>
            客户端不要设置此属性，因为这是控件字典管理的
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyComboBox.IsTransparentBackground">
            <summary>
            是否是透明背景
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyForm.GetForm(System.Windows.DependencyObject)">
            <summary>
            生日 2016-10-24 07:00:00
            用于绑定提交的表单对象，建议是个容器
            送礼：2016-10-27 05:37:53
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyForm.HandleEnterIsTabChanged(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            AY 2016-8-3 19:53:46 增加
            用于让表单支持，回车等于tab的效果
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.FormBase.AyFormCollection">
            <summary>
            key 是form目标对象  value是一组实现了IAyValidate接口的对象
            生日 2016-10-24 06:05:19
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyFormInput">
            <summary>
            默认普通文本框
            文本框：设置Rule，支持实时验证，设置MaskExpression，输入放大
            文本框提示默认跟随window移动的
            多行文本 设置：IsMultiply="True" 设置水印换行，在Mask属性输入&#x0a;
            密码框使用和绑定：设置 IsPasswordBox="True" PasswordStr="{Binding Password}"
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyFormInput.Validate">
            <summary>
            调用验证
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyFormInput.DragTitleBarWhen">
            <summary>
            2018-1-25 13:19:43 AY 修复 移动 mask的bug
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyFormInput.Rule">
            <summary>
            规则：AY表达式
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyFormInput.ValdiateTextBox(Ay.Framework.WPF.Controls.AyFormInput)">
            <summary>
            验证 提示控制
            </summary>
            <param name="_d"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyFormInput.ConvertToPasswordChar(System.Int32)">
            <summary>
            按照指定的长度生成密码字符
            </summary>
            <param name="length">字符长度</param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyFormInput.GetNumberInt(System.String)">
            
             获取字符串中的数字
            
             字符串
             数字
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyFormInput.Increment">
            <summary>
            2016-9-26 20:10:47
            当IsNumberBox=true时候，设置此项有效，每次增加或者减少的幅度
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyFormInput.IncrementProperty">
            <summary>
            2016-9-26 20:10:47
            当IsNumberBox=true时候，设置此项有效，每次增加或者减少的幅度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyFormInput.IsPasswordBox">
            <summary>
            是否为密码框
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyFormInput.SetEvent">
            <summary>
            定义TextChange事件
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyFormInput.PasswordChar">
            <summary>
            替换明文的单个密码字符
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyFormInput.Password">
            <summary>
            密码字符串
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyFormStatistics">
            <summary>
            AyFormStatistics.xaml 的交互逻辑
            </summary>
            <summary>
            AyFormStatistics
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyFormStatistics.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyPanelAll">
            <summary>
            作者：杨洋
            生日：2016-12-19 14:29:11
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyPanelAll.PanelType">
            <summary>
            容器面板类型
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyPanelAll.WhenPanelTypeChanged(System.Nullable{Ay.Framework.WPF.Controls.AyPanelAllPanelType})">
            <summary>
            作者：AY
            生日:2016-12-19 14:08:12
            </summary>
            <param name="n"></param>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyItemsControlAll.PanelType">
            <summary>
            容器面板类型
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyItemsControlAll.WhenPanelTypeChanged(System.Nullable{Ay.Framework.WPF.Controls.AyPanelAllPanelType})">
            <summary>
            作者：AY
            生日:2016-12-19 14:08:12
            </summary>
            <param name="n"></param>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyRadioBoxList.IsOpenSelectedFunc">
            <summary>
            是否开启SelectedValue，Text，Object功能，开启后，这3个对象会有值
            2016-12-23 10:32:02
            AY
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyRadioBoxList.Rule">
            <summary>
            规则：AY表达式 , 只支持required
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyRadioBoxList.SelectedValue">
            <summary>
            选中的Value
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyRadioBoxList.SelectedText">
            <summary>
            选中的Text
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyRadioBoxList.IsHighlight">
            <summary>
            是否高亮，默认不是
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyRadioBoxList.ItemsSource">
            <summary>
            生成CheckBox的数据源
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AySlider.ThumbStroke">
            <summary>
            控制path或者fontawesome的Stroke
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AySlider.ThumbStrokeThickness">
            <summary>
            控制path或者fontawesome的StrokeThickness
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AySlider.TrackWidth">
            <summary>
            轨道宽度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTextBox.IsHighlight">
            <summary>
            是否高亮，默认不是
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyAnimationButton">
            <summary>
            2015年11月23日15:22:26 
            ay  www.ayjs.net版权所有
            完成
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyAnimationButton.Velocity">
            <summary>
            播放速度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyAnimationButton.MouseEnterRepeatSection">
            <summary>
            2015年12月9日13:29:21 ay增加用于控制循环片段
            鼠标移上去后循环播放片段
            例如6191*28，计算后，6191-firstIndex(9190)等于1，就是第二个图片开始
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyAnimationButton.direction">
            <summary>
            播放方向，大于等于0 正放，小于0，逆放
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyAnimationButton.IsAnimating">
            <summary>
            是否播放中
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyAnimationButton.InitControlSection">
            <summary>
            控件第一次显示时候，播放的片段，规则示例： 2000*20表示从2000开始，播放20帧
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyAnimationButton.IsMouseEventEnabled">
            <summary>
            鼠标移入移出播放是否禁用，默认，true，可以触发
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyAnimationButton.IsRepeatPlay">
            <summary>
            是否重复播放，每次从头放
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyAnimationButton.LoadImageList">
            <summary>
            加载图片到image播放
            ay 2015年11月20日16:06:14
            </summary>
            <param name="firstIndex">第一个索引，例如1，会被处理为00001,最多5位数</param>
            <param name="count">总共多少张</param>
            <param name="width">图片宽</param>
            <param name="height">图片高</param>
            <param name="bpp">多少位，默认是8</param>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyAnimationButtonAdvance">
            <summary>
            AyAnimationButtonAdvance.xaml 的交互逻辑
            </summary>
            <summary>
            AyAnimationButtonAdvance
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyAnimationButtonAdvance.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyAnimationButtonAdvance2">
            <summary>
            AyAnimationButtonAdvance2.xaml 的交互逻辑
            </summary>
            <summary>
            AyAnimationButtonAdvance2
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyAnimationButtonAdvance2.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyIconAllButton">
            <summary>
            aaronyang拥有 2016-8-1 09:22:11 升级
            最近修改记录
            2016-8-1 09:22:04 完成基本的AyIconAllButton类似的功能
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyIconAllButton.IsFontStrokeLabel">
            <summary>
            是否描边字体
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyIconAllSplitButton">
            <summary>
            aaronyang拥有 2016-8-1 09:22:11 升级
            最近修改记录
            2016-8-1 09:22:04 完成基本的AyIconAllSplitButton类似的功能
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyIconAllSplitButton.IsFontStrokeLabel">
            <summary>
            是否描边字体
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyIconAllToggleButton">
            <summary>
            aaronyang拥有 2016-8-1 09:22:11 升级
            最近修改记录
            2016-8-1 09:22:04 完成基本的AyIconAllToggleButton类似的功能
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyIconAllToggleButton.IsFontStrokeLabel">
            <summary>
            是否描边字体
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyImageButton.Icon">
            <summary>
            Image4Button
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyImageToggleButton.Icon">
            <summary>
            Image4Button
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyNavRadioButton.Icon">
            <summary>
            Image4Button
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyRefreshButton">
            <summary>
            2016-10-4 23:08:09
            作者 AY
            用于远程刷新，冷却时间3秒
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyRefreshButton.ActiveStep">
            <summary>
             等待按钮 0
             1 代表 busy中
             2 代表 等待完成
             最后一步又变成0
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AySplitButton">
            <summary>
            Implemetation of a Split Button
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AySplitButton.#cctor">
            <summary>
            Static Constructor
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AySplitButton.OnClick">
            <summary>
                Handles the Base Buttons OnClick event
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AySplitButton.Items">
            <summary>
            The Split Button's Items property maps to the base classes ContextMenu.Items property
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AySplitButton.IsContextMenuOpen">
            <summary>
            Gets or sets the IsContextMenuOpen property. 
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AySplitButton.Placement">
            <summary>
            Placement of the Context menu
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AySplitButton.PlacementRectangle">
            <summary>
            PlacementRectangle of the Context menu
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AySplitButton.HorizontalOffset">
            <summary>
            HorizontalOffset of the Context menu
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AySplitButton.VerticalOffset">
            <summary>
            VerticalOffset of the Context menu
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AySplitButton.Mode">
            <summary>
            Defines the Mode of operation of the Button
            </summary>
            <remarks>
                The AySplitButton two Modes are
                Split (default),    - the button has two parts, a normal button and a dropdown which exposes the ContextMenu
                Dropdown            - the button acts like a combobox, clicking anywhere on the button opens the Context Menu
            </remarks>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AySplitButton.OnPlacementChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Placement Property changed callback, pass the value through to the buttons context menu
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AySplitButton.OnPlacementRectangleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PlacementRectangle Property changed callback, pass the value through to the buttons context menu
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AySplitButton.OnHorizontalOffsetChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HorizontalOffset Property changed callback, pass the value through to the buttons context menu
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AySplitButton.OnVerticalOffsetChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            VerticalOffset Property changed callback, pass the value through to the buttons context menu
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AySplitButton.EnsureContextMenuIsValid">
            <summary>
            Make sure the Context menu is not null
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AySplitButton.Dropdown_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Handler for the Drop Down Button's Click event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyCalendar">
            <summary>
            AyCalendar.xaml 的交互逻辑
            2016-12-24 
            </summary>
            <summary>
            AyCalendar
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyCalendar.#ctor(System.String)">
            <summary>
            返回选中日期星期几
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyCalendar.OnPicked">
            <summary>
            当day被单击的时候触发
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyCalendar.SetSelectModeFromDateRule">
            <summary>
            根据daterule，设置selectmode
            ay 2017-2-9 16:10:15
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCalendar.SelectedDateTime">
            <summary>
            选中的日期
            AY 2016-11-28 13:27:40
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCalendar.SelectMode">
            <summary>
            日期的选择模式
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyCalendar.SyncDaysInfo">
            <summary>
            同步列表day信息
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyCalendar.SetHMSList(System.Int32,System.Int32)">
            <summary>
            设置时分模式列表
            </summary>
            <param name="hour"></param>
            <param name="minute"></param>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCalendar.DateRuleObjects">
            <summary>
            用于限制
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCalendar.ExtButtonsVisibility">
            <summary>
            用于控制下方按钮组的整体可见性可见性
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyCalendar.clickdayisClose">
            <summary>
            单击日 是否关闭popup
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyCalendar.FocusDateBoxInput">
            <summary>
            让绑定的文本框获得焦点
            2017-2-10 16:48:20
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyCalendar.WhenDateTimePicked">
            <summary>
            当日期被选择时候触发
            2017-2-13 13:34:03
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyCalendar.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyCalendarDateList">
            <summary>
            AyCalendarDateList.xaml 的交互逻辑
            生日：2017-2-21 15:51:08
            用于剥离 日期中肚子部分
            </summary>
            <summary>
            AyCalendarDateList
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyCalendarDateList.DateRuleObjects">
            每次赋值，由日历AyCalendar那方赋值
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyCalendarDateList.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyCalendarTime">
            <summary>
            AyCalendarTime.xaml 的交互逻辑
            </summary>
            <summary>
            AyCalendarTime
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyCalendarTime.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDateBoxCalendar.ClosePopup">
            <summary>
            关闭弹窗
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyDateBoxCalendar.OnPicked">
            <summary>
            当day被单击的时候触发
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDateBoxCalendar.Icon">
            <summary>
            日期图标，如果为空或者null，则不显示图标
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDateBoxCalendar.Week">
            <summary>
            当前选中的时间的周
            2017-2-20 15:21:08
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDateBoxCalendar.DateItemIsInValidRange(System.DateTime)">
            <summary>
            验证时间是否在有效值的范围内
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyDateBoxCalendar.OnAyBoxLostFocus">
            <summary>
            当文本框失去焦点的时候触发的事件
            2017-2-13 13:56:46
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDateBoxHour.SelectedDateTime">
            <summary>
            当前日历控件选择的时间，此属性不对外用户设置，设置无效
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyDateBoxHour.OnAyBoxLostFocus">
            <summary>
            这是验证后，修复文本框值后，触发的文本框的值
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDateBoxHour.PlacementMode">
            <summary>
            增加位置，默认弹出位置
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDateBoxMinute.PlacementMode">
            <summary>
            增加位置，默认弹出位置
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyDateBoxMinute.OnAyBoxLostFocus">
            <summary>
            这是验证后，修复文本框值后，触发的文本框的值
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDateBoxMinute.SelectedDateTime">
            <summary>
            当前日历控件选择的时间，此属性不对外用户设置，设置无效
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDateBoxMonth.Year">
            <summary>
            ay 2017-2-27 14:08:17
            拓展：用于知晓年份后，可以限制当前月按钮的可用性
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDateBoxSecond.PlacementMode">
            <summary>
            增加位置，默认弹出位置
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyDateBoxSecond.OnAyBoxLostFocus">
            <summary>
            这是验证后，修复文本框值后，触发的文本框的值
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDateBoxSecond.SelectedDateTime">
            <summary>
            当前日历控件选择的时间，此属性不对外用户设置，设置无效
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyDateBoxYear.OnAyBoxLostFocus">
            <summary>
            这是验证后，修复文本框值后，触发的文本框的值
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyDatePicker">
            <summary>
            AyDatePicker.xaml 的交互逻辑
            </summary>
            <summary>
            AyDatePicker
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePicker.MaxDate">
            <summary>
            最大日期
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePicker.MinDate">
            <summary>
            最小日期
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePicker.MinMinDate">
            <summary>
            用于后面的日期框
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePicker.MaxMaxDate">
            <summary>
            用于前面的日期框，他的最大值除了绑定后面的文本框，但是也不能超过这个值
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePicker.SelectMode">
            <summary>
            暂时只支持2种
            ay 2015-10-13 15:31:40
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDatePicker.UpdateTodayVisibility">
            <summary>
            更新今天 按钮的状态
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDatePicker.UserControl_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            窗体加载时候
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDatePicker.UpdateYearInfo">
            <summary>
            更新年信息 2015-10-13 14:12:04
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDatePicker.UpdateAyDateList">
            <summary>
            刷新日历
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDatePicker.bg_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            单击年，要调整月的可用性
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDatePicker.bg_MouseDown_1(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            月份中的月单击
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDatePicker.ayToday_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            单击今天
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDatePicker.bg_MouseDown_2(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            单击日
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDatePicker.DefaultHandleSelectedDateTime">
            <summary>
            设置时间
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDatePicker.Hour_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            时单击
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDatePicker.Minute_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            分单击
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDatePicker.Second_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            秒单击
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDatePicker.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyDatePickerBox">
            <summary>
            AyDatePickerBox.xaml 的交互逻辑
            </summary>
            <summary>
            AyDatePickerBox
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePickerBox.Mask">
            <summary>
            水印文本
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePickerBox.Text">
            <summary>
            最终选中的日期的string
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePickerBox.TextFormat">
            <summary>
            格式化的日期显示格式，默认YYYY年MM月dd日 HH:mm:ss
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePickerBox.ChooseDayThenClosePopup">
            <summary>
            选择日 是否关闭弹出框
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePickerBox.Date">
            <summary>
            最终选择的日期
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePickerBox.SelectMode">
            <summary>
            选择日期模式
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePickerBox.MaxDate">
            <summary>
            最大日期
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePickerBox.MinDate">
            <summary>
            最小日期
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePickerBox.BoxSelectMode">
            <summary>
            默认内图标
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePickerBox.DatePickerIcon">
            <summary>
            AyIconAll的icon
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePickerBox.MinMinDate">
            <summary>
            用于后面的日期框
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePickerBox.MaxMaxDate">
            <summary>
            用于前面的日期框，他的最大值除了绑定后面的文本框，但是也不能超过这个值
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDatePickerBox.ClosePopup">
            <summary>
            关闭弹出框
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDatePickerBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.FormHelper">
            <summary>
            生日  2016-10-22 13:56:06
            AY  为了拓展默认WPF控件外观所加
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FormHelper.GetIsFocusVisual(System.Windows.DependencyObject)">
            <summary>
            生日 2016-10-22 13:55:46
            设置圆角值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyImageList">
            <summary>
            AyImageList.xaml 的交互逻辑
            </summary>
            <summary>
            AyImageList
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImageList.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyImageListItemFromByte.FileNameTemp">
            <summary>
            临时图片
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyImagePreview">
            <summary>
            AyImagePreview.xaml 的交互逻辑
            </summary>
            <summary>
            AyImagePreview
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyImagePreview.mouseHandlingMode">
            <summary>
            Specifies the current state of the mouse handling logic.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyImagePreview.origZoomAndPanControlMouseDownPoint">
            <summary>
            The point that was clicked relative to the ZoomAndPanControl.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyImagePreview.origContentMouseDownPoint">
            <summary>
            The point that was clicked relative to the content that is contained within the ZoomAndPanControl.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyImagePreview.mouseButtonDown">
            <summary>
            Records which mouse button clicked during mouse dragging.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyImagePreview.prevZoomRect">
            <summary>
            Saves the previous zoom rectangle, pressing the backspace key jumps back to this zoom rectangle.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyImagePreview.prevZoomScale">
            <summary>
            Save the previous content scale, pressing the backspace key jumps back to this scale.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyImagePreview.prevZoomRectSet">
            <summary>
            Set to 'true' when the previous zoom rect is saved.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.zoomAndPanControl_MouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Event raised on mouse up in the ZoomAndPanControl.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.zoomAndPanControl_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Event raised on mouse move in the ZoomAndPanControl.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.zoomAndPanControl_MouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Event raised by rotating the mouse wheel
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.ZoomIn_Executed(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The 'ZoomIn' command (bound to the plus key) was executed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.ZoomOut_Executed(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The 'ZoomOut' command (bound to the minus key) was executed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.JumpBackToPrevZoom_Executed(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The 'JumpBackToPrevZoom' command was executed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.JumpBackToPrevZoom_CanExecuted(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Determines whether the 'JumpBackToPrevZoom' command can be executed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.Fill_Executed(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The 'Fill' command was executed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.OneHundredPercent_Executed(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The 'OneHundredPercent' command was executed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.JumpBackToPrevZoom">
            <summary>
            Jump back to the previous zoom level.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.ZoomOut(System.Windows.Point)">
            <summary>
            Zoom the viewport out, centering on the specified point (in content coordinates).
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.ZoomIn(System.Windows.Point)">
            <summary>
            Zoom the viewport in, centering on the specified point (in content coordinates).
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.InitDragZoomRect(System.Windows.Point,System.Windows.Point)">
            <summary>
            Initialise the rectangle that the use is dragging out.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.SetDragZoomRect(System.Windows.Point,System.Windows.Point)">
            <summary>
            Update the position and size of the rectangle that user is dragging out.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.ApplyDragZoomRect">
            <summary>
            When the user has finished dragging out the rectangle the zoom operation is applied.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.ClearPrevZoomRect">
            <summary>
            Clear the memory of the previous zoom level.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.zoomAndPanControl_MouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Event raised when the user has double clicked in the zoom and pan control.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.overview_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Event raised when the size of the ZoomAndPanControl changes.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.overviewZoomRectThumb_DragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Event raised when the user drags the overview zoom rect.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImagePreview.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AnimationHelper.StartAnimation(System.Windows.UIElement,System.Windows.DependencyProperty,System.Double,System.Double)">
            <summary>
            Starts an animation to a particular value on the specified dependency property.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AnimationHelper.StartAnimation(System.Windows.UIElement,System.Windows.DependencyProperty,System.Double,System.Double,System.EventHandler)">
            <summary>
            Starts an animation to a particular value on the specified dependency property.
            You can pass in an event handler to call when the animation has completed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AnimationHelper.CancelAnimation(System.Windows.UIElement,System.Windows.DependencyProperty)">
            <summary>
            Cancel any animations that are running on the specified dependency property.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyZoomViewer">
            <summary>
            This is an extension to the ZoomAndPanControol class that implements
            the IScrollInfo interface properties and functions.
            
            IScrollInfo is implemented to allow AyZoomViewer to be wrapped (in XAML)
            in a ScrollViewer.  IScrollInfo allows the ScrollViewer and AyZoomViewer to 
            communicate important information such as the horizontal and vertical scrollbar offsets.
            
            There is a good series of articles showing how to implement IScrollInfo starting here:
                http://blogs.msdn.com/bencon/archive/2006/01/05/509991.aspx
                
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewer.content">
            <summary>
            Reference to the underlying content, which is named PART_Content in the template.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewer.contentScaleTransform">
            <summary>
            The transform that is applied to the content to scale it by 'ContentScale'.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewer.contentOffsetTransform">
            <summary>
            The transform that is applied to the content to offset it by 'ContentOffsetX' and 'ContentOffsetY'.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewer.enableContentOffsetUpdateFromScale">
            <summary>
            Enable the update of the content offset as the content scale changes.
            This enabled for zooming about a point (google-maps style zooming) and zooming to a rect.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewer.disableScrollOffsetSync">
            <summary>
            Used to disable syncronization between IScrollInfo interface and ContentOffsetX/ContentOffsetY.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewer.disableContentFocusSync">
            <summary>
            Normally when content offsets changes the content focus is automatically updated.
            This syncronization is disabled when 'disableContentFocusSync' is set to 'true'.
            When we are zooming in or out we 'disableContentFocusSync' is set to 'true' because 
            we are zooming in or out relative to the content focus we don't want to update the focus.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewer.constrainedContentViewportWidth">
            <summary>
            The width of the viewport in content coordinates, clamped to the width of the content.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewer.constrainedContentViewportHeight">
            <summary>
            The height of the viewport in content coordinates, clamped to the height of the content.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewer.canVerticallyScroll">
            <summary>
            Set to 'true' when the vertical scrollbar is enabled.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewer.canHorizontallyScroll">
            <summary>
            Set to 'true' when the vertical scrollbar is enabled.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewer.unScaledExtent">
            <summary>
            Records the unscaled extent of the content.
            This is calculated during the measure and arrange.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewer.viewport">
            <summary>
            Records the size of the viewport (in viewport coordinates) onto the content.
            This is calculated during the measure and arrange.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewer.scrollOwner">
            <summary>
            Reference to the ScrollViewer that is wrapped (in XAML) around the AyZoomViewer.
            Or set to null if there is no ScrollViewer.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.ContentOffsetX">
            <summary>
            Get/set the X offset (in content coordinates) of the view on the content.
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyZoomViewer.ContentOffsetXChanged">
            <summary>
            Event raised when the ContentOffsetX property has changed.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.ContentOffsetY">
            <summary>
            Get/set the Y offset (in content coordinates) of the view on the content.
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyZoomViewer.ContentOffsetYChanged">
            <summary>
            Event raised when the ContentOffsetY property has changed.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.ContentScale">
            <summary>
            Get/set the current scale (or zoom factor) of the content.
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyZoomViewer.ContentScaleChanged">
            <summary>
            Event raised when the ContentScale property has changed.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.MinContentScale">
            <summary>
            Get/set the minimum value for 'ContentScale'.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.MaxContentScale">
            <summary>
            Get/set the maximum value for 'ContentScale'.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.ContentZoomFocusX">
            <summary>
            The X coordinate of the content focus, this is the point that we are focusing on when zooming.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.ContentZoomFocusY">
            <summary>
            The Y coordinate of the content focus, this is the point that we are focusing on when zooming.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.ViewportZoomFocusX">
            <summary>
            The X coordinate of the viewport focus, this is the point in the viewport (in viewport coordinates) 
            that the content focus point is locked to while zooming in.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.ViewportZoomFocusY">
            <summary>
            The Y coordinate of the viewport focus, this is the point in the viewport (in viewport coordinates) 
            that the content focus point is locked to while zooming in.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.AnimationDuration">
            <summary>
            The duration of the animations (in seconds) started by calling AnimatedZoomTo and the other animation methods.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.ContentViewportWidth">
            <summary>
            Get the viewport width, in content coordinates.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.ContentViewportHeight">
            <summary>
            Get the viewport height, in content coordinates.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.IsMouseWheelScrollingEnabled">
            <summary>
            Set to 'true' to enable the mouse wheel to scroll the zoom and pan control.
            This is set to 'false' by default.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.AnimatedZoomTo(System.Double,System.Windows.Rect)">
            <summary>
            Do an animated zoom to view a specific scale and rectangle (in content coordinates).
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.AnimatedZoomTo(System.Windows.Rect)">
            <summary>
            Do an animated zoom to the specified rectangle (in content coordinates).
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.ZoomTo(System.Windows.Rect)">
            <summary>
            Instantly zoom to the specified rectangle (in content coordinates).
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.SnapContentOffsetTo(System.Windows.Point)">
            <summary>
            Instantly center the view on the specified point (in content coordinates).
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.SnapTo(System.Windows.Point)">
            <summary>
            Instantly center the view on the specified point (in content coordinates).
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.AnimatedSnapTo(System.Windows.Point)">
            <summary>
            Use animation to center the view on the specified point (in content coordinates).
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.AnimatedZoomAboutPoint(System.Double,System.Windows.Point)">
            <summary>
            Zoom in/out centered on the specified point (in content coordinates).
            The focus point is kept locked to it's on screen position (ala google maps).
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.ZoomAboutPoint(System.Double,System.Windows.Point)">
            <summary>
            Zoom in/out centered on the specified point (in content coordinates).
            The focus point is kept locked to it's on screen position (ala google maps).
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.AnimatedZoomTo(System.Double)">
            <summary>
            Zoom in/out centered on the viewport center.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.ZoomTo(System.Double)">
            <summary>
            Zoom in/out centered on the viewport center.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.AnimatedScaleToFit">
            <summary>
            Do animation that scales the content so that it fits completely in the control.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.ScaleToFit">
            <summary>
            Instantly scale the content so that it fits completely in the control.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.#cctor">
            <summary>
            Static constructor to define metadata for the control (and link it to the style in Generic.xaml).
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.OnApplyTemplate">
            <summary>
            Called when a template has been applied to the control.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.AnimatedZoomPointToViewportCenter(System.Double,System.Windows.Point,System.EventHandler)">
            <summary>
            Zoom to the specified scale and move the specified focus point to the center of the viewport.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.ZoomPointToViewportCenter(System.Double,System.Windows.Point)">
            <summary>
            Zoom to the specified scale and move the specified focus point to the center of the viewport.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.ContentScale_PropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Event raised when the 'ContentScale' property has changed value.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.ContentScale_Coerce(System.Windows.DependencyObject,System.Object)">
            <summary>
            Method called to clamp the 'ContentScale' value to its valid range.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.MinOrMaxContentScale_PropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Event raised 'MinContentScale' or 'MaxContentScale' has changed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.ContentOffsetX_PropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Event raised when the 'ContentOffsetX' property has changed value.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.ContentOffsetX_Coerce(System.Windows.DependencyObject,System.Object)">
            <summary>
            Method called to clamp the 'ContentOffsetX' value to its valid range.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.ContentOffsetY_PropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Event raised when the 'ContentOffsetY' property has changed value.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.ContentOffsetY_Coerce(System.Windows.DependencyObject,System.Object)">
            <summary>
            Method called to clamp the 'ContentOffsetY' value to its valid range.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.ResetViewportZoomFocus">
            <summary>
            Reset the viewport zoom focus to the center of the viewport.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.UpdateViewportSize(System.Windows.Size)">
            <summary>
            Update the viewport size from the specified size.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.UpdateContentViewportSize">
            <summary>
            Update the size of the viewport in content coordinates after the viewport size or 'ContentScale' has changed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.UpdateTranslationX">
            <summary>
            Update the X coordinate of the translation transformation.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.UpdateTranslationY">
            <summary>
            Update the Y coordinate of the translation transformation.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.UpdateContentZoomFocusX">
            <summary>
            Update the X coordinate of the zoom focus point in content coordinates.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.UpdateContentZoomFocusY">
            <summary>
            Update the Y coordinate of the zoom focus point in content coordinates.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.MeasureOverride(System.Windows.Size)">
            <summary>
            Measure the control and it's children.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arrange the control and it's children.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.CanVerticallyScroll">
            <summary>
            Set to 'true' when the vertical scrollbar is enabled.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.CanHorizontallyScroll">
            <summary>
            Set to 'true' when the vertical scrollbar is enabled.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.ExtentWidth">
            <summary>
            The width of the content (with 'ContentScale' applied).
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.ExtentHeight">
            <summary>
            The height of the content (with 'ContentScale' applied).
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.ViewportWidth">
            <summary>
            Get the width of the viewport onto the content.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.ViewportHeight">
            <summary>
            Get the height of the viewport onto the content.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.ScrollOwner">
            <summary>
            Reference to the ScrollViewer that is wrapped (in XAML) around the AyZoomViewer.
            Or set to null if there is no ScrollViewer.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.HorizontalOffset">
            <summary>
            The offset of the horizontal scrollbar.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewer.VerticalOffset">
            <summary>
            The offset of the vertical scrollbar.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.SetHorizontalOffset(System.Double)">
            <summary>
            Called when the offset of the horizontal scrollbar has been set.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.SetVerticalOffset(System.Double)">
            <summary>
            Called when the offset of the vertical scrollbar has been set.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.LineUp">
            <summary>
            Shift the content offset one line up.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.LineDown">
            <summary>
            Shift the content offset one line down.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.LineLeft">
            <summary>
            Shift the content offset one line left.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.LineRight">
            <summary>
            Shift the content offset one line right.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.PageUp">
            <summary>
            Shift the content offset one page up.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.PageDown">
            <summary>
            Shift the content offset one page down.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.PageLeft">
            <summary>
            Shift the content offset one page left.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.PageRight">
            <summary>
            Shift the content offset one page right.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.MouseWheelDown">
            <summary>
            Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is
            used for zooming in and out, not for manipulating the scrollbars.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.MouseWheelLeft">
            <summary>
            Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is
            used for zooming in and out, not for manipulating the scrollbars.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.MouseWheelRight">
            <summary>
            Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is
            used for zooming in and out, not for manipulating the scrollbars.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.MouseWheelUp">
            <summary>
            Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is
            used for zooming in and out, not for manipulating the scrollbars.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyZoomViewer.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
            <summary>
            Bring the specified rectangle to view.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.MouseHandlingMode.None">
            <summary>
            Not in any special mode.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.MouseHandlingMode.DraggingRectangles">
            <summary>
            The user is left-dragging rectangles with the mouse.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.MouseHandlingMode.Panning">
            <summary>
            The user is left-mouse-button-dragging to pan the viewport.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.MouseHandlingMode.Zooming">
            <summary>
            The user is holding down shift and left-clicking or right-clicking to zoom in or out.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.MouseHandlingMode.DragZooming">
            <summary>
            The user is holding down shift and left-mouse-button-dragging to select a region to zoom to.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewerDataModel.contentScale">
            
             The current scale at which the content is being viewed.
             
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewerDataModel.contentOffsetX">
            
             The X coordinate of the offset of the viewport onto the content (in content coordinates).
             
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewerDataModel.contentOffsetY">
            
             The Y coordinate of the offset of the viewport onto the content (in content coordinates).
             
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewerDataModel.contentWidth">
            
             The width of the content (in content coordinates).
             
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewerDataModel.contentHeight">
            
             The heigth of the content (in content coordinates).
             
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewerDataModel.contentViewportWidth">
            
             The width of the viewport onto the content (in content coordinates).
             The value for this is actually computed by the main window's ZoomAndPanControl and update in the
             data model so that the value can be shared with the overview window.
             
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyZoomViewerDataModel.contentViewportHeight">
            
             The heigth of the viewport onto the content (in content coordinates).
             The value for this is actually computed by the main window's ZoomAndPanControl and update in the
             data model so that the value can be shared with the overview window.
             
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewerDataModel.ContentScale">
            
             The current scale at which the content is being viewed.
             
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewerDataModel.ContentOffsetX">
            
             The X coordinate of the offset of the viewport onto the content (in content coordinates).
             
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewerDataModel.ContentOffsetY">
            
             The Y coordinate of the offset of the viewport onto the content (in content coordinates).
             
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewerDataModel.ContentWidth">
            
             The width of the content (in content coordinates).
             
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewerDataModel.ContentHeight">
            
             The heigth of the content (in content coordinates).
             
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewerDataModel.ContentViewportWidth">
            
             The width of the viewport onto the content (in content coordinates).
             The value for this is actually computed by the main window's ZoomAndPanControl and update in the
             data model so that the value can be shared with the overview window.
             
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyZoomViewerDataModel.ContentViewportHeight">
            
             The heigth of the viewport onto the content (in content coordinates).
             The value for this is actually computed by the main window's ZoomAndPanControl and update in the
             data model so that the value can be shared with the overview window.
             
        </member>
        <member name="M:Ay.Framework.WPF.Controls.PathKey.GetAyKey(System.Windows.DependencyObject)">
            <summary>
            获取或者设置一个path的key，此key要等于
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyPath.PathStrokeBrush">
            <summary>
            Path的边框颜色
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyPath.PathStrokeThickness">
            <summary>
            stroke的粗细，double类型
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyPath.OnApplyTemplate">
            <summary>
            OnApplyTemplate override
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyButton">
            <summary>
            按钮的父类,方便添加公用属性 
            2015-04-27 09:25:26添加s
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyButton.IsFlatStyleProperty">
            <summary>
            是否是平面样式
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyLayer">
            <summary>
            AyLayer.xaml 的交互逻辑
            </summary>
            <summary>
            AyLayer
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyLayer.Close(System.String)">
            <summary>
            根据ID关闭一个aylayer
            </summary>
            <param name="layerId"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyLayer.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyLayerOptions.TitleBar">
            <summary>
            2017-10-20 15:39:01 增加
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyLayerOptions.CanDrag">
            <summary>
            是否可以移动
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyLayerOptions.CanClose">
            <summary>
            右上角按钮，是否可以关闭
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyLayerOptions.LayerId">
            <summary>
            层Id
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyLayerOptions.IsContainsTitleBar">
            <summary>
            是否包含标题栏
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyLayerOptions.MaskBrush">
            <summary>
            遮盖画刷
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyLayerOptions.HasShadow">
            <summary>
            是否有阴影
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyLayerOptions.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyLayerOptions.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyLayerOptions.MinWidth">
            <summary>
            最小宽度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyLayerOptions.MinHeight">
            <summary>
            最小高度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyLayerOptions.MaxWidth">
            <summary>
            最大宽度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyLayerOptions.MaxHeight">
            <summary>
            最大高度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyLayerOptions.ShowAnimateIndex">
            <summary>
            填入1-15，目前15种开场动画
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyLayerOptions.Direction">
            <summary>
            弹窗第一次方向，默认居中。
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyPopupWindowLocations">
            <summary>
            指定弹出位置支持枚举
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyPopupWindow.GaoSiRadius">
            <summary>
            增加高斯模糊 
            2015-06-10 14:35:20
            作者 ay
            目的 控制模糊的程度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyPopupWindow.BackgorundIsOnlyColorOpacity">
            <summary>
            用于控制纯色背景的窗体的时候，颜色透明度，值等于0-1
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyPopupWindow.#ctor(Ay.Framework.WPF.Controls.AyPopupWindowLocations)">
            <summary>
            指定位置显示,目前支持居中和右下角
            </summary>
            <param name="t"></param>
            <param name="l"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyPopupWindow.#ctor(System.Boolean,System.Double,Ay.Framework.WPF.Controls.AyPopupWindowLocations)">
            <summary>
            指定位置显示,目前支持居中和右下角
            </summary>
            <param name="t"></param>
            <param name="l"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyPopupWindow.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            指定特殊位置
            </summary>
            <param name="t">距离上方的距离</param>
            <param name="l">距离屏幕左侧的距离</param>
            <param name="w">稍微x轴平移 Left = l - w- this.Width</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyPopupWindow.StartShowAnimation">
            <summary>
            开始播放出场动画
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyPopupWindow.WindowTitleBarBg">
            <summary>
            window窗体的标题栏目的背景画刷
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyPopupWindow.BeginCloseAnimation">
            <summary>
            开始窗口关闭事件
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyPopupWindow.RectangleOpacity1">
            <summary>
            左侧菜单
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyPopupWindow.rectangleOpacity2">
            <summary>
            内容区
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyPopupWindow.rectangleOpacity3">
            <summary>
            主界面
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyPopupWindow.RectangleOpacity4">
            <summary>
            待定
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.HigherRangeBackgroundProperty">
            <summary>
            # TODODOC
            Get/Set the Brush for the Range between higher/maximum values. (Brush)
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.HigherRangeStyleProperty">
            <summary>
            # TODODOC
            Get/Set the Style for the Range between Higher/Maximum values. (Style)
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.HigherRangeWidthPropertyKey">
            <summary>
            # TODODOC          
            
            HigherRangeWidth property is a readonly property, used to calculate the percentage of the  HigherRange within the entire min/max range.
            </summary>
            
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.HigherThumbBackgroundProperty">
            <summary>
            # TODODOC
            Get/Set the Brush for the HigherValue thumb back of the icons [active state]. (Brush)
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.HigherValueProperty">
            <summary>
            # TODODOC          
            
            HigherValue property represents the higher value within the selected range.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.LowerRangeBackgroundProperty">
            <summary>
            # TODODOC
            Get/Set the Brush for the Range between minimum/lower values . (Brush)
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.LowerRangeStyleProperty">
            <summary>
            # TODODOC
            Get/Set the Style for the Range between Minimum/Lower values. (Style)
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.LowerRangeWidthPropertyKey">
            <summary>
            # TODODOC          
            
            LowerRangeWidth property is a readonly property, used to calculate the percentage of the  LowerRange, within the entire min/max range.
            </summary>
            
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.LowerThumbBackgroundProperty">
            <summary>
            # TODODOC          
            Get/Set the Brush for the LowerValue thumb back of the icons [active state]. (Brush)
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.LowerValueProperty">
            <summary>
            # TODODOC          
            LowerValue property represents the lower value within the selected range.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.MaximumProperty">
            <summary>
            # TODODOC          
            Maximum property represents the maximum value, which can be selected, in a range.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.MinimumProperty">
            <summary>
            //#TODODOC          
            Minimum property represents the minimum value, which can be selected, in a range.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.OrientationProperty">
            <summary>
            # TODODOC
            Get/Set the RangeSlider orientation.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.RangeBackgroundProperty">
            <summary>
            # TODODOC
            Get/Set the Brush for the Range between lower/higher values [active state]. (Brush)
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.RangeStyleProperty">
            <summary>
            # TODODOC
            Get/Set the Style for the Range between Lower/Higher values. (Style)
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.RangeWidthPropertyKey">
            <summary>
            # TODODOC          
            
            RangeWidth property is a readonly property, used to calculate the percentage of the range within the entire min/max range.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRangeSlider.StepProperty">
            <summary>
            # TODODOC          
            
            Step property is used to identify the RangeSlider's size of individual move, while clicking on the LowerRange, HigherRange, not while scrolling the thumbs.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyStrokeLabel.CreateText">
            <summary>
            Create the outline geometry based on the formatted text.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyStrokeLabel.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            OnRender override draws the geometry of the text and optional highlight.
            </summary>
            <param name="drawingContext">Drawing context of the OutlineText control.</param>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyStrokeLabel.TextGeometry">
            <summary>
            字符串的格式化几何对象
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyStrokeLabel.Highlight">
            <summary>
            是否高亮（暂时不支持）
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyStrokeLabel.TextHighLightGeometry">
            <summary>
            高亮几何对象
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyStrokeLabel.StretchSize">
            <summary>
            字符间距
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyStrokeLabel.Fill">
            <summary>
            字符串格式化对象的填充花刷
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyStrokeLabel.Stroke">
            <summary>
            边缘画刷
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyStrokeLabel.StrokeThickness">
            <summary>
            边缘宽度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyStrokeLabel.Text">
            <summary>
            显示的文字
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.ElementMoveMode">
            <summary>
            控制元素决定窗体的行为
            2017-10-16 17:34:15
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyWindow">
            <summary>
            2015-10-8 17:19:42
            ShowWindowMenu 显示窗体菜单
            DoMaxOrReStoreWindow     最大化和还原默认状态的方法
            OpenSkinWindowShow 打开皮肤设置窗口
            DoMinWindow 最小化窗口
            DoCloseWindow 关闭或者隐藏窗口
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyWindow.SetElementMoveProperty">
            <summary>
            设置元素在aywindow的行为，是左键单击移动，还是也支持 双击最大化窗体
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyWindow.CloseButtonVisibility">
            <summary>
            最小化按钮是否显示
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyWindow.WindowEntranceBackgroundMode">
            <summary>
            窗体入场模式
             0 默认 啥都有
             1  没有背景,没有右侧按钮组
             2  没有背景
             3 没有右侧自带的按钮
             </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyWindow.GaoSiRadius">
            <summary>
            增加高斯模糊 
            2015-06-10 14:35:20
            作者 ay
            目的 控制模糊的程度
            
            最后修改:2015年11月30日13:43:01 
            主要通过gdiplus进行模糊设定，等于xp用户，忽略模糊
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyWindow.IsCoverTaskBar">
            <summary>
            是否遮盖任务栏
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyWindow.p">
            <summary>
            GetWindowBackgroundConfig必须要执行完，p才有值，然后updateimage，才能给picture换 imagebrush
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyWindow.WindowTitleBarBg">
            <summary>
            window窗体的标题栏目的背景画刷
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyWindow.ToolBarContent">
            <summary>
            工具栏内容
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyWindow.ToolBarContentDataTemplate">
            <summary>
            生日 2016-10-14 00:52:19
            增加工具栏 数据模板
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyWindow.maxWindowVisibility">
            <summary>
            控制还原图标的可见性，用户无心关心
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyWindow.restoreWindowVisibility">
            <summary>
            控制还原图标的可见性，用户无心关心
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyWindow.VideoUri">
            <summary>
            wpf window的 resizemode有bug，会产生白线和窗体遮罩错位,很多bug
            2016-10-15 05:32:00
            AY
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyWindow.InitializeEvent">
            <summary>
            标题栏控制
            1 代表移动，双击最大化
            2 代表移动
            0 代表 不做任何操作
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyWindow.GetScreen(System.Windows.Window)">
            <summary>
            获得窗体所在的屏幕
            2017-10-17 16:27:44
            AY
            </summary>
            <param name="win">窗体</param>
            <returns></returns>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyWindow.rectangleOpacity1">
            <summary>
            为了解决子窗口的问题，子窗口关闭，mainwindow置于其他窗体后面
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyWindow.RectangleOpacity1">
            <summary>
            左侧菜单
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyWindow.rectangleOpacity2">
            <summary>
            内容区
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyWindow.rectangleOpacity3">
            <summary>
            主界面
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyWindow.RectangleOpacity4">
            <summary>
            待定
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyWindow.SetBackgroundFromName(System.String,System.Boolean)">
            <summary>
            给客户端修改背景的权利,但是不做同步，只是临时，同步需要自己额外的处理
            </summary>
            <param name="path"></param>
            <param name="isNeedGaosi"></param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.POINT.x">
            <summary>
            x coordinate of point.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.POINT.y">
            <summary>
            y coordinate of point.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.POINT.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct a point of coordinates (x,y).
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.MINMAXINFO">
            <summary>
            窗体大小信息
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.RECT">
            <summary> Win32 </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.RECT.left">
            <summary> Win32 </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.RECT.top">
            <summary> Win32 </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.RECT.right">
            <summary> Win32 </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.RECT.bottom">
            <summary> Win32 </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.RECT.Empty">
            <summary> Win32 </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.RECT.Width">
            <summary> Win32 </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.RECT.Height">
            <summary> Win32 </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> Win32 </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.RECT.#ctor(Ay.Framework.WPF.Controls.RECT)">
            <summary> Win32 </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.RECT.IsEmpty">
            <summary> Win32 </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.RECT.ToString">
            <summary> Return a user friendly representation of this struct </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.RECT.Equals(System.Object)">
            <summary> Determine if 2 RECT are equal (deep compare) </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.RECT.GetHashCode">
            <summary>Return the HashCode for this struct (not garanteed to be unique)</summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.RECT.op_Equality(Ay.Framework.WPF.Controls.RECT,Ay.Framework.WPF.Controls.RECT)">
            <summary> Determine if 2 RECT are equal (deep compare)</summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.RECT.op_Inequality(Ay.Framework.WPF.Controls.RECT,Ay.Framework.WPF.Controls.RECT)">
            <summary> Determine if 2 RECT are different(deep compare)</summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.MONITORINFO.cbSize">
            <summary>
            </summary>            
        </member>
        <member name="F:Ay.Framework.WPF.Controls.MONITORINFO.rcMonitor">
            <summary>
            </summary>            
        </member>
        <member name="F:Ay.Framework.WPF.Controls.MONITORINFO.rcWork">
            <summary>
            </summary>            
        </member>
        <member name="F:Ay.Framework.WPF.Controls.MONITORINFO.dwFlags">
            <summary>
            </summary>            
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyArcChart">
            <summary>
            AyArcChart.xaml 的交互逻辑
            </summary>
            <summary>
            AyArcChart
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyArcChart.ArcMarginLeft">
            <summary>
            动画方式更新startAngle
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyArcChart.ArcThickness">
            <summary>
            环状厚度
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyArcChart.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyArcModel.name">
            <summary>
            显示图表的名字
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyArcModel.startAngle">
            <summary>
            提供给数据触发器判断是否改变数据了
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyArcModel.nameValue">
            <summary>
            显示图标对应的值
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyArcModel.percent">
            <summary>
            该值的百分比
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyArcModel.sum">
            <summary>
            总共的和
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyColorPicker.Pick(System.Object,System.EventArgs)">
            <summary>
            Picks a color from the current mouse position.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyFishEyePanel">
            <summary>
            FishEyePanel
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyPanel.TitleContent">
            <summary>
            工具栏内容
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyPanel.CornerRadius">
            <summary>
            工具栏圆角
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyRadioList.CheckedRadioValue">
            <summary>
            radio参考属性的 属性值
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyRadioList.CheckedRadioPath">
            <summary>
            radio参考属性
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyRadioList.LineBreakBeforeProperty">
            <summary>
            决定是否立即换行
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyTabPanel">
            <summary>
            AyTabPanel
            作者：aronyang 
            时间：2015-03-25 10:57:22
             www.ayjs.net  aaronyang      来自 QQ:875556003 版权所有
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTabPanel.CanScrollLeftOrUp">
            <summary>
            CanScrollLeftOrUp 属性
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTabPanel.CanScrollRightOrDown">
            <summary>
            CanScrollRightOrDown 属性 aaronyang
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            重写 Measure 
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabPanel.MeasureHorizontal(System.Windows.Size)">
            <summary>
            当dock改变的时候重新Measure
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabPanel.MeasureVertical(System.Windows.Size)">
            <summary>
            Measure 当dock等于左或者右的时候
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arrange Override
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabPanel.LineLeft">
            <summary>
            2015-03-26 16:57:34 最后一次修改，分离鼠标滚动事件
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabPanel.MouseWheelDown">
            <summary>
            鼠标中间滚动-向下
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyTabItem">
            <summary>
            AytabItem类 二〇一五年三月二十五日 11:27:15
             www.ayjs.net  aaronyang      来自 QQ:875556003 版权所有
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTabItem.Icon">
            <summary>
            提供Header and on the 下拉 Context Menu中历史Tab的图标
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTabItem.AllowDelete">
            <summary>
            是否允许删除tabitem
             www.ayjs.net  aaronyang      来自 QQ:875556003 版权所有
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTabItem.TabItemMargin">
            <summary>
            设置Item的margin，建议设置例如 5,0 建议将item的宽度添加10
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabItem.OnApplyTemplate">
            <summary>
            OnApplyTemplate override
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTabItem.Dimension">
            <summary>
             TabPanel的尺寸，最大宽度，宽度，最小宽度,最大高度，最小高度，高度     www.ayjs.net
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.NewTabItemEventArgs.Content">
            <summary>
             新建Tab时候的内容 aaronyang 二〇一五年三月二十五日 11:06:00
              www.ayjs.net  aaronyang      来自 QQ:875556003 版权所有
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTabControl.AllowAddNew">
             <summary>
            是否显示新增按钮
             </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTabControl.AllowDelete">
            <summary>
            是否显示关闭按钮
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTabControl.SelectNewTabOnCreate">
            <summary>
            设置是否当新增AytabItem的时候，是否默认选中
            </summary>
        </member>
        <!-- 对于成员“P:Ay.Framework.WPF.Controls.AyTabControl.AddNewTabToEnd”忽略有格式错误的 XML 注释 -->
        <member name="P:Ay.Framework.WPF.Controls.AyTabControl.TabItemMinWidth">
            <summary>
            TabItemMinWidth
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTabControl.TabItemMinHeight">
            <summary>
            TabItemMinHeight
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTabControl.TabItemMaxWidth">
            <summary>
             Maximum width 
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTabControl.TabItemMaxHeight">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabControl.OnMinMaxChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OnMinMaxChanged 
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabControl.OnTabStripPlacementChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            绑定 OnTabStripPlacementChanged 改变的事件
            </summary>
            <remarks>
               当方向改变时候调整宽高，和AyTabItem可视性
            </remarks>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabControl.OnApplyTemplate">
            <summary>
            OnApplyTemplate override
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabControl.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            IsItemItsOwnContainer重写
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabControl.GetContainerForItemOverride">
            <summary>
            GetContainerForItem 重写
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTabControl.AyTabPanelMargin">
            <summary>
            用于调整AyTabControl中tabpanel的margin
            2015-6-8 9:49:20 ay 增加
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabControl.DropdownButton_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            处理下拉菜单的按钮的事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabControl.ContextMenuItem_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            处理历史 MenuItem的尺寸
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabControl.AddTabItem">
            <summary>
            添加新 Header
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabControl.RemoveTabItem(Ay.Framework.WPF.Controls.AyTabItem)">
            <summary>
            单击关闭按钮关闭AyTabItem
            </summary>
            <param name="tabItem"></param>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyTabItemObject">
            <summary>
               ItemsSource给AyTabControl使用
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTabItemObject.Header">
            <summary>
               标题文字
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTabItemObject.Value">
            <summary>
               值
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTabControlHelper.CloneElement(System.Object)">
            <summary>
            复制一个节点
            </summary>
            <param name="elementToClone"></param>
            <returns></returns>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyWrapPanelFill.FloorItemWidth">
            单独介绍一下FloorItemWidth的作用，这个属性用来设置是否让每个Item的宽度一定是个整数。如果宽度不是整数，TextBlock、Image等内容可能会变得很模糊。
        </member>
        <member name="T:Ay.Framework.WPF.Controls.FluidLayoutManager">
            <summary>
            Class which helps in the layout management for the FluidWrapPanel
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidLayoutManager.GetInitialLocationOfChild(System.Int32)">
            <summary>
            Calculates the initial location of the child in the FluidWrapPanel
            when the child is added.
            </summary>
            <param name="index">Index of the child in the FluidWrapPanel</param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidLayoutManager.Initialize(System.Double,System.Double,System.Double,System.Double,System.Windows.Controls.Orientation)">
            <summary>
            Initializes the FluidLayoutManager
            </summary>
            <param name="panelWidth">Width of the FluidWrapPanel</param>
            <param name="panelHeight">Height of the FluidWrapPanel</param>
            <param name="cellWidth">Width of each child in the FluidWrapPanel</param>
            <param name="cellHeight">Height of each child in the FluidWrapPanel</param>
            <param name="orientation">Orientation of the panel - Horizontal or Vertical</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidLayoutManager.GetIndexFromCell(System.Int32,System.Int32)">
            <summary>
            Provides the index of the child (in the FluidWrapPanel's children) from the given row and column
            </summary>
            <param name="row">Row</param>
            <param name="column">Column</param>
            <returns>Index</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidLayoutManager.GetIndexFromPoint(System.Windows.Point)">
            <summary>
            Provides the index of the child (in the FluidWrapPanel's children) from the given point
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidLayoutManager.GetCellFromIndex(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Provides the row and column of the child based on its index in the FluidWrapPanel.Children
            </summary>
            <param name="index">Index</param>
            <param name="row">Row</param>
            <param name="column">Column</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidLayoutManager.GetCellFromPoint(System.Windows.Point,System.Int32@,System.Int32@)">
            <summary>
            Provides the row and column of the child based on its location in the FluidWrapPanel
            </summary>
            <param name="p">Location of the child in the parent</param>
            <param name="row">Row</param>
            <param name="column">Column</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidLayoutManager.GetPointFromCell(System.Int32,System.Int32)">
            <summary>
            Provides the location of the child in the FluidWrapPanel based on the given row and column
            </summary>
            <param name="row">Row</param>
            <param name="column">Column</param>
            <returns>Location of the child in the panel</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidLayoutManager.GetPointFromIndex(System.Int32)">
            <summary>
            Provides the location of the child in the FluidWrapPanel based on the given row and column
            </summary>
            <param name="index">Index</param>
            <returns>Location of the child in the panel</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidLayoutManager.CreateTransform(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a TransformGroup based on the given Translation, Scale and Rotation
            </summary>
            <param name="transX">Translation in the X-axis</param>
            <param name="transY">Translation in the Y-axis</param>
            <param name="scaleX">Scale factor in the X-axis</param>
            <param name="scaleY">Scale factor in the Y-axis</param>
            <param name="rotAngle">Rotation</param>
            <returns>TransformGroup</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidLayoutManager.CreateTransition(System.Windows.UIElement,System.Windows.Point,System.TimeSpan,System.Windows.Media.Animation.EasingFunctionBase)">
            <summary>
            Creates the storyboard for animating a child from its old location to the new location.
            The Translation and Scale properties are animated.
            </summary>
            <param name="element">UIElement for which the storyboard has to be created</param>
            <param name="newLocation">New location of the UIElement</param>
            <param name="period">Duration of animation</param>
            <param name="easing">Easing function</param>
            <returns>Storyboard</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidLayoutManager.GetArrangedSize(System.Int32,System.Windows.Size)">
            <summary>
            Gets the total size taken up by the children after the Arrange Layout Phase
            </summary>
            <param name="childrenCount">Number of children</param>
            <param name="finalSize">Available size provided by the FluidWrapPanel</param>
            <returns>Total size</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidLayoutManager.CalculateCellsPerLine">
            <summary>
            Calculates the number of child items that can be accommodated in a single line
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.FluidMouseDragBehavior">
            <summary>
            Defines the Drag Behavior in the FluidWrapPanel using the Mouse
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.FluidMouseDragBehavior.DragButtonProperty">
            <summary>
            DragButton Dependency Property
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.FluidMouseDragBehavior.DragButton">
            <summary>
            Gets or sets the DragButton property. This dependency property 
            indicates which Mouse button should participate in the drag interaction.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidMouseDragBehavior.OnAttached">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidMouseDragBehavior.GetParentPanel">
            <summary>
            Get the parent FluidWrapPanel and check if the AssociatedObject is
            hosted inside a ListBoxItem (this scenario will occur if the FluidWrapPanel
            is the ItemsPanel for a ListBox).
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.FluidWrapPanel">
            <summary>
            Interactions for the FluidWrapPanel
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.FluidWrapPanel.DragEasingProperty">
            <summary>
            DragEasing Dependency Property
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.FluidWrapPanel.DragEasing">
            <summary>
            Gets or sets the DragEasing property. This dependency property 
            indicates the Easing function to be used when the user stops dragging the child and releases it.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnDragEasingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DragEasing property.
            </summary>
            <param name="d">FluidWrapPanel</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnDragEasingChanged(System.Windows.Media.Animation.EasingFunctionBase,System.Windows.Media.Animation.EasingFunctionBase)">
            <summary>
            Provides derived classes an opportunity to handle changes to the DragEasing property.
            </summary>
            <param name="oldDragEasing">Old Value</param>
            <param name="newDragEasing">New Value</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.FluidWrapPanel.DragOpacityProperty">
            <summary>
            DragOpacity Dependency Property
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.FluidWrapPanel.DragOpacity">
            <summary>
            Gets or sets the DragOpacity property. This dependency property 
            indicates the opacity of the child being dragged.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.CoerceDragOpacity(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the FluidDrag Opacity to an acceptable value
            </summary>
            <param name="d">Dependency Object</param>
            <param name="value">Value</param>
            <returns>Coerced Value</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnDragOpacityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DragOpacity property.
            </summary>
            <param name="d">FluidWrapPanel</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnDragOpacityChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes to the DragOpacity property.
            </summary>
            <param name="oldDragOpacity">Old Value</param>
            <param name="newDragOpacity">New Value</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.FluidWrapPanel.DragScaleProperty">
            <summary>
            DragScale Dependency Property
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.FluidWrapPanel.DragScale">
            <summary>
            Gets or sets the DragScale property. This dependency property 
            indicates the factor by which the child should be scaled when it is dragged.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnDragScaleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DragScale property.
            </summary>
            <param name="d">FluidWrapPanel</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnDragScaleChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes to the DragScale property.
            </summary>
            <param name="oldDragScale">Old Value</param>
            <param name="newDragScale">New Value</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.FluidWrapPanel.ElementEasingProperty">
            <summary>
            ElementEasing Dependency Property
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.FluidWrapPanel.ElementEasing">
            <summary>
            Gets or sets the ElementEasing property. This dependency property 
            indicates the Easing Function to be used when the elements are rearranged.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnElementEasingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ElementEasing property.
            </summary>
            <param name="d">FluidWrapPanel</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnElementEasingChanged(System.Windows.Media.Animation.EasingFunctionBase,System.Windows.Media.Animation.EasingFunctionBase)">
            <summary>
            Provides derived classes an opportunity to handle changes to the ElementEasing property.
            </summary>
            <param name="oldElementEasing">Old Value</param>
            <param name="newElementEasing">New Value</param>
            
        </member>
        <member name="F:Ay.Framework.WPF.Controls.FluidWrapPanel.IsComposingProperty">
            <summary>
            IsComposing Dependency Property
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.FluidWrapPanel.IsComposing">
            <summary>
            Gets or sets the IsComposing property. This dependency property 
            indicates if the FluidWrapPanel is in Composing mode.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnIsComposingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsComposing property.
            </summary>
            <param name="d">FluidWrapPanel</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnIsComposingChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes to the IsComposing property.
            </summary>
            <param name="oldIsComposing">Old Value</param>
            <param name="newIsComposing">New Value</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.FluidWrapPanel.ItemHeightProperty">
            <summary>
            ItemHeight Dependency Property
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.FluidWrapPanel.ItemHeight">
            <summary>
            Gets or sets the ItemHeight property. This dependency property 
            indicates the height of each item.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnItemHeightChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ItemHeight property.
            </summary>
            <param name="d">FluidWrapPanel</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnItemHeightChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes to the ItemHeight property.
            </summary>
            <param name="oldItemHeight">Old Value</param>
            <param name="newItemHeight">New Value</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.FluidWrapPanel.ItemWidthProperty">
            <summary>
            ItemWidth Dependency Property
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.FluidWrapPanel.ItemWidth">
            <summary>
            Gets or sets the ItemWidth property. This dependency property 
            indicates the width of each item.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnItemWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ItemWidth property.
            </summary>
            <param name="d">FluidWrapPanel</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnItemWidthChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes to the ItemWidth property.
            </summary>
            <param name="oldItemWidth">Old Value</param>
            <param name="newItemWidth">New Value</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.FluidWrapPanel.ItemsSourceProperty">
            <summary>
            ItemsSource Dependency Property
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.FluidWrapPanel.ItemsSource">
            <summary>
            Gets or sets the ItemsSource property. This dependency property 
            indicates the bindable collection.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnItemsSourceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ItemsSource property.
            </summary>
            <param name="d">FluidWrapPanel</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Provides derived classes an opportunity to handle changes to the ItemsSource property.
            </summary>
            <param name="oldItemsSource">Old Value</param>
            <param name="newItemsSource">New Value</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.FluidWrapPanel.OrientationProperty">
            <summary>
            Orientation Dependency Property
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.FluidWrapPanel.Orientation">
            <summary>
            Gets or sets the Orientation property. This dependency property 
            indicates the orientation of arrangement of items in the panel.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnOrientationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Orientation property.
            </summary>
            <param name="d">FluidWrapPanel</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.OnOrientationChanged(System.Windows.Controls.Orientation,System.Windows.Controls.Orientation)">
            <summary>
            Provides derived classes an opportunity to handle changes to the Orientation property.
            </summary>
            <param name="oldOrientation">Old Value</param>
            <param name="newOrientation">New Value</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Override for the Measure Layout Phase
            </summary>
            <param name="availableSize">Available Size</param>
            <returns>Size required by the panel</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Override for the Arrange Layout Phase
            </summary>
            <param name="finalSize">Available size provided by the FluidWrapPanel</param>
            <returns>Size taken up by the Panel</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.AddChildToFluidElements(System.Windows.UIElement)">
            <summary>
            Adds the child to the fluidElements collection and initializes its RenderTransform.
            </summary>
            <param name="child">UIElement</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.InitializeArrange">
            <summary>
            Intializes the arrangement of the children
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.UpdateFluidLayout(System.Boolean)">
            <summary>
            Iterates through all the fluid elements and animate their
            movement to their new location.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.UpdateDragElementIndex(System.Int32)">
            <summary>
            Moves the dragElement to the new Index
            </summary>
            <param name="newIndex">Index of the new location</param>
            <returns>True-if dragElement was moved otherwise False</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.ClearItemsSource">
            <summary>
            Removes all the children from the FluidWrapPanel
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.BeginFluidDrag(System.Windows.UIElement,System.Windows.Point)">
            <summary>
            Handler for the event when the user starts dragging the dragElement.
            </summary>
            <param name="child">UIElement being dragged</param>
            <param name="position">Position in the child where the user clicked</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.FluidDrag(System.Windows.UIElement,System.Windows.Point,System.Windows.Point)">
            <summary>
            Handler for the event when the user drags the dragElement.
            </summary>
            <param name="child">UIElement being dragged</param>
            <param name="position">Position where the user clicked w.r.t. the UIElement being dragged</param>
            <param name="positionInParent">Position where the user clicked w.r.t. the FluidWrapPanel (the parentFWPanel of the UIElement being dragged</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.FluidWrapPanel.EndFluidDrag(System.Windows.UIElement,System.Windows.Point,System.Windows.Point)">
            <summary>
            Handler for the event when the user stops dragging the dragElement and releases it.
            </summary>
            <param name="child">UIElement being dragged</param>
            <param name="position">Position where the user clicked w.r.t. the UIElement being dragged</param>
            <param name="positionInParent">Position where the user clicked w.r.t. the FluidWrapPanel (the parentFWPanel of the UIElement being dragged</param>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.DoubleConverterExtension">
            <summary>
            生日：2016-10-27 17:12:31
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.Number2ThicknessConverter">
            <summary>
            2015-6-8 11:17:29 增加
            更改AyWindow,支持 内容超越右侧任务栏
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.BitmapFrameConverter">
            <summary>
            本转换器简化了很多关于图像的需求，在图像一旦被加载就释放流，
            以避免在尝试删除文件时出现文件访问异常
            其次，允许将图像调整为整定的宽工和高度，
            因而在图像需要进行缩放的场合节省了内存。
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.ScaleToPercentConverter">
            <summary>
            Used in MainWindow.xaml to converts a scale value to a percentage.
            It is used to display the 50%, 100%, etc that appears underneath the zoom and pan control.
            在AYUI的AyZoomViewer用到
            </summary>
        </member>
        <!-- 对于成员“M:Ay.Framework.WPF.Controls.ScaleToPercentConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Ay.Framework.WPF.Controls.ScaleToPercentConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)”忽略有格式错误的 XML 注释 -->
        <member name="T:Ay.Framework.WPF.Controls.SmartPrecisionConverter">
            <summary>
            智能精度转换器
            2017-2-8 15:25:25
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.SmartPrecisionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a numerical value to a rounded value with a configured or 
            algorithm applied number of non-zero digits.
            </summary>
            <param name="value">The numerical value.</param>
            <param name="targetType">Hopefully a string.</param>
            <param name="parameter">NULL for no formatting.  Double.NaN for auto. 
            Or the specified number of decimal places.</param>
            <param name="culture">Yes please.</param>
            <returns>A formatted numerical value.</returns>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AySimplyListView.HeadCellBorder">
            <summary>
            列表头部的右侧的 分隔符号
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.GridLineDecorator.GridLineBrushProperty">
            <summary>
            GridLineBrush Dependency Property
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.GridLineDecorator.GridLineBrush">
            <summary>
            Gets or sets the GridLineBrush property.  This dependency property 
            indicates ....
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.GridLineDecorator.OnGridLineBrushChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the GridLineBrush property.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.GridLineDecorator.OnGridLineBrushChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Provides derived classes an opportunity to handle changes to the GridLineBrush property.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.AyTableCellAttribute.title">
            <summary>
            显示的文字
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.AyTableCellAttribute.align">
            <summary>
            显示方式
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.AyTableCellAttribute.valign">
            <summary>
            垂直显示方式
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.AyTableCellAttribute.bgcolor">
            <summary>
            背景颜色.例如#000000
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.AyTableCellAttribute.fontsize">
            <summary>
            字体大小
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.AyTableCellAttribute.fontcolor">
            <summary>
            字体颜色,例如#000000
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.AyTableCellAttribute.cellregion">
            <summary>
            单元格合并位置，（fromRow,toRow,fromColumn,toColumn）
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.AyTableCellAttribute.fontname">
            <summary>
            字体名称
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.AyTableCellAttribute.fontweight">
            <summary>
            表头文字是否加粗，默认加粗
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.AyTableCellAttribute.width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.AyTableCellAttribute.height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.AyTableCellAttribute.IsItalic">
             <summary>
            是否是斜体
             </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.AyTableCellAttribute.datatemplatekey">
            <summary>
            数据模板key
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.Table.GroupClass">
            <summary>
            合并组，暂时支持一列
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.GroupClass.index">
            <summary>
            从哪一行开始
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.GroupClass.groupCount">
            <summary>
            分组后每组中多少个值
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.GroupClass.column">
            <summary>
            要合并的那一列的索引
             </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.Table.HeadInfo">
            <summary>
            报表表格头部信息
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.HeadInfo.borderthickness">
            <summary>
            边框粗细
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.HeadInfo.bgcolor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.HeadInfo.defaultwidth">
            <summary>
            默认单元格宽度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.HeadInfo.defaultheight">
            <summary>
            默认行高度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.Table.HeadInfo.bordercolor">
            <summary>
            外边框色
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.Table.Root">
            <summary>
            根节点
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.IconMode">
            <summary>
            2015-06-29 09:25:40 用于转换treeview的模式
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AySimplyTreeViewIcon">
            <summary>
            用于指定子类型模板模式，此枚举用于简单的ay树
            2017-3-29 11:15:07
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeView.TreeMode">
            <summary>
            AySimplyTreeViewIcon子样式模式
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeView.FirstAyTreeViewItemPadding">
            <summary>
            2015-06-08 19:02:42 增加
            用于控制 AyTreeView整体偏移thick,而不影响整行选中
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeView.IsInitSubItem">
            <summary>
            用来控制是否显示子的弹出框，仅用于  图标模式,强制第一次打开所以子popup，然后瞬间关上，达到初始化的工作
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeView.AyTreeMode">
            <summary>
            2015-6-29 9:27:59 增加
            用于控制Treeview的显示模式
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTreeView.BindExpandAnimation">
            <summary>
            绑定动画
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTreeView.UnBindExpandAnimation">
            <summary>
            解绑动画
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeView.SelectedRightSJXOpacity">
            <summary>
            2015-6-12 8:49:02增加
            用来当treeview当做菜单导航时候按钮，是否显示三角
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTreeView.AyTreeViewItemExpanded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            每个时常都是一样的,暂定200
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyTreeView.CreateMenuFromXml(System.String)">
            <summary>
            根据xml生成菜单
            用法例如     return AyTreeViewMenuFromXml.Gets(System.IO.Directory.GetCurrentDirectory()+"/Config/sysmenu.xml");
            注意，xml节点必须 按照先父节点，然后子节点的顺序增加，结构为 Nav，NavItem不可改变
            作者：ay       2015-9-22 11:59:25
            </summary>
            <param name="xmlPath"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AutoScroller.#ctor(System.Windows.Controls.ItemsControl)">
            <summary>
            Initializes a new instance of the AutoScroller class.
            </summary>
            <param name="itemsControl">The ItemsControl that is scrolled.</param>
            <exception cref="T:System.ArgumentNullException">itemsControl is null.</exception>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AutoScroller.OffsetChanged">
            <summary>Occurs when the scroll offset has changed.</summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AutoScroller.IsEnabled">
            <summary>
            Gets or sets a value indicating whether the auto-scroller is enabled
            or not.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AutoScroller.TranslatePoint(System.Windows.Point)">
            <summary>
            Translates the specified point by the current scroll offset.
            </summary>
            <param name="point">The point to translate.</param>
            <returns>A new point offset by the current scroll amount.</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AutoScroller.UnRegister">
            <summary>
            Removes all the event handlers registered on the control.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AutoScroller.Update(System.Windows.Point)">
            <summary>
            Updates the location of the mouse and automatically scrolls if required.
            </summary>
            <param name="mouse">
            The location of the mouse, relative to the ScrollViewer's content.
            </param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDragDrop.GetDragAdornerMode(System.Windows.DependencyObject)">
            <summary>
            1 代表线条  区分 DragEnterT和DragEnterB  如果是2，那么就是DragEnter
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyListBoxSelector.EnabledProperty">
            <summary>Identifies the IsEnabled attached property.</summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyListBoxSelector.GetEnabled(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the IsEnabled attached property that indicates
            whether a selection rectangle can be used to select items or not.
            </summary>
            <param name="obj">Object on which to get the property.</param>
            <returns>
            true if items can be selected by a selection rectangle; otherwise, false.
            </returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyListBoxSelector.SetEnabled(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the IsEnabled attached property that indicates
            whether a selection rectangle can be used to select items or not.
            </summary>
            <param name="obj">Object on which to set the property.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ItemsControlSelector.#ctor(System.Windows.Controls.ItemsControl)">
            <summary>
            Initializes a new instance of the ItemsControlSelector class.
            </summary>
            <param name="itemsControl">
            The control that contains the items to select.
            </param>
            <exception cref="T:System.ArgumentNullException">itemsControl is null.</exception>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ItemsControlSelector.Reset">
            <summary>
            Resets the cached information, allowing a new selection to begin.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ItemsControlSelector.Scroll(System.Double,System.Double)">
            <summary>
            Scrolls the selection area by the specified amount.
            </summary>
            <param name="x">The horizontal scroll amount.</param>
            <param name="y">The vertical scroll amount.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ItemsControlSelector.UpdateSelection(System.Windows.Rect)">
            <summary>
            Updates the controls selection based on the specified area.
            </summary>
            <param name="area">
            The selection area, relative to the control passed in the contructor.
            </param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.OffsetChangedEventArgs.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the OffsetChangedEventArgs class.
            </summary>
            <param name="horizontal">The change in horizontal scroll.</param>
            <param name="vertical">The change in vertical scroll.</param>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.OffsetChangedEventArgs.HorizontalChange">
            <summary>Gets the change in horizontal scroll position.</summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.OffsetChangedEventArgs.VerticalChange">
            <summary>Gets the change in vertical scroll position.</summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.SelectionAdorner.#ctor(System.Windows.UIElement,System.String)">
            <summary>
            Initializes a new instance of the SelectionAdorner class.
            </summary>
            <param name="parent">
            The UIElement which this instance will overlay.
            </param>
            <exception cref="!:ArgumentNullException">parent is null.</exception>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.SelectionAdorner.SelectionArea">
            <summary>Gets or sets the area of the selection rectangle.</summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.SelectionAdorner.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations that are directed by the layout system.
            </summary>
            <param name="drawingContext">The drawing instructions.</param>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyGifControl">
            <summary>
            创建实例后，设置Image的基本属性
            设置InitControl设置路径
            StartAnimation
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyGifControl.DeleteObject(System.IntPtr)">
            <summary>
            Delete local bitmap resource
            Reference: http://msdn.microsoft.com/en-us/library/dd183539(VS.85).aspx
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyGifControl.OnInitialized(System.EventArgs)">
            <summary>
            Override the OnInitialized method
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyGifControl.InitControl(System.String)">
            <summary>
            Load the embedded image for the Image.Source
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyGifControl.AnimatedGIFControl_Unloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Close the FileStream to unlock the GIF file
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyGifControl.StartAnimate">
            <summary>
            Start animation
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyGifControl.StopAnimate">
            <summary>
            Stop animation
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyGifControl.OnFrameChanged(System.Object,System.EventArgs)">
            <summary>
            Event handler for the frame changed
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.ImageBehavior">
            <summary>
            Provides attached properties that display animated GIFs in a standard Image control.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ImageBehavior.GetAnimatedSource(System.Windows.Controls.Image)">
            <summary>
            Gets the value of the <c>AnimatedSource</c> attached property for the specified object.
            </summary>
            <param name="obj">The element from which to read the property value.</param>
            <returns>The currently displayed animated image.</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ImageBehavior.SetAnimatedSource(System.Windows.Controls.Image,System.Windows.Media.ImageSource)">
            <summary>
            Sets the value of the <c>AnimatedSource</c> attached property for the specified object.
            </summary>
            <param name="obj">The element on which to set the property value.</param>
            <param name="value">The animated image to display.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ImageBehavior.AnimatedSourceProperty">
            <summary>
            Identifies the <c>AnimatedSource</c> attached property.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ImageBehavior.GetRepeatBehavior(System.Windows.Controls.Image)">
            <summary>
            Gets the value of the <c>RepeatBehavior</c> attached property for the specified object.
            </summary>
            <param name="obj">The element from which to read the property value.</param>
            <returns>The repeat behavior of the animated image.</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ImageBehavior.SetRepeatBehavior(System.Windows.Controls.Image,System.Windows.Media.Animation.RepeatBehavior)">
            <summary>
            Sets the value of the <c>RepeatBehavior</c> attached property for the specified object.
            </summary>
            <param name="obj">The element on which to set the property value.</param>
            <param name="value">The repeat behavior of the animated image.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ImageBehavior.RepeatBehaviorProperty">
            <summary>
            Identifies the <c>RepeatBehavior</c> attached property.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ImageBehavior.GetAnimateInDesignMode(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the <c>AnimateInDesignMode</c> attached property for the specified object.
            </summary>
            <param name="obj">The element from which to read the property value.</param>
            <returns>true if GIF animations are shown in design mode; false otherwise.</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ImageBehavior.SetAnimateInDesignMode(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the <c>AnimateInDesignMode</c> attached property for the specified object.
            </summary>
            <param name="obj">The element on which to set the property value.</param>
            <param name="value">true to show GIF animations in design mode; false otherwise.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ImageBehavior.AnimateInDesignModeProperty">
            <summary>
            Identifies the <c>AnimateInDesignMode</c> attached property.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ImageBehavior.GetAutoStart(System.Windows.Controls.Image)">
            <summary>
            Gets the value of the <c>AutoStart</c> attached property for the specified object.
            </summary>
            <param name="obj">The element from which to read the property value.</param>
            <returns>true if the animation should start immediately when loaded. Otherwise, false.</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ImageBehavior.SetAutoStart(System.Windows.Controls.Image,System.Boolean)">
            <summary>
            Sets the value of the <c>AutoStart</c> attached property for the specified object.
            </summary>
            <param name="obj">The element from which to read the property value.</param>
            <param name="value">true if the animation should start immediately when loaded. Otherwise, false.</param>
            <remarks>The default value is true.</remarks>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ImageBehavior.AutoStartProperty">
            <summary>
            Identifies the <c>AutoStart</c> attached property.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ImageBehavior.GetAnimationController(System.Windows.Controls.Image)">
            <summary>
            Gets the animation controller for the specified <c>Image</c> control.
            </summary>
            <param name="imageControl"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ImageBehavior.GetIsAnimationLoaded(System.Windows.Controls.Image)">
            <summary>
            Gets the value of the <c>IsAnimationLoaded</c> attached property for the specified object.
            </summary>
            <param name="image">The element from which to read the property value.</param>
            <returns>true if the animation is loaded. Otherwise, false.</returns>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ImageBehavior.IsAnimationLoadedProperty">
            <summary>
            Identifies the <c>IsAnimationLoaded</c> attached property.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ImageBehavior.AnimationLoadedEvent">
            <summary>
            Identifies the <c>AnimationLoaded</c> attached event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ImageBehavior.AddAnimationLoadedHandler(System.Windows.Controls.Image,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the AnimationLoaded attached event.
            </summary>
            <param name="image">The UIElement that listens to this event.</param>
            <param name="handler">The event handler to be added.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ImageBehavior.RemoveAnimationLoadedHandler(System.Windows.Controls.Image,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the AnimationLoaded attached event.
            </summary>
            <param name="image">The UIElement that listens to this event.</param>
            <param name="handler">The event handler to be removed.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ImageBehavior.AnimationCompletedEvent">
            <summary>
            Identifies the <c>AnimationCompleted</c> attached event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ImageBehavior.AddAnimationCompletedHandler(System.Windows.Controls.Image,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the AnimationCompleted attached event.
            </summary>
            <param name="d">The UIElement that listens to this event.</param>
            <param name="handler">The event handler to be added.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ImageBehavior.RemoveAnimationCompletedHandler(System.Windows.Controls.Image,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the AnimationCompleted attached event.
            </summary>
            <param name="d">The UIElement that listens to this event.</param>
            <param name="handler">The event handler to be removed.</param>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.BusyIndicator">
            <summary>
            A control to provide a visual indicator when an application is busy.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BusyIndicator._displayAfterTimer">
            <summary>
            Timer used to delay the initial display and avoid flickering.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.BusyIndicator.OnApplyTemplate">
            <summary>
            Overrides the OnApplyTemplate method.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.BusyIndicator.IsContentVisible">
            <summary>
            Gets or sets a value indicating whether the BusyContent is visible.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BusyIndicator.IsBusyProperty">
            <summary>
            Identifies the IsBusy dependency property.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.BusyIndicator.IsBusy">
            <summary>
            Gets or sets a value indicating whether the busy indicator should show.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.BusyIndicator.OnIsBusyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsBusyProperty property changed handler.
            </summary>
            <param name="d">BusyIndicator that changed its IsBusy.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.BusyIndicator.OnIsBusyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsBusyProperty property changed handler.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BusyIndicator.BusyContentProperty">
            <summary>
            Identifies the BusyContent dependency property.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.BusyIndicator.BusyContent">
            <summary>
            Gets or sets a value indicating the busy content to display to the user.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BusyIndicator.BusyContentTemplateProperty">
            <summary>
            Identifies the BusyTemplate dependency property.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.BusyIndicator.BusyContentTemplate">
            <summary>
            Gets or sets a value indicating the template to use for displaying the busy content to the user.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BusyIndicator.DisplayAfterProperty">
            <summary>
            Identifies the DisplayAfter dependency property.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.BusyIndicator.DisplayAfter">
            <summary>
            Gets or sets a value indicating how long to delay before displaying the busy content.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BusyIndicator.FocusAfterBusyProperty">
            <summary>
            Identifies the FocusAfterBusy dependency property.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.BusyIndicator.FocusAfterBusy">
            <summary>
            Gets or sets a Control that should get focus when the busy indicator disapears.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BusyIndicator.OverlayStyleProperty">
            <summary>
            Identifies the OverlayStyle dependency property.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.BusyIndicator.OverlayStyle">
            <summary>
            Gets or sets a value indicating the style to use for the overlay.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BusyIndicator.ProgressBarStyleProperty">
            <summary>
            Identifies the ProgressBarStyle dependency property.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.BusyIndicator.ProgressBarStyle">
            <summary>
            Gets or sets a value indicating the style to use for the progress bar.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.BusyIndicator.DisplayAfterTimerElapsed(System.Object,System.EventArgs)">
            <summary>
            Handler for the DisplayAfterTimer.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.BusyIndicator.ChangeVisualState(System.Boolean)">
            <summary>
            Changes the control's visual state(s).
            </summary>
            <param name="useTransitions">True if state transitions should be used.</param>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.LoadingIndicator">
            <summary>
            A control featuring a range of loading indicating animations.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.LoadingIndicator.SpeedRatioProperty">
            <summary>
            Identifies the <see cref="!:LoadingIndicators.WPF.LoadingIndicator.SpeedRatio"/> dependency property.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.LoadingIndicator.IsActiveProperty">
            <summary>
            Identifies the <see cref="!:LoadingIndicators.WPF.LoadingIndicator.IsActive"/> dependency property.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.LoadingIndicator.SpeedRatio">
            <summary>
            Get/set the speed ratio of the animation.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.LoadingIndicator.IsActive">
            <summary>
            Get/set whether the loading indicator is active.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.LoadingIndicator.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code
            or internal processes call System.Windows.FrameworkElement.ApplyTemplate().
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.LoadingIndicator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:LoadingIndicators.WPF.LoadingIndicator"/> class.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BusyIndicatorVisualStates.GroupBusyStatus">
            <summary>
            Busyness group name.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BusyIndicatorVisualStates.StateBusy">
            <summary>
            Busy state for BusyIndicator.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BusyIndicatorVisualStates.StateIdle">
            <summary>
            Idle state for BusyIndicator.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BusyIndicatorVisualStates.GroupVisibility">
            <summary>
            BusyDisplay group.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BusyIndicatorVisualStates.StateVisible">
            <summary>
            Visible state name for BusyIndicator.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BusyIndicatorVisualStates.StateHidden">
            <summary>
            Hidden state name for BusyIndicator.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyMarquee.Loop">
            <summary>
            Gets/Sets The loop of the animation. Zero represents forever
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyMarquee.Direction">
            <summary>
            Gets/Sets the direction of the animation.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyMarquee.Behavior">
            <summary>
            Gets/Sets The animation behavior.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyMarquee.ScrollAmount">
            <summary>
            Gets/Sets The offset each time the content moves
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyMarquee.ScrollDelay">
            <summary>
            Gets/Sets The time delay between each movement.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.NineGridBorder">
            <summary>
            来源地址：http://bbs.csdn.net/topics/390700173?page=1
            最后编辑：ay  2015年12月4日10:58:32
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.BalloonIcon">
            <summary>
             Supported icons for the tray's balloon messages.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BalloonIcon.None">
            <summary>
            The balloon message is displayed without an icon.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BalloonIcon.Info">
            <summary>
            An information is displayed.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BalloonIcon.Warning">
            <summary>
            A warning is displayed.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.BalloonIcon.Error">
            <summary>
            An error is displayed.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.PopupActivationMode">
            <summary>
            Defines flags that define when a popup
            is being displyed.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.PopupActivationMode.LeftClick">
            <summary>
            The item is displayed if the user clicks the
            tray icon with the left mouse button.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.PopupActivationMode.RightClick">
            <summary>
            The item is displayed if the user clicks the
            tray icon with the right mouse button.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.PopupActivationMode.DoubleClick">
            <summary>
            The item is displayed if the user double-clicks the
            tray icon.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.PopupActivationMode.LeftOrRightClick">
            <summary>
            The item is displayed if the user clicks the
            tray icon with the left or the right mouse button.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.PopupActivationMode.LeftOrDoubleClick">
            <summary>
            The item is displayed if the user clicks the
            tray icon with the left mouse button or if a
            double-click is being performed.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.PopupActivationMode.MiddleClick">
            <summary>
            The item is displayed if the user clicks the
            tray icon with the middle mouse button.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.PopupActivationMode.All">
            <summary>
            The item is displayed whenever a click occurs.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.TaskbarIcon">
            <summary>
            A WPF proxy to for a taskbar icon (NotifyIcon) that sits in the system's
            taskbar notification area ("system tray").
            </summary>
            <summary>
            Contains declarations of WPF dependency properties
            and events.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.iconData">
            <summary>
            Represents the current icon data.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.messageSink">
            <summary>
            Receives messages from the taskbar icon.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.singleClickTimerAction">
            <summary>
            An action that is being invoked if the
            <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.singleClickTimer"/> fires.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.singleClickTimer">
            <summary>
            A timer that is used to differentiate between single
            and double clicks.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.doubleClickWaitTime">
            <summary>
            The time we should wait for a double click.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.balloonCloseTimer">
            <summary>
            A timer that is used to close open balloon tooltips.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.IsTaskbarIconCreated">
            <summary>
            Indicates whether the taskbar icon has been created or not.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.SupportsCustomToolTips">
            <summary>
            Indicates whether custom tooltips are supported, which depends
            on the OS. Windows Vista or higher is required in order to
            support this feature.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.IsPopupOpen">
            <summary>
            Checks whether a non-tooltip popup is currently opened.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.#ctor">
            <summary>
            Inits the taskbar icon and registers a message listener
            in order to receive events from the taskbar area.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.ShowCustomBalloon(System.Windows.UIElement,System.Windows.Controls.Primitives.PopupAnimation,System.Nullable{System.Int32})">
            <summary>
            Shows a custom control as a tooltip in the tray location.
            </summary>
            <param name="balloon"></param>
            <param name="animation">An optional animation for the popup.</param>
            <param name="timeout">The time after which the popup is being closed.
            Submit null in order to keep the balloon open inde
            </param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="balloon"/>
            is a null reference.</exception>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.ResetBalloonCloseTimer">
            <summary>
            Resets the closing timeout, which effectively
            keeps a displayed balloon message open until
            it is either closed programmatically through
            <see cref="M:Ay.Framework.WPF.Controls.TaskbarIcon.CloseBalloon"/> or due to a new
            message being displayed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.CloseBalloon">
            <summary>
            Closes the current <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.CustomBalloon"/>, if the
            property is set.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.CloseBalloonCallback(System.Object)">
            <summary>
            Timer-invoke event which closes the currently open balloon and
            resets the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.CustomBalloon"/> dependency property.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnMouseEvent(Ay.Framework.WPF.NotifyIcon.Interop.MouseEvent)">
            <summary>
            Processes mouse events, which are bubbled
            through the class' routed events, trigger
            certain actions (e.g. show a popup), or
            both.
            </summary>
            <param name="me">Event flag.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnToolTipChange(System.Boolean)">
            <summary>
            Displays a custom tooltip, if available. This method is only
            invoked for Windows Vista and above.
            </summary>
            <param name="visible">Whether to show or hide the tooltip.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.CreateCustomToolTip">
            <summary>
            Creates a <see cref="T:System.Windows.Controls.ToolTip"/> control that either
            wraps the currently set <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTip"/>
            control or the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.ToolTipText"/> string.<br/>
            If <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTip"/> itself is already
            a <see cref="T:System.Windows.Controls.ToolTip"/> instance, it will be used directly.
            </summary>
            <remarks>We use a <see cref="T:System.Windows.Controls.ToolTip"/> rather than
            <see cref="T:System.Windows.Controls.Primitives.Popup"/> because there was no way to prevent a
            popup from causing cyclic open/close commands if it was
            placed under the mouse. ToolTip internally uses a Popup of
            its own, but takes advance of Popup's internal <see cref="P:System.Windows.UIElement.IsHitTestVisible"/>
            property which prevents this issue.</remarks>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.WriteToolTipSettings">
            <summary>
            Sets tooltip settings for the class depending on defined
            dependency properties and OS support.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.CreatePopup">
            <summary>
            Creates a <see cref="T:System.Windows.Controls.ToolTip"/> control that either
            wraps the currently set <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTip"/>
            control or the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.ToolTipText"/> string.<br/>
            If <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTip"/> itself is already
            a <see cref="T:System.Windows.Controls.ToolTip"/> instance, it will be used directly.
            </summary>
            <remarks>We use a <see cref="T:System.Windows.Controls.ToolTip"/> rather than
            <see cref="T:System.Windows.Controls.Primitives.Popup"/> because there was no way to prevent a
            popup from causing cyclic open/close commands if it was
            placed under the mouse. ToolTip internally uses a Popup of
            its own, but takes advance of Popup's internal <see cref="P:System.Windows.UIElement.IsHitTestVisible"/>
            property which prevents this issue.</remarks>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.ShowTrayPopup(Ay.Framework.WPF.NotifyIcon.Interop.Point)">
            <summary>
            Displays the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopup"/> control if
            it was set.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.ShowContextMenu(Ay.Framework.WPF.NotifyIcon.Interop.Point)">
            <summary>
            Displays the <see cref="T:System.Windows.Controls.ContextMenu"/> if
            it was set.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnBalloonToolTipChanged(System.Boolean)">
            <summary>
            Bubbles events if a balloon ToolTip was displayed
            or removed.
            </summary>
            <param name="visible">Whether the ToolTip was just displayed
            or removed.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.ShowBalloonTip(System.String,System.String,Ay.Framework.WPF.Controls.BalloonIcon)">
            <summary>
            Displays a balloon tip with the specified title,
            text, and icon in the taskbar for the specified time period.
            </summary>
            <param name="title">The title to display on the balloon tip.</param>
            <param name="message">The text to display on the balloon tip.</param>
            <param name="symbol">A symbol that indicates the severity.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.ShowBalloonTip(System.String,System.String,System.Drawing.Icon,System.Boolean)">
            <summary>
            Displays a balloon tip with the specified title,
            text, and a custom icon in the taskbar for the specified time period.
            </summary>
            <param name="title">The title to display on the balloon tip.</param>
            <param name="message">The text to display on the balloon tip.</param>
            <param name="customIcon">A custom icon.</param>
            <param name="largeIcon">True to allow large icons (Windows Vista and later).</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="customIcon"/>
            is a null reference.</exception>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.ShowBalloonTip(System.String,System.String,Ay.Framework.WPF.NotifyIcon.Interop.BalloonFlags,System.IntPtr)">
            <summary>
            Invokes <see cref="M:Ay.Framework.WPF.NotifyIcon.Interop.WinApi.Shell_NotifyIcon(Ay.Framework.WPF.NotifyIcon.Interop.NotifyCommand,Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData@)"/> in order to display
            a given balloon ToolTip.
            </summary>
            <param name="title">The title to display on the balloon tip.</param>
            <param name="message">The text to display on the balloon tip.</param>
            <param name="flags">Indicates what icon to use.</param>
            <param name="balloonIconHandle">A handle to a custom icon, if any, or
            <see cref="F:System.IntPtr.Zero"/>.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.HideBalloonTip">
            <summary>
            Hides a balloon ToolTip, if any is displayed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.DoSingleClickAction(System.Object)">
            <summary>
            Performs a delayed action if the user requested an action
            based on a single click of the left mouse.<br/>
            This method is invoked by the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.singleClickTimer"/>.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.SetVersion">
            <summary>
            Sets the version flag for the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.iconData"/>.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnTaskbarCreated">
            <summary>
            Recreates the taskbar icon if the whole taskbar was
            recreated (e.g. because Explorer was shut down).
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.CreateTaskbarIcon">
            <summary>
            Creates the taskbar icon. This message is invoked during initialization,
            if the taskbar is restarted, and whenever the icon is displayed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RemoveTaskbarIcon">
            <summary>
            Closes the taskbar icon if required.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.IsDisposed">
            <summary>
            Set to true as soon as <c>Dispose</c> has been invoked.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.EnsureNotDisposed">
            <summary>
            Checks if the object has been disposed and
            raises a <see cref="T:System.ObjectDisposedException"/> in case
            the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.IsDisposed"/> flag is true.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnExit(System.Object,System.EventArgs)">
            <summary>
            Disposes the class if the application exits.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.Finalize">
            <summary>
            This destructor will run only if the <see cref="M:Ay.Framework.WPF.Controls.TaskbarIcon.Dispose"/>
            method does not get called. This gives this base class the
            opportunity to finalize.
            <para>
            Important: Do not provide destructors in types derived from
            this class.
            </para>
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.Dispose">
            <summary>
            Disposes the object.
            </summary>
            <remarks>This method is not virtual by design. Derived classes
            should override <see cref="M:Ay.Framework.WPF.Controls.TaskbarIcon.Dispose(System.Boolean)"/>.
            </remarks>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.Dispose(System.Boolean)">
            <summary>
            Closes the tray and releases all resources.
            </summary>
            <summary>
            <c>Dispose(bool disposing)</c> executes in two distinct scenarios.
            If disposing equals <c>true</c>, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            </summary>
            <param name="disposing">If disposing equals <c>false</c>, the method
            has been called by the runtime from inside the finalizer and you
            should not reference other objects. Only unmanaged resources can
            be disposed.</param>
            <remarks>Check the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.IsDisposed"/> property to determine whether
            the method has already been called.</remarks>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.CategoryName">
            <summary>
            Category name that is set on designer properties.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopupResolvedPropertyKey">
            <summary>
            TrayPopupResolved Read-Only Dependency Property
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopupResolvedProperty">
            <summary>
            A read-only dependency property that returns the <see cref="T:System.Windows.Controls.Primitives.Popup"/>
            that is being displayed in the taskbar area based on a user action.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopupResolved">
            <summary>
            Gets the TrayPopupResolved property. Returns
            a <see cref="T:System.Windows.Controls.Primitives.Popup"/> which is either the
            <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopup"/> control itself or a
            <see cref="T:System.Windows.Controls.Primitives.Popup"/> control that contains the
            <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopup"/>.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.SetTrayPopupResolved(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Provides a secure method for setting the TrayPopupResolved property.  
            This dependency property indicates ....
            </summary>
            <param name="value">The new value for the property.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTipResolvedPropertyKey">
            <summary>
            TrayToolTipResolved Read-Only Dependency Property
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTipResolvedProperty">
            <summary>
            A read-only dependency property that returns the <see cref="T:System.Windows.Controls.ToolTip"/>
            that is being displayed.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTipResolved">
            <summary>
            Gets the TrayToolTipResolved property. Returns 
            a <see cref="T:System.Windows.Controls.ToolTip"/> control that was created
            in order to display either <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTip"/>
            or <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.ToolTipText"/>.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.SetTrayToolTipResolved(System.Windows.Controls.ToolTip)">
            <summary>
            Provides a secure method for setting the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTipResolved"/>
            property.  
            </summary>
            <param name="value">The new value for the property.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.CustomBalloonPropertyKey">
            <summary>
            CustomBalloon Read-Only Dependency Property
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.CustomBalloonProperty">
            <summary>
            Maintains a currently displayed custom balloon.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.CustomBalloon">
            <summary>
            A custom popup that is being displayed in the tray area in order
            to display messages to the user.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.SetCustomBalloon(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Provides a secure method for setting the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.CustomBalloon"/> property.  
            </summary>
            <param name="value">The new value for the property.</param>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.Icon">
            <summary>
            Gets or sets the icon to be displayed. This is not a
            dependency property - if you want to assign the property
            through XAML, please use the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.IconSource"/>
            dependency property.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.IconSourceProperty">
            <summary>
            Resolves an image source and updates the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.Icon" /> property accordingly.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.IconSource">
            <summary>
            A property wrapper for the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.IconSourceProperty"/>
            dependency property:<br/>
            Resolves an image source and updates the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.Icon" /> property accordingly.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.IconSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            A static callback listener which is being invoked if the
            <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.IconSourceProperty"/> dependency property has
            been changed. Invokes the <see cref="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnIconSourcePropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            instance method of the changed instance.
            </summary>
            <param name="d">The currently processed owner of the property.</param>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnIconSourcePropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes of the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.IconSourceProperty"/> dependency property. As
            WPF internally uses the dependency property system and bypasses the
            <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.IconSource"/> property wrapper, updates of the property's value
            should be handled here.
            </summary>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.ToolTipTextProperty">
            <summary>
            A tooltip text that is being displayed if no custom <see cref="T:System.Windows.Controls.ToolTip"/>
            was set or if custom tooltips are not supported.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.ToolTipText">
            <summary>
            A property wrapper for the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.ToolTipTextProperty"/>
            dependency property:<br/>
            A tooltip text that is being displayed if no custom <see cref="T:System.Windows.Controls.ToolTip"/>
            was set or if custom tooltips are not supported.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.ToolTipTextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            A static callback listener which is being invoked if the
            <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.ToolTipTextProperty"/> dependency property has
            been changed. Invokes the <see cref="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnToolTipTextPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            instance method of the changed instance.
            </summary>
            <param name="d">The currently processed owner of the property.</param>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnToolTipTextPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes of the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.ToolTipTextProperty"/> dependency property. As
            WPF internally uses the dependency property system and bypasses the
            <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.ToolTipText"/> property wrapper, updates of the property's value
            should be handled here.
            </summary>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTipProperty">
            <summary>
            A custom UI element that is displayed as a tooltip if the user hovers over the taskbar icon.
            Works only with Vista and above. Accordingly, you should make sure that
            the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.ToolTipText"/> property is set as well.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTip">
            <summary>
            A property wrapper for the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTipProperty"/>
            dependency property:<br/>
            A custom UI element that is displayed as a tooltip if the user hovers over the taskbar icon.
            Works only with Vista and above. Accordingly, you should make sure that
            the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.ToolTipText"/> property is set as well.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTipPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            A static callback listener which is being invoked if the
            <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTipProperty"/> dependency property has
            been changed. Invokes the <see cref="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnTrayToolTipPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            instance method of the changed instance.
            </summary>
            <param name="d">The currently processed owner of the property.</param>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnTrayToolTipPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes of the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTipProperty"/> dependency property. As
            WPF internally uses the dependency property system and bypasses the
            <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTip"/> property wrapper, updates of the property's value
            should be handled here.
            </summary>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopupProperty">
            <summary>
            A control that is displayed as a popup when the taskbar icon is clicked.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopup">
            <summary>
            A property wrapper for the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopupProperty"/>
            dependency property:<br/>
            A control that is displayed as a popup when the taskbar icon is clicked.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopupPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            A static callback listener which is being invoked if the
            <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopupProperty"/> dependency property has
            been changed. Invokes the <see cref="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnTrayPopupPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            instance method of the changed instance.
            </summary>
            <param name="d">The currently processed owner of the property.</param>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnTrayPopupPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes of the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopupProperty"/> dependency property. As
            WPF internally uses the dependency property system and bypasses the
            <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopup"/> property wrapper, updates of the property's value
            should be handled here.
            </summary>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.MenuActivationProperty">
            <summary>
            Defines what mouse events display the context menu.
            Defaults to <see cref="F:Ay.Framework.WPF.Controls.PopupActivationMode.RightClick"/>.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.MenuActivation">
            <summary>
            A property wrapper for the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.MenuActivationProperty"/>
            dependency property:<br/>
            Defines what mouse events display the context menu.
            Defaults to <see cref="F:Ay.Framework.WPF.Controls.PopupActivationMode.RightClick"/>.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.PopupActivationProperty">
            <summary>
            Defines what mouse events trigger the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopup" />.
            Default is <see cref="F:Ay.Framework.WPF.Controls.PopupActivationMode.LeftClick" />.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.PopupActivation">
            <summary>
            A property wrapper for the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.PopupActivationProperty"/>
            dependency property:<br/>
            Defines what mouse events trigger the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopup" />.
            Default is <see cref="F:Ay.Framework.WPF.Controls.PopupActivationMode.LeftClick" />.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.VisibilityPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            A static callback listener which is being invoked if the
            <see cref="F:System.Windows.UIElement.VisibilityProperty"/> dependency property has
            been changed. Invokes the <see cref="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnVisibilityPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            instance method of the changed instance.
            </summary>
            <param name="d">The currently processed owner of the property.</param>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnVisibilityPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes of the <see cref="F:System.Windows.UIElement.VisibilityProperty"/> dependency property. As
            WPF internally uses the dependency property system and bypasses the
            <see cref="T:System.Windows.Visibility"/> property wrapper, updates of the property's value
            should be handled here.
            </summary>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.UpdateDataContext(System.Windows.FrameworkElement,System.Object,System.Object)">
            <summary>
            Updates the <see cref="F:System.Windows.FrameworkElement.DataContextProperty"/> of a given
            <see cref="T:System.Windows.FrameworkElement"/>. This method only updates target elements
            that do not already have a data context of their own, and either assigns
            the <see cref="P:System.Windows.FrameworkElement.DataContext"/> of the NotifyIcon, or the
            NotifyIcon itself, if no data context was assigned at all.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.DataContextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            A static callback listener which is being invoked if the
            <see cref="F:System.Windows.FrameworkElement.DataContextProperty"/> dependency property has
            been changed. Invokes the <see cref="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnDataContextPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            instance method of the changed instance.
            </summary>
            <param name="d">The currently processed owner of the property.</param>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnDataContextPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes of the <see cref="F:System.Windows.FrameworkElement.DataContextProperty"/> dependency property. As
            WPF internally uses the dependency property system and bypasses the
            <see cref="P:System.Windows.FrameworkElement.DataContext"/> property wrapper, updates of the property's value
            should be handled here.
            </summary>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.ContextMenuPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            A static callback listener which is being invoked if the
            <see cref="F:System.Windows.FrameworkElement.ContextMenuProperty"/> dependency property has
            been changed. Invokes the <see cref="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnContextMenuPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            instance method of the changed instance.
            </summary>
            <param name="d">The currently processed owner of the property.</param>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.OnContextMenuPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Releases the old and updates the new <see cref="T:System.Windows.Controls.ContextMenu"/> property
            in order to reflect both the NotifyIcon's <see cref="P:System.Windows.FrameworkElement.DataContext"/>
            property and have the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.ParentTaskbarIconProperty"/> assigned.
            </summary>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.DoubleClickCommandProperty">
            <summary>
            Associates a command that is being executed if the tray icon is being
            double clicked.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.DoubleClickCommand">
            <summary>
            A property wrapper for the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.DoubleClickCommandProperty"/>
            dependency property:<br/>
            Associates a command that is being executed if the tray icon is being
            double clicked.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.DoubleClickCommandParameterProperty">
            <summary>
            Command parameter for the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.DoubleClickCommand"/>.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.DoubleClickCommandParameter">
            <summary>
            A property wrapper for the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.DoubleClickCommandParameterProperty"/>
            dependency property:<br/>
            Command parameter for the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.DoubleClickCommand"/>.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.DoubleClickCommandTargetProperty">
            <summary>
            The target of the command that is fired if the notify icon is double clicked.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.DoubleClickCommandTarget">
            <summary>
            A property wrapper for the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.DoubleClickCommandTargetProperty"/>
            dependency property:<br/>
            The target of the command that is fired if the notify icon is double clicked.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.LeftClickCommandProperty">
            <summary>
            Associates a command that is being executed if the tray icon is being
            double clicked.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.LeftClickCommand">
            <summary>
            A property wrapper for the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.LeftClickCommandProperty"/>
            dependency property:<br/>
            Associates a command that is being executed if the tray icon is being
            left-clicked.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.LeftClickCommandParameterProperty">
            <summary>
            Command parameter for the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.LeftClickCommand"/>.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.LeftClickCommandParameter">
            <summary>
            A property wrapper for the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.LeftClickCommandParameterProperty"/>
            dependency property:<br/>
            Command parameter for the <see cref="P:Ay.Framework.WPF.Controls.TaskbarIcon.LeftClickCommand"/>.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.LeftClickCommandTargetProperty">
            <summary>
            The target of the command that is fired if the notify icon is clicked.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.LeftClickCommandTarget">
            <summary>
            A property wrapper for the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.LeftClickCommandTargetProperty"/>
            dependency property:<br/>
            The target of the command that is fired if the notify icon is clicked.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.NoLeftClickDelayProperty">
            <summary>
            Set to true to make left clicks work without delay.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.TaskbarIcon.NoLeftClickDelay">
            <summary>
            A property wrapper for the <see cref="F:Ay.Framework.WPF.Controls.TaskbarIcon.NoLeftClickDelayProperty"/>
            dependency property:<br/>
            Set to true to make left clicks work without delay.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayLeftMouseDownEvent">
            <summary>
            TrayLeftMouseDown Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.TrayLeftMouseDown">
            <summary>
            Occurs when the user presses the left mouse button.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayLeftMouseDownEvent">
            <summary>
            A helper method to raise the TrayLeftMouseDown event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayLeftMouseDownEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayLeftMouseDown event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayRightMouseDownEvent">
            <summary>
            TrayRightMouseDown Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.TrayRightMouseDown">
            <summary>
            Occurs when the presses the right mouse button.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayRightMouseDownEvent">
            <summary>
            A helper method to raise the TrayRightMouseDown event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayRightMouseDownEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayRightMouseDown event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayMiddleMouseDownEvent">
            <summary>
            TrayMiddleMouseDown Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.TrayMiddleMouseDown">
            <summary>
            Occurs when the user presses the middle mouse button.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayMiddleMouseDownEvent">
            <summary>
            A helper method to raise the TrayMiddleMouseDown event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayMiddleMouseDownEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayMiddleMouseDown event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayLeftMouseUpEvent">
            <summary>
            TrayLeftMouseUp Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.TrayLeftMouseUp">
            <summary>
            Occurs when the user releases the left mouse button.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayLeftMouseUpEvent">
            <summary>
            A helper method to raise the TrayLeftMouseUp event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayLeftMouseUpEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayLeftMouseUp event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayRightMouseUpEvent">
            <summary>
            TrayRightMouseUp Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.TrayRightMouseUp">
            <summary>
            Occurs when the user releases the right mouse button.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayRightMouseUpEvent">
            <summary>
            A helper method to raise the TrayRightMouseUp event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayRightMouseUpEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayRightMouseUp event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayMiddleMouseUpEvent">
            <summary>
            TrayMiddleMouseUp Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.TrayMiddleMouseUp">
            <summary>
            Occurs when the user releases the middle mouse button.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayMiddleMouseUpEvent">
            <summary>
            A helper method to raise the TrayMiddleMouseUp event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayMiddleMouseUpEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayMiddleMouseUp event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayMouseDoubleClickEvent">
            <summary>
            TrayMouseDoubleClick Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.TrayMouseDoubleClick">
            <summary>
            Occurs when the user double-clicks the taskbar icon.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayMouseDoubleClickEvent">
            <summary>
            A helper method to raise the TrayMouseDoubleClick event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayMouseDoubleClickEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayMouseDoubleClick event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayMouseMoveEvent">
            <summary>
            TrayMouseMove Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.TrayMouseMove">
            <summary>
            Occurs when the user moves the mouse over the taskbar icon.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayMouseMoveEvent">
            <summary>
            A helper method to raise the TrayMouseMove event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayMouseMoveEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayMouseMove event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayBalloonTipShownEvent">
            <summary>
            TrayBalloonTipShown Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.TrayBalloonTipShown">
            <summary>
            Occurs when a balloon ToolTip is displayed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayBalloonTipShownEvent">
            <summary>
            A helper method to raise the TrayBalloonTipShown event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayBalloonTipShownEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayBalloonTipShown event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayBalloonTipClosedEvent">
            <summary>
            TrayBalloonTipClosed Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.TrayBalloonTipClosed">
            <summary>
            Occurs when a balloon ToolTip was closed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayBalloonTipClosedEvent">
            <summary>
            A helper method to raise the TrayBalloonTipClosed event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayBalloonTipClosedEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayBalloonTipClosed event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayBalloonTipClickedEvent">
            <summary>
            TrayBalloonTipClicked Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.TrayBalloonTipClicked">
            <summary>
            Occurs when the user clicks on a balloon ToolTip.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayBalloonTipClickedEvent">
            <summary>
            A helper method to raise the TrayBalloonTipClicked event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayBalloonTipClickedEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayBalloonTipClicked event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayContextMenuOpenEvent">
            <summary>
            TrayContextMenuOpen Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.TrayContextMenuOpen">
            <summary>
            Bubbled event that occurs when the context menu of the taskbar icon is being displayed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayContextMenuOpenEvent">
            <summary>
            A helper method to raise the TrayContextMenuOpen event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayContextMenuOpenEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayContextMenuOpen event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.PreviewTrayContextMenuOpenEvent">
            <summary>
            PreviewTrayContextMenuOpen Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.PreviewTrayContextMenuOpen">
            <summary>
            Tunneled event that occurs when the context menu of the taskbar icon is being displayed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaisePreviewTrayContextMenuOpenEvent">
            <summary>
            A helper method to raise the PreviewTrayContextMenuOpen event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaisePreviewTrayContextMenuOpenEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the PreviewTrayContextMenuOpen event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopupOpenEvent">
            <summary>
            TrayPopupOpen Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.TrayPopupOpen">
            <summary>
            Bubbled event that occurs when the custom popup is being opened.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayPopupOpenEvent">
            <summary>
            A helper method to raise the TrayPopupOpen event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayPopupOpenEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayPopupOpen event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.PreviewTrayPopupOpenEvent">
            <summary>
            PreviewTrayPopupOpen Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.PreviewTrayPopupOpen">
            <summary>
            Tunneled event that occurs when the custom popup is being opened.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaisePreviewTrayPopupOpenEvent">
            <summary>
            A helper method to raise the PreviewTrayPopupOpen event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaisePreviewTrayPopupOpenEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the PreviewTrayPopupOpen event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTipOpenEvent">
            <summary>
            TrayToolTipOpen Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTipOpen">
            <summary>
            Bubbled event that occurs when the custom ToolTip is being displayed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayToolTipOpenEvent">
            <summary>
            A helper method to raise the TrayToolTipOpen event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayToolTipOpenEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayToolTipOpen event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.PreviewTrayToolTipOpenEvent">
            <summary>
            PreviewTrayToolTipOpen Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.PreviewTrayToolTipOpen">
            <summary>
            Tunneled event that occurs when the custom ToolTip is being displayed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaisePreviewTrayToolTipOpenEvent">
            <summary>
            A helper method to raise the PreviewTrayToolTipOpen event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaisePreviewTrayToolTipOpenEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the PreviewTrayToolTipOpen event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTipCloseEvent">
            <summary>
            TrayToolTipClose Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.TrayToolTipClose">
            <summary>
            Bubbled event that occurs when a custom tooltip is being closed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayToolTipCloseEvent">
            <summary>
            A helper method to raise the TrayToolTipClose event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseTrayToolTipCloseEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayToolTipClose event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.PreviewTrayToolTipCloseEvent">
            <summary>
            PreviewTrayToolTipClose Routed Event
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.TaskbarIcon.PreviewTrayToolTipClose">
            <summary>
            Tunneled event that occurs when a custom tooltip is being closed.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaisePreviewTrayToolTipCloseEvent">
            <summary>
            A helper method to raise the PreviewTrayToolTipClose event.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaisePreviewTrayToolTipCloseEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the PreviewTrayToolTipClose event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.PopupOpenedEvent">
            <summary>
            PopupOpened Attached Routed Event
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.AddPopupOpenedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the PopupOpened attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be added</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RemovePopupOpenedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the PopupOpened attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be removed</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaisePopupOpenedEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the PopupOpened event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.ToolTipOpenedEvent">
            <summary>
            ToolTipOpened Attached Routed Event
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.AddToolTipOpenedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the ToolTipOpened attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be added</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RemoveToolTipOpenedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the ToolTipOpened attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be removed</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseToolTipOpenedEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the ToolTipOpened event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.ToolTipCloseEvent">
            <summary>
            ToolTipClose Attached Routed Event
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.AddToolTipCloseHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the ToolTipClose attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be added</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RemoveToolTipCloseHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the ToolTipClose attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be removed</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseToolTipCloseEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the ToolTipClose event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.BalloonShowingEvent">
            <summary>
            BalloonShowing Attached Routed Event
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.AddBalloonShowingHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the BalloonShowing attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be added</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RemoveBalloonShowingHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the BalloonShowing attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be removed</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseBalloonShowingEvent(System.Windows.DependencyObject,Ay.Framework.WPF.Controls.TaskbarIcon)">
            <summary>
            A static helper method to raise the BalloonShowing event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
            <param name="source">The <see cref="T:Ay.Framework.WPF.Controls.TaskbarIcon"/> instance that manages the balloon.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.BalloonClosingEvent">
            <summary>
            BalloonClosing Attached Routed Event
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.AddBalloonClosingHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the BalloonClosing attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be added</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RemoveBalloonClosingHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the BalloonClosing attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be removed</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.RaiseBalloonClosingEvent(System.Windows.DependencyObject,Ay.Framework.WPF.Controls.TaskbarIcon)">
            <summary>
            A static helper method to raise the BalloonClosing event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
            <param name="source">The <see cref="T:Ay.Framework.WPF.Controls.TaskbarIcon"/> instance that manages the balloon.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.TaskbarIcon.ParentTaskbarIconProperty">
            <summary>
            An attached property that is assigned to displayed UI elements (balloos, tooltips, context menus), and
            that can be used to bind to this control. The attached property is being derived, so binding is
            quite straightforward:
            <code>
            <TextBlock Text="{Binding RelativeSource={RelativeSource Self}, Path=(tb:TaskbarIcon.ParentTaskbarIcon).ToolTipText}" />
            </code>
            </summary>  
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.GetParentTaskbarIcon(System.Windows.DependencyObject)">
            <summary>
            Gets the ParentTaskbarIcon property.  This dependency property 
            indicates ....
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.SetParentTaskbarIcon(System.Windows.DependencyObject,Ay.Framework.WPF.Controls.TaskbarIcon)">
            <summary>
            Sets the ParentTaskbarIcon property.  This dependency property 
            indicates ....
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.TaskbarIcon.#cctor">
            <summary>
            Registers properties.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.PopupEx">
            <summary>
            暂时只能等于topmost=false,如果你想置顶，请使用popup，popupex是解决不置顶的
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollViewerExpand.ScrollToPosition(Ay.Framework.WPF.Controls.AyScrollViewer,System.Double,System.Double)">
            <summary>
            Create a new animation to the x,y offset. 
            this to work.  If you don't you can't call Storyboard.SetTarget.
            </summary>
            <param name="x">X position</param>
            <param name="y">Y position</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollViewerExpand.ScrollToPosition(Ay.Framework.WPF.Controls.AyScrollViewer,System.Double,System.Double,System.TimeSpan,System.TimeSpan)">
            <summary>
            Create a new animation to the x,y offset. 
            this to work.  If you don't you can't call Storyboard.SetTarget.
            </summary>
            <param name="x">X position</param>
            <param name="y">Y position</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollViewerExpand.ScrollToPosition(Ay.Framework.WPF.Controls.AyScrollViewer,System.Double,System.Double,System.TimeSpan,System.TimeSpan,System.Double)">
            <summary>
            Create a new animation to the x,y offset. 
            this to work.  If you don't you can't call Storyboard.SetTarget.
            </summary>
            <param name="sv"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="VerTimeDuration">水平滚动耗时</param>
            <param name="HorTimeDuration">垂直滚动耗时</param>
            <param name="DecelerationRatio">减速阶段所占的百分比 0到1之间的值</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ScrollSynchronizer.ScrollGroupProperty">
            <summary>
            Identifies the attached property ScrollGroup
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ScrollSynchronizer.scrollViewers">
            <summary>
            List of all registered scroll viewers.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ScrollSynchronizer.horizontalScrollOffsets">
            <summary>
            Contains the latest horizontal scroll offset for each scroll group.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ScrollSynchronizer.verticalScrollOffsets">
            <summary>
            Contains the latest vertical scroll offset for each scroll group.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollSynchronizer.SetScrollGroup(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the value of the attached property ScrollGroup.
            </summary>
            <param name="obj">Object on which the property should be applied.</param>
            <param name="scrollGroup">Value of the property.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollSynchronizer.GetScrollGroup(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the attached property ScrollGroup.
            </summary>
            <param name="obj">Object for which the property should be read.</param>
            <returns>Value of the property StartTime</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollSynchronizer.OnScrollGroupChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs, when the ScrollGroupProperty has changed.
            </summary>
            <param name="d">The DependencyObject on which the property has changed value.</param>
            <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollSynchronizer.ScrollViewer_ScrollChanged(System.Object,System.Windows.Controls.ScrollChangedEventArgs)">
            <summary>
            Occurs, when the scroll offset of one scrollviewer has changed.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">EventArgs of the event.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollSynchronizer.Scroll(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scrolls all scroll viewers of a group to the position of the selected scroll viewer.
            </summary>
            <param name="changedScrollViewer">Sroll viewer, that specifies the current position of the group.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ScrollSynchronizerH.ScrollGroupProperty">
            <summary>
            Identifies the attached property ScrollGroup
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ScrollSynchronizerH.scrollViewers">
            <summary>
            List of all registered scroll viewers.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ScrollSynchronizerH.horizontalScrollOffsets">
            <summary>
            Contains the latest horizontal scroll offset for each scroll group.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollSynchronizerH.SetScrollGroup(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the value of the attached property ScrollGroup.
            </summary>
            <param name="obj">Object on which the property should be applied.</param>
            <param name="scrollGroup">Value of the property.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollSynchronizerH.GetScrollGroup(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the attached property ScrollGroup.
            </summary>
            <param name="obj">Object for which the property should be read.</param>
            <returns>Value of the property StartTime</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollSynchronizerH.OnScrollGroupChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs, when the ScrollGroupProperty has changed.
            </summary>
            <param name="d">The DependencyObject on which the property has changed value.</param>
            <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollSynchronizerH.ScrollViewer_ScrollChanged(System.Object,System.Windows.Controls.ScrollChangedEventArgs)">
            <summary>
            Occurs, when the scroll offset of one scrollviewer has changed.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">EventArgs of the event.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollSynchronizerH.Scroll(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scrolls all scroll viewers of a group to the position of the selected scroll viewer.
            </summary>
            <param name="changedScrollViewer">Sroll viewer, that specifies the current position of the group.</param>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ScrollSynchronizerV.ScrollGroupProperty">
            <summary>
            Identifies the attached property ScrollGroup
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ScrollSynchronizerV.scrollViewers">
            <summary>
            List of all registered scroll viewers.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.ScrollSynchronizerV.verticalScrollOffsets">
            <summary>
            Contains the latest vertical scroll offset for each scroll group.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollSynchronizerV.SetScrollGroup(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the value of the attached property ScrollGroup.
            </summary>
            <param name="obj">Object on which the property should be applied.</param>
            <param name="scrollGroup">Value of the property.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollSynchronizerV.GetScrollGroup(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the attached property ScrollGroup.
            </summary>
            <param name="obj">Object for which the property should be read.</param>
            <returns>Value of the property StartTime</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollSynchronizerV.OnScrollGroupChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs, when the ScrollGroupProperty has changed.
            </summary>
            <param name="d">The DependencyObject on which the property has changed value.</param>
            <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollSynchronizerV.ScrollViewer_ScrollChanged(System.Object,System.Windows.Controls.ScrollChangedEventArgs)">
            <summary>
            Occurs, when the scroll offset of one scrollviewer has changed.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">EventArgs of the event.</param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ScrollSynchronizerV.Scroll(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scrolls all scroll viewers of a group to the position of the selected scroll viewer.
            </summary>
            <param name="changedScrollViewer">Sroll viewer, that specifies the current position of the group.</param>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AutoCompleteMode">
            <summary>
            匹配方式
            2015-4-2 09:14:08
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyAutoCompleteTextBox">
            <summary>
            Interaction logic for AutoCompleteTextBox.xaml
            基于http://www.cnblogs.com/sshoub/archive/2012/10/25/2738750.html提供的修改
            </summary>    
            <summary>
            AyAutoCompleteTextBox
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyAutoCompleteTextBox.rightContent">
            <summary>
            右侧自定义内容
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyAutoCompleteTextBox.textBoxBackground">
            <summary>
            mask字体颜色
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyAutoCompleteTextBox.isPopupBackground">
            <summary>
            popup是否透明
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyAutoCompleteTextBox.mode">
            <summary>
            匹配方式
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyAutoCompleteTextBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyDataPager">
            <summary>
            AyDataPager.xaml 的交互逻辑
            </summary>
            <summary>
            AyDataPager
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.AyDataPager.ItemsSourceProperty">
            <summary>
            ItemsSource数据源
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Controls.AyDataPager.PageChanged">
            <summary>
            分页更改事件
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDataPager.PageSizeItems">
            <summary>
            显示每页记录数集合
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDataPager.RaisePageChanged">
            <summary>
            引发分页更改事件
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDataPager.UpdateBarInfo">
            <summary>
            更新分页的信息状态
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDataPager.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.PageChangedEventArgs">
            <summary>
            分页更改参数
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyGaosiBackgroundLayer">
            <summary>
            AyGaosiBackgroundLayer.xaml 的交互逻辑
            </summary>
            <summary>
            AyGaosiBackgroundLayer
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyGaosiBackgroundLayer.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyImageViewer">
            <summary>
            AyImageViewer.xaml 的交互逻辑
            </summary>
            <summary>
            AyImageViewer
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyImageViewer.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyKeyBoardPwd">
            <summary>
            AyKeyBoardPwd.xaml 的交互逻辑
            </summary>
            <summary>
            AyKeyBoardPwd
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyKeyBoardPwd.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyPageWindow">
            <summary>
            AyPageWindow.xaml 的交互逻辑
            </summary>
            <summary>
            AyPageWindow
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyPageWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyRecordListItem.IsOperate">
            <summary>
            操作
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyRecordToolBar">
            <summary>
            AyRecordDialog.xaml 的交互逻辑
            </summary>
            <summary>
            AyRecordToolBar
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyRecordToolBar.Items">
            <summary>
            语音数据列表
            2016-9-5 14:18:21
            AY
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyRecordToolBar.AyTextButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            清空
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyRecordToolBar.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyUcSliderDisplay">
            <summary>
            AyUcSliderDisplay.xaml 的交互逻辑
            </summary>
            <summary>
            AyUcSliderDisplay
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyUcSliderDisplay.IsAutoPlay">
            <summary>
            是否自动播放
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyUcSliderDisplay.m_listener_rendering(System.Object,System.EventArgs)">
            <summary>
            轮播
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyUcSliderDisplay.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.ColorPickerDialog">
            <summary>
            ColorPickerDialog.xaml 的交互逻辑
            </summary>
            <summary>
            ColorPickerDialog
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ColorPickerDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.ShowCurrentTime">
            <summary>
            ShowCurrentTime.xaml 的交互逻辑
            </summary>
            <summary>
            ShowCurrentTime
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.ShowCurrentTime.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.SplitViewDisplayMode.Overlay">
            <summary>
            The pane covers the content when it's open and does not take up space in the
            control layout. The pane closes when the user taps outside of it.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.SplitViewDisplayMode.Inline">
            <summary>
            The pane is shown side-by-side with the content and takes up space in the control
            layout. The pane does not close when the user taps outside of it.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.SplitViewDisplayMode.CompactOverlay">
            <summary>
            The amount of the pane defined by the CompactPaneLength property is shown side-by-side
            with the content and takes up space in the control layout. The remaining part
            of the pane covers the content when it's open and does not take up space in the
            control layout. The pane closes when the user taps outside of it.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.SplitViewDisplayMode.CompactInline">
            <summary>
            The amount of the pane defined by the CompactPaneLength property is shown side-by-side
            with the content and takes up space in the control layout. The remaining part
            of the pane pushes the content to the side when it's open and takes up space
            in the control layout. The pane does not close when the user taps outside of
            it.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.SplitViewPanePlacement.Left">
            <summary>
            The pane is shown to the left of the SplitView content.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Controls.SplitViewPanePlacement.Right">
            <summary>
            The pane is shown to the right of the SplitView content.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyDownloadFile">
            <summary>
            AyDownloadFile.xaml 的交互逻辑
            </summary>
            <summary>
            AyDownloadFile
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDownloadFile.#ctor(Ay.Framework.WPF.Controls.AyDownloadFile.DownloadFileInfo)">
            <summary>
            从指定的地址下载文件保存为指定的文件名
            </summary>
            <param name="url">文件下载地址</param>
            <param name="savedPath">绝对路径</param>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDownloadFile.DownloadFileInfoModel.MaxValue">
            <summary>
            未填写
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDownloadFile.DownloadFileInfoModel.PValue">
            <summary>
            当前进度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDownloadFile.DownloadFileInfoModel.LableCompletedRate">
            <summary>
            未填写
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDownloadFile.DownloadFileInfoModel.startInfo">
            <summary>
            未填写
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDownloadFile.DownloadFileInfoModel.FileName">
            <summary>
            文件名
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDownloadFile.Start">
            <summary>
            开始下载并显示下载进度
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDownloadFile.GetFormatedSize(System.Double)">
            <summary>
            根据值的大小输出格式化后的计算机表示值
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.AyDownloadFile.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.PasswordBoxMonitor">
            <summary>
            密码框字符数量变化，方便水印，密码绑定。
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Controls.PasswordBoxMonitor.SetPasswordBoxSelection(System.Windows.Controls.PasswordBox,System.Int32,System.Int32)">
            <summary>
            在更改了密码框的密码后, 需要手动更新密码框插入符(CaretIndex)的位置, 可惜的是, 密码框并没有给我们提供这样的属性或方法(TextBox有, PasswordBox没有
            PasswordChanged="pbPassword_PasswordChanged"
            </summary>
            <param name="passwordBox"></param>
            <param name="start"></param>
            <param name="length"></param>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.PopopHelper">
            <summary>
            staysopen=true的时候，使用方法 <Popup PopopHelper.PopupPlacementTarget="{Binding ElementName=placementTextBox}" />
            staysopen=false的时候 PopopHelper.ClosesOnInput="true"时候会  同时关闭popup
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePickerItem.IsHighlight">
            <summary>
            2017-3-10 13:16:26
            是否高亮日
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.DayInfo.TitleType">
            <summary>
            0  代表正常  1代表初一已经换成月了  2代表节气 3代表公历节气 4代表农历节日
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyDatePickerTimeSelectModel">
            <summary>
            年月日时分秒的Model
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyDatePickerTimeSelectModel.IsEnabled">
            <summary>
            2015-10-12 14:58:26  动态限制，是否可用
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Controls.AyTreeViewItemModel">
            <summary>
            基本tree 杨洋
            2015-5-20 17:17:58  增加深度Depth 从0开始
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeViewItemModel.SwitchOpenIcon">
            <summary>
            动态切换的图标
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeViewItemModel.SwitchCloseIcon">
            <summary>
            未填写
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeViewItemModel.Uid">
            <summary>
            默认生成的guid，唯一标识符
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeViewItemModel.NodeType">
            <summary>
            节点类型，默认0表示 普通  1代表文件夹，自己可以拓展
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeViewItemModel.Text">
            <summary>
            此属性用于绑定显示的Text值
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeViewItemModel.SubIsSelected">
            <summary>
            子类中是否有选中的
            此属性：用于 父节点使用 2017-3-28 16:49:47
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeViewItemModel.ParentIsSelf">
            <summary>
            父节点是不是自己，如果是自己，则自己是选中的状态，当然选中状态不是selected的触发器触发的，是自己的这个属性触发
            此属性：用于 子节点使用 2017-3-28 16:49:36
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeViewItemModel.Icon">
            <summary>
            未填写
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeViewItemModel.Depth">
            <summary>
            未填写
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeViewItemModel.RelativeItem">
            <summary>
            相关item对象
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeViewItemModel.ExtValue">
            <summary>
            用于放置单个属性值
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Controls.AyTreeViewItemModel.ExtValues">
            <summary>
            用于放置多个值
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Behaviors.AyToolTipSetter">
            提示设置
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyToolTipSetter.apUserToolTip">
            <summary>
            用户提示
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFormHighlight.Form">
            <summary>
            需要验证的表单
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFormHighlight.IsReleaseForm">
            <summary>
            是否释放表单，因为可能你用了AyFormSubmit，那里已经释放表单了，没必要继续释放了
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFormSubmit.Form">
            <summary>
            需要验证的表单
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFormSubmit.SubmitCommand">
            <summary>
            提交表单
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyColorDialogPicker.Target">
            <summary>
            支持 textblock，支持textbox，支持label自动会填入颜色Hex值，Shape自动填充Fill，其他基本填充Background，字体填充Foreground
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyColorDialogPicker.DefaultColor">
            <summary>
            打开时候默认颜色
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyColorDialogPicker.SelectedCommand">
            <summary>
            成功选择后触发的命令
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Behaviors.AyColorDialogPicker.Selected">
            <summary>
            成功选择后，后台事件
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFilePicker.MaxFileLength">
            <summary>
            文件大小限制
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFilePicker.CurrentFileCount">
            <summary>
            当前文件数量，建议跟某个变量绑定
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFilePicker.MaxFileCount">
            <summary>
            文件选择数量限制
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFilePicker.FileExtension">
            <summary>
            文件后缀限制
            内置：image,audio,其他的单独自己写，默认所有文件
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFilePicker.IsMultiply">
            <summary>
            是否多选文件
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFolderPicker.MinSpaceUsage">
            <summary>
            文件要求的最低所需剩余空间大小，单位byte
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFolderPicker.DefaultPath">
            <summary>
            打开时候默认路径
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFolderPicker.SelectFolderCapacity">
            <summary>
            选择后的所在驱动器剩余可用容量,只读
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFolderPicker.SelectTotalFolderCapacity">
            <summary>
            选择后的所在驱动器总容量,只读
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFolderPicker.Target">
            <summary>
            支持 textblock，支持textbox，支持label自动会填入所选路径
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFolderPicker.SizeTarget">
            <summary>
            支持 textblock，支持textbox，支持label自动会填入 文件夹剩余空间
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFolderPicker.SizeStringFormat">
            <summary>
            可用空间：{0}
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFolderPicker.TotalSizeStringFormat">
            <summary>
            总空间：{0}
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFolderPicker.Description">
            <summary>
            标题描述
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.AyFolderPicker.SelectedCommand">
            <summary>
            成功选择后触发的命令
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.Behaviors.AyFolderPicker.Selected">
            <summary>
            成功选择后，后台事件
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.SetBoolPropertyAction.PropertyValue">
            <summary>
            The value to set the property to.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Behaviors.SetBoolPropertyAction.TargetObject">
            <summary>
            Specifies the object upon which to set the property.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Behaviors.SetTargetPropertyBehavior">
            <summary>
            10001 提供
            2016-10-22 
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.CaptureScreenshot">
            <summary>
            Captures a screen shot using gdi32 functions.
            </summary>
            <remarks>See http://stackoverflow.com/questions/1736287/capturing-a-window-with-wpf</remarks>
        </member>
        <member name="T:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations">
            <summary>
            The ternary raster operations.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations.SRCCOPY">
            <summary>
            dest = source
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations.SRCPAINT">
            <summary>
            dest = source OR dest
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations.SRCAND">
            <summary>
            dest = source AND dest
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations.SRCINVERT">
            <summary>
            dest = source XOR dest
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations.SRCERASE">
            <summary>
            dest = source AND (NOT dest)
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations.NOTSRCCOPY">
            <summary>
            dest = (NOT source)
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations.NOTSRCERASE">
            <summary>
            dest = (NOT src) AND (NOT dest)
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations.MERGECOPY">
            <summary>
            dest = (source AND pattern)
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations.MERGEPAINT">
            <summary>
            dest = (NOT source) OR dest
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations.PATCOPY">
            <summary>
            dest = pattern
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations.PATPAINT">
            <summary>
            dest = DPSnoo
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations.PATINVERT">
            <summary>
            dest = pattern XOR dest
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations.DSTINVERT">
            <summary>
            dest = (NOT dest)
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations.BLACKNESS">
            <summary>
            dest = BLACK
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations.WHITENESS">
            <summary>
            dest = WHITE
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.CaptureScreenshot.Capture(System.Windows.Rect)">
            <summary>
            Captures the specified rectangle from the screen.
            <returns>
            A bitmap.
            </returns>
            </summary>
            <param name="area">The area to capture.</param>
            <returns>
            A bitmap.
            </returns>
        </member>
        <member name="M:Ay.Framework.WPF.CaptureScreenshot.CorrectGetPosition(System.Windows.Media.Visual)">
            <summary>
            Gets the cursor position relative to the specified visual.
            </summary>
            <param name="relativeTo">The visual to relate to.</param>
            <returns>
            A <see cref="T:System.Windows.Point" />.
            </returns>
        </member>
        <member name="M:Ay.Framework.WPF.CaptureScreenshot.GetMouseScreenPosition">
            <summary>
            The get mouse screen position.
            </summary>
            <returns>
            The <see cref="T:System.Windows.Point" />.
            </returns>
        </member>
        <member name="M:Ay.Framework.WPF.CaptureScreenshot.GetCursorPos(Ay.Framework.WPF.CaptureScreenshot.Win32Point@)">
            <summary>
            The get cursor pos.
            </summary>
            <param name="pt">The pt.</param>
            <returns>
            The get cursor pos.
            </returns>
        </member>
        <member name="M:Ay.Framework.WPF.CaptureScreenshot.BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,Ay.Framework.WPF.CaptureScreenshot.TernaryRasterOperations)">
            <summary>
            The bit blt.
            </summary>
            <param name="hdc">The hdc.</param>
            <param name="nXDest">The n x dest.</param>
            <param name="nYDest">The n y dest.</param>
            <param name="nWidth">The n width.</param>
            <param name="nHeight">The n height.</param>
            <param name="hdcSrc">The hdc src.</param>
            <param name="nXSrc">The n x src.</param>
            <param name="nYSrc">The n y src.</param>
            <param name="dwRop">The dw rop.</param>
            <returns>
            The bit blt.
            </returns>
        </member>
        <member name="M:Ay.Framework.WPF.CaptureScreenshot.CreateBitmap(System.Int32,System.Int32,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            The create bitmap.
            </summary>
            <param name="nWidth">The n width.</param>
            <param name="nHeight">The n height.</param>
            <param name="cPlanes">The c planes.</param>
            <param name="cBitsPerPel">The c bits per pel.</param>
            <param name="lpvBits">The lpv bits.</param>
            <returns>
            The <see cref="T:System.IntPtr" />.
            </returns>
        </member>
        <member name="M:Ay.Framework.WPF.CaptureScreenshot.CreateCompatibleBitmap(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            The create compatible bitmap.
            </summary>
            <param name="hdc">The hdc.</param>
            <param name="nWidth">The n width.</param>
            <param name="nHeight">The n height.</param>
            <returns>
            The <see cref="T:System.IntPtr" />.
            </returns>
        </member>
        <member name="M:Ay.Framework.WPF.CaptureScreenshot.CreateCompatibleDC(System.IntPtr)">
            <summary>
            The create compatible dc.
            </summary>
            <param name="hdc">The hdc.</param>
            <returns>
            The <see cref="T:System.IntPtr" />.
            </returns>
        </member>
        <member name="M:Ay.Framework.WPF.CaptureScreenshot.DeleteObject(System.IntPtr)">
            <summary>
            The delete object.
            </summary>
            <param name="hObject">The h object.</param>
            <returns>
            The delete object.
            </returns>
        </member>
        <member name="M:Ay.Framework.WPF.CaptureScreenshot.GetDC(System.IntPtr)">
            <summary>
            The get dc.
            </summary>
            <param name="hWnd">The h wnd.</param>
            <returns>
            The <see cref="T:System.IntPtr" />.
            </returns>
        </member>
        <member name="M:Ay.Framework.WPF.CaptureScreenshot.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            The release dc.
            </summary>
            <param name="hWnd">The h wnd.</param>
            <param name="hDC">The h dc.</param>
            <returns>
            The release dc.
            </returns>
        </member>
        <member name="M:Ay.Framework.WPF.CaptureScreenshot.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            The select object.
            </summary>
            <param name="hdc">The hdc.</param>
            <param name="hgdiobj">The hgdiobj.</param>
            <returns>
            The <see cref="T:System.IntPtr" />.
            </returns>
        </member>
        <member name="T:Ay.Framework.WPF.CaptureScreenshot.Win32Point">
            <summary>
            The win 32 point.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.Win32Point.X">
            <summary>
            The x.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.CaptureScreenshot.Win32Point.Y">
            <summary>
            The y.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.FuncFactory.AyFuncColorSystem">
            <summary>
            ay花费很久编写
            2016-6-28 09:18:15
            希望你使用后，能你购买个授权，让AY可以生活
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.FuncFactory.AyFuncColorSystem.Get2016AYLinearGradientBrush(System.Windows.Media.Color,System.Int32)">
            <summary>
            AYUI 4.X
            2016-6-27 00:25:08
            作者AY,复制可耻，抄袭可耻
            </summary>
            <param name="color">颜色</param>
            <param name="hDiff">色域渐变范围</param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.InstanceFactory.CreateInstance``1(System.Object[])">
            <summary>
            A generic convenience method to create the provided type.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.InstanceFactory.CreateInstance(System.Type,System.Object[])">
            <summary>
            A convenience extension method for Type that calls Activator.CreateInstance
            </summary>
            <returns>A new instance of the provided object.</returns>
        </member>
        <member name="T:Ay.Framework.WPF.PropertyChangeWatcher">
            <remarks>In order to be 'safe' this method uses reflection on every 'watch' to ensure the property exists.
            In order to be thread safe, this class uses lock. (Sadly, read/write locks don't exist in Silverlight.)
            So be careful using this in preformance-critical contexts.
            </remarks>
        </member>
        <member name="T:Ay.Framework.WPF.SortedObservableEnumerable`2">
            <summary>
            排序 ObservableCollection的顺序的
            2016-8-4 11:17:54
            </summary>
            <typeparam name="TItem"></typeparam>
            <typeparam name="TSource"></typeparam>
        </member>
        <member name="T:Ay.Framework.WPF.WeakEnumerable`1">
            <summary>
            Keeps a collection of items 'weakly'. On enumeration, valid references to items are returned. Invalid references are cleaned up.
            </summary>
            <typeparam name="T">Any class. Silly to have weak references to value types, no?</typeparam>
            <remarks>Very much NOT thread safe.</remarks>
        </member>
        <member name="M:Ay.Framework.WPF.WeakEnumerable`1.Add(`0)">
            <summary>
            Adds an item to the end of the enumerable.
            </summary>
            <remarks>This method requires the entire collection to be enumerated.
            If adding to the end is not required, use <see cref="M:Ay.Framework.WPF.WeakEnumerable`1.Insert(`0)"/>. It's faster.</remarks>
        </member>
        <member name="M:Ay.Framework.WPF.WeakEnumerable`1.Insert(`0)">
            <summary>
            Adds an item to the begining (head) of the collection.
            </summary>
            <remarks>Potentially a lot faster than <see cref="M:Ay.Framework.WPF.WeakEnumerable`1.Add(`0)"/>.</remarks>
        </member>
        <member name="F:Ay.Framework.WPF.AYUIExpresion.AyExpression.CustomValidators">
            <summary>
            拓展用户自定义验证
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.AYUIExpresion.AyExpression.GetFormValidateResult(System.String,System.String)">
            <summary>
            表单验证表达式，所属AY表达式
            作者:AY
            时间：2016-7-28 14:37:16
            </summary>
            <param name="ayexpression">AY表单表达式</param>
            <param name="text">被验证的文本</param>
            <returns>AyFormResult验证结果</returns>
        </member>
        <member name="M:Ay.Framework.WPF.AYUIExpresion.AyExpression.GetMaskedValue(System.String,System.String)">
            <summary>
            掩码验证表达式，所属AY表达式
            </summary>
            <param name="ayexpression">AY表达式</param>
            <param name="text">被验证的文本</param>
            <returns>返回表达式执行后的结果</returns>
        </member>
        <member name="M:Ay.Framework.WPF.AYUIExpresion.AyExpression.GetSubStrCountInStr(System.String,System.String,System.Int32)">
            <summary>
            根据字符串，然后子字符串，返回所有匹配的子字符串的位置
            </summary>
            <param name="str">被搜索的字符串</param>
            <param name="substr">子字符串</param>
            <param name="StartPos">开始位置</param>
            <returns>返回所有匹配的子字符串的位置</returns>
        </member>
        <member name="M:Ay.Framework.WPF.AYUIExpresion.AyExpressionExtendMethod.ToAyExpressionValue(System.String,System.String)">
            <summary>
            转换为Ay表达式
            </summary>
            <param name="text"></param>
            <param name="ayexpression"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AYUIExpresion.AyExpressionExtendMethod.ToAyExpressionFormResult(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="text">被验证的文本</param>
            <param name="ayexpression">AY表单表达式</param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyForms.AyFormNumValidator.IsInteger(System.String)">
            <summary>  
            判断一个字符串是否为合法整数(不限制长度)  
            </summary>  
            <param name="s">字符串</param>  
            <returns></returns>  
        </member>
        <member name="M:Ay.Framework.WPF.AyForms.AyFormNumValidator.IsNumber(System.String)">
            <summary>  
            判断一个字符串是否为合法数字(0-32整数)  
            </summary>  
            <param name="s">字符串</param>  
            <returns></returns>  
        </member>
        <member name="M:Ay.Framework.WPF.AyForms.AyFormNumValidator.IsNumber(System.String,System.String,System.Int32)">
            <summary>  
            判断一个字符串是否为合法数字(指定整数位数和小数位数)  
            </summary>  
            <param name="s">字符串</param>  
            <param name="precision">整数位数</param>  
            <param name="scale">小数位数</param>  
            <returns></returns>  
        </member>
        <member name="T:Ay.Framework.WPF.AyForms.AyFormResult">
            <summary>
            用户关心的结果
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.AyForms.AyFormResult.example">
            <summary>
            验证示例
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.AyForms.AyFormResult.Error">
            <summary>
            错误详细信息
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.AyForms.AyFormResult.Result">
            <summary>
            验证结果
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.AyForms.AyFormResult.ValidatorType">
            <summary>
            验证类型
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.AyForms.AyFormValidator.ErrorInfo">
            <summary>
            错误详细信息
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.AyForms.AyFormValidator.RegexExpression">
            <summary>
            正则表达式
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.AyForms.AyFormValidator.IsMatch(System.String,System.String)">
            <summary>
            验证输入字符串是否与模式字符串匹配，匹配返回true
            </summary>
            <param name="input">输入字符串</param>
            <param name="pattern">模式字符串</param>        
        </member>
        <member name="M:Ay.Framework.WPF.AyForms.AyFormValidator.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            验证输入字符串是否与模式字符串匹配，匹配返回true
            </summary>
            <param name="input">输入的字符串</param>
            <param name="pattern">模式字符串</param>
            <param name="options">筛选条件</param>
        </member>
        <member name="T:Ay.Framework.WPF.AyForms.DateExpre.AyDateStrictExpression">
            <summary>
            AY为AyDateBoxCalendar,AyCalendar提供的日期表达式
            生日：2017-2-24 11:48:50
            语法：%y	当前年
                      %M 当前月
                      %d 当前日
                      %ld 本月最后一天
                      %H 当前时
                      %m 当前分
                      %s 当前秒
                      { } 运算表达式,如:{%d+1}:表示明天
                      关于#F{}用 这里不作处理，在控件中处理
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.AyForms.DateExpre.AyDateStrictExpression.ConvertDDVF(System.String,System.String,System.String)">
            <summary>
            AY
            生日：2017-3-6 16:43:21
            用来转换日期表达式 #D，#DV的部分
            </summary>
            <param name="dt"></param>
            <param name="expression"></param>
            <param name="fmt"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyCalendarService.SetClickYearMonthButtonsEnabled(Ay.Framework.WPF.Controls.AyIconAllButton,System.DateTime,System.Collections.Generic.List{System.Nullable{System.DateTime}},System.Collections.Generic.List{System.Nullable{System.DateTime}})">
            <summary>
            设置月可用性
            </summary>
            <param name="btn"></param>
            <param name="month"></param>
            <param name="Year"></param>
            <param name="MinDateTime"></param>
            <param name="MaxDateTime"></param>
        </member>
        <member name="M:Ay.Framework.WPF.AyCalendarService.SetClickYearButtonsEnabled(Ay.Framework.WPF.Controls.AyIconAllButton,System.Int32,System.Collections.Generic.List{System.Nullable{System.DateTime}},System.Collections.Generic.List{System.Nullable{System.DateTime}},System.Collections.Generic.List{System.String},System.Boolean,System.Nullable{System.DateTime})">
            <summary>
            设置年可用性
            </summary>
            <param name="btn"></param>
            <param name="Year"></param>
            <param name="MinDateTime"></param>
            <param name="MaxDateTime"></param>
        </member>
        <member name="M:Ay.Framework.WPF.AyCalendarService.ValidateRegexDate(System.DateTime,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <param name="expressionStringLists"></param>
            <param name="opposite">opposite如果是true，就取反</param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyDatePickerHelper.NumOfDays(System.Int32,System.Int32)">
            <summary>
            获得月份的天数，或者获得每月的最后一天
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyDatePickerHelper.GetNongLi(System.Int32,System.Int32,System.Int32)">
            <summary>
            ay 2015年11月19日17:31:25
            增加
            </summary>
            <param name="Cyear"></param>
            <param name="Cmonth"></param>
            <param name="Cday"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyDatePickerHelper.GetChinaDate(System.DateTime)">
            <summary>
            获取农历
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyDatePickerHelper.GetYear(System.DateTime)">
            <summary>
            获取农历年份
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyDatePickerHelper.GetMonth(System.DateTime)">
            <summary>
            获取农历月份
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyDatePickerHelper.GetDay(System.DateTime)">
            <summary>
            获取农历日期
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyDatePickerHelper.GetSolarTerm(System.DateTime)">
            <summary>
            获取节气
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyDatePickerHelper.GetHoliday(System.DateTime)">
            <summary>
            获取公历节日
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyDatePickerHelper.GetChinaHoliday(System.DateTime)">
            <summary>
            获取农历节日
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:Ay.Framework.WPF.BitmapPixelHelper">
            <summary>
            用于获取位图像素的类
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.BitmapPixelHelper.Width">
            <summary>
            位图宽度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.BitmapPixelHelper.Height">
            <summary>
            位图高度
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.BitmapPixelHelper.Pixels">
            <summary>
            像素
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.BitmapPixelHelper.GetSimilarDegree(System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            返回2种颜色的相似度 0.9以上可以确定为相似颜色
            </summary>
            <param name="c1">Color1</param>
            <param name="c2">Color2</param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.BitmapPixelHelper.#ctor(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            根据指定的位图生成BitmapPixelHelper类的新实例。
            </summary>
            <param name="bitmap">指定的位图</param>
        </member>
        <member name="T:Ay.Framework.WPF.Internal.Controls.AyDateRuleJsonToObjects">
            <summary>
            用于拓展AyDateBoxCalendar的api接口
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Internal.Controls.AyDateRuleJsonToObjects.PopupListPosition">
            <summary>
            用于控制PopupList的位置
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Internal.Controls.AyDateRuleJsonToObjects.isShowWeek">
            <summary>
            是否显示周，2017-2-20 15:58:22
            AY增加
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Internal.Controls.AyDateRuleJsonToObjects.firstDayOfWeek">
            <summary>
             各个国家的习惯不同,有些喜欢以星期日作为第一天,有些以星期一作为第一天.
             相关属性:firstDayOfWeek: 可设置 0 - 6 的任意一个数字,0:星期日     1:星期一 以此类推
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.Internal.Controls.AyDateRuleJsonToObjects._doubleCalendar">
            <summary>
            双月功能开启或者关闭,双月时候，单击时候，自动关闭列表
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Internal.Controls.AyDateRuleJsonToObjects.disabledDates">
            <summary>
            禁用日期
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Internal.Controls.AyDateRuleJsonToObjects.specialDays">
            <summary>
            高亮周几
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.Internal.Controls.AyDateRuleJsonToObjects.specialDates">
            <summary>
            高亮日期
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Internal.Controls.AyDCDateExpression">
            <summary>
            用于加减法动态日期
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.AyIcons.GetBitmapIcon(System.String,System.String)">
            <summary>
            获得位图Icon
            </summary>
            <param name="key">icon的key</param>
            <param name="iconTag"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyIcons.Delete">
            <summary>
            删除图标
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyIcons.Right">
            <summary>
            对勾图标
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.Effect.GetPrivateField``1(System.Object,System.String)">
            <summary>
            获取对象的私有字段的值，感谢Aaron Lee Murgatroyd
            </summary>
            <typeparam name="TResult">字段的类型</typeparam>
            <param name="obj">要从其中获取字段值的对象</param>
            <param name="fieldName">字段的名称.</param>
            <returns>字段的值</returns>
            <exception cref="T:System.InvalidOperationException">无法找到该字段.</exception>
            
        </member>
        <member name="M:Ay.Framework.WPF.Effect.GaussianBlur(System.Drawing.Bitmap,System.Drawing.Rectangle@,System.Single,System.Boolean)">
            <summary>
            对图像进行高斯模糊,参考：http://msdn.microsoft.com/en-us/library/ms534057(v=vs.85).aspx
            </summary>
            <param name="Rect">需要模糊的区域，会对该值进行边界的修正并返回.</param>
            <param name="Radius">指定高斯卷积核的半径，有效范围[0，255],半径越大，图像变得越模糊.</param>
            <param name="ExpandEdge">指定是否对边界进行扩展，设置为True，在边缘处可获得较为柔和的效果. </param>
        </member>
        <member name="M:Ay.Framework.WPF.Effect.UsmSharpen(System.Drawing.Bitmap,System.Drawing.Rectangle@,System.Single,System.Single)">
            <summary>
            对图像进行锐化,参考：http://msdn.microsoft.com/en-us/library/ms534073(v=vs.85).aspx
            </summary>
            <param name="Rect">需要锐化的区域，会对该值进行边界的修正并返回.</param>
            <param name="Radius">指定高斯卷积核的半径，有效范围[0，255],因为这个锐化算法是以高斯模糊为基础的，所以他的速度肯定比高斯模糊慢</param>
            <param name="ExpandEdge">指定锐化的程度，0表示不锐化。有效范围[0,255]. </param>
            
        </member>
        <member name="M:Ay.Framework.WPF.ImageResources.GetBitmapImage(System.Drawing.Bitmap)">
            <summary>
            先获取属性中的资源，然后转换格式返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.ImageResources.GetBitmapImage(System.String)">
            <summary>
            从文件流读取，而后转换为图片格式
            </summary>
            <param name="qianruresource">资源先设置 嵌入的文件，然后程序集名字.(文件夹名字路径).文件名</param>
            <returns></returns>
        </member>
        <member name="T:Ay.Framework.WPF.AyMessageBox">
            <summary>
            AyMessageBox.xaml 的交互逻辑
            </summary>
            <summary>
            AyMessageBox
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.AyMessageBox.#ctor(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,Ay.Framework.WPF.AyMessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions,System.Action,System.Action{Ay.Framework.WPF.Controls.AyFormInput},System.Int32,System.Action{System.String})">
            <summary>
            添加一个构造函数
            </summary>
            <param name="owner">AyMessageBox拥有者</param>
            <param name="message"></param>
            <param name="details"></param>
            <param name="button"></param>
            <param name="icon"></param>
            <param name="defaultResult"></param>
            <param name="options"></param>
            <param name="promtcallback">promt回调</param>
        </member>
        <member name="M:Ay.Framework.WPF.AyMessageBox.#ctor(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.String,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
            <summary>
            展示指定图像和文本
            </summary>
            <param name="owner"></param>
            <param name="message"></param>
            <param name="title"></param>
            <param name="button"></param>
            <param name="iconUrl">图片地址,建议png格式</param>
            <param name="defaultResult"></param>
            <param name="options"></param>
        </member>
        <member name="M:Ay.Framework.WPF.AyMessageBox.CreateOkButton(System.Windows.MessageBoxResult)">
            <summary>
            Create the ok button on demand
            </summary>
            <param name="defaultResult"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyMessageBox.CreateCancelButton(System.Windows.MessageBoxResult)">
            <summary>
            Create the cancel button on demand
            </summary>
            <param name="defaultResult"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyMessageBox.CreateYesButton(System.Windows.MessageBoxResult)">
            <summary>
            Create the yes button on demand
            </summary>
            <param name="defaultResult"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyMessageBox.CreateNoButton(System.Windows.MessageBoxResult)">
            <summary>
            Create the no button on demand
            </summary>
            <param name="defaultResult"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyMessageBox.ButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The event the buttons trigger. 
            Each button hold it's result in the tag, so here it just sets them and close the message box.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ay.Framework.WPF.AyMessageBox.CreateImage(Ay.Framework.WPF.AyMessageBoxImage)">
            <summary>
            Create the image from the system's icons
            </summary>
            <param name="icon"></param>
        </member>
        <member name="M:Ay.Framework.WPF.AyMessageBox.ShowCus(System.String,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxResult)">
            <summary>
            指定图标的自定义弹出消息
            </summary>
            <param name="message"></param>
            <param name="iconUri">图标地址,建议png格式</param>
            <param name="title"></param>
            <param name="button"></param>
            <param name="defaultResult"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyMessageBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.AyJsonUtility">
            <summary>
            ay mynpoi 的 json类
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.AyJsonUtility.AddIsoDateTimeConverter(Newtonsoft.Json.JsonSerializer)">
            <summary>   
            添加时间转换器   
            </summary>   
            <param name="serializer"></param>   
        </member>
        <member name="M:Ay.Framework.WPF.AyJsonUtility.SerializerSetting(Newtonsoft.Json.JsonSerializer)">
            <summary>   
            Json转换配置   
            </summary>   
            <param name="serializer"></param>   
        </member>
        <member name="M:Ay.Framework.WPF.AyJsonUtility.ListToJson``1(System.Collections.Generic.List{``0})">
            <summary>   
            把对象列表编码为Json数据   
            </summary>   
            <typeparam name="T"></typeparam>   
            <param name="objList"></param>   
            <returns></returns>   
        </member>
        <member name="M:Ay.Framework.WPF.AyJsonUtility.ObjectToJson``1(``0)">
            <summary>   
             把一个对象编码为Json数据   
            </summary>   
            <typeparam name="T"></typeparam>   
            <param name="obj"></param>   
            <returns></returns>   
        </member>
        <member name="M:Ay.Framework.WPF.AyJsonUtility.DecodeObject2``1(System.String)">
            <summary>   
            根据传入的Json数据，解码为对象(一个)   
            </summary>   
            <typeparam name="T"></typeparam>   
            <param name="data"></param>   
            <returns></returns>   
        </member>
        <member name="M:Ay.Framework.WPF.AyJsonUtility.DecodeObjectList``1(System.String)">
            <summary>   
            功能同DecodeObject   
            </summary>   
            <typeparam name="T"></typeparam>   
            <param name="data"></param>   
            <returns></returns>   
        </member>
        <member name="M:Ay.Framework.WPF.AyJsonUtility.SerializeObject(System.Object)">
            <summary>
            将对象序列化为JSON格式
            </summary>
            <param name="o">对象</param>
            <returns>json字符串</returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyJsonUtility.DeserializeJsonToObject``1(System.String)">
            <summary>
            解析JSON字符串生成对象实体
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="json">json字符串(eg.{"ID":"112","Name":"石子儿"})</param>
            <returns>对象实体</returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyJsonUtility.DeserializeJsonToList``1(System.String)">
            <summary>
            解析JSON数组生成对象实体集合
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="json">json数组字符串(eg.[{"ID":"112","Name":"石子儿"}])</param>
            <returns>对象实体集合</returns>
        </member>
        <member name="M:Ay.Framework.WPF.AyJsonUtility.DeserializeAnonymousType``1(System.String,``0)">
            <summary>
            反序列化JSON到给定的匿名对象.
            </summary>
            <typeparam name="T">匿名对象类型</typeparam>
            <param name="json">json字符串</param>
            <param name="anonymousTypeObject">匿名对象</param>
            <returns>匿名对象</returns>
        </member>
        <member name="T:Ay.Framework.WPF.NotifyIcon.Interop.BalloonFlags">
            <summary>
            Flags that define the icon that is shown on a balloon
            tooltip.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.BalloonFlags.None">
            <summary>
            No icon is displayed.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.BalloonFlags.Info">
            <summary>
            An information icon is displayed.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.BalloonFlags.Warning">
            <summary>
            A warning icon is displayed.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.BalloonFlags.Error">
            <summary>
            An error icon is displayed.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.BalloonFlags.User">
            <summary>
            Windows XP Service Pack 2 (SP2) and later.
            Use a custom icon as the title icon.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.BalloonFlags.NoSound">
            <summary>
            Windows XP (Shell32.dll version 6.0) and later.
            Do not play the associated sound. Applies only to balloon ToolTips.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.BalloonFlags.LargeIcon">
            <summary>
            Windows Vista (Shell32.dll version 6.0.6) and later. The large version
            of the icon should be used as the balloon icon. This corresponds to the
            icon with dimensions SM_CXICON x SM_CYICON. If this flag is not set,
            the icon with dimensions XM_CXSMICON x SM_CYSMICON is used.<br/>
            - This flag can be used with all stock icons.<br/>
            - Applications that use older customized icons (NIIF_USER with hIcon) must
              provide a new SM_CXICON x SM_CYICON version in the tray icon (hIcon). These
              icons are scaled down when they are displayed in the System Tray or
              System Control Area (SCA).<br/>
            - New customized icons (NIIF_USER with hBalloonIcon) must supply an
              SM_CXICON x SM_CYICON version in the supplied icon (hBalloonIcon).
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.BalloonFlags.RespectQuietTime">
            <summary>
            Windows 7 and later.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.NotifyIcon.Interop.IconDataMembers">
            <summary>
            Indicates which members of a <see cref="T:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData"/> structure
            were set, and thus contain valid data or provide additional information
            to the ToolTip as to how it should display.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.IconDataMembers.Message">
            <summary>
            The message ID is set.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.IconDataMembers.Icon">
            <summary>
            The notification icon is set.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.IconDataMembers.Tip">
            <summary>
            The tooltip is set.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.IconDataMembers.State">
            <summary>
            State information (<see cref="T:Ay.Framework.WPF.NotifyIcon.Interop.IconState"/>) is set. This
            applies to both <see cref="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.IconState"/> and
            <see cref="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.StateMask"/>.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.IconDataMembers.Info">
            <summary>
            The balloon ToolTip is set. Accordingly, the following
            members are set: <see cref="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.BalloonText"/>,
            <see cref="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.BalloonTitle"/>, <see cref="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.BalloonFlags"/>,
            and <see cref="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.VersionOrTimeout"/>.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.IconDataMembers.Realtime">
            <summary>
            Windows Vista (Shell32.dll version 6.0.6) and later. If the ToolTip
            cannot be displayed immediately, discard it.<br/>
            Use this flag for ToolTips that represent real-time information which
            would be meaningless or misleading if displayed at a later time.
            For example, a message that states "Your telephone is ringing."<br/>
            This modifies and must be combined with the <see cref="F:Ay.Framework.WPF.NotifyIcon.Interop.IconDataMembers.Info"/> flag.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.IconDataMembers.UseLegacyToolTips">
            <summary>
            Windows Vista (Shell32.dll version 6.0.6) and later.
            Use the standard ToolTip. Normally, when uVersion is set
            to NOTIFYICON_VERSION_4, the standard ToolTip is replaced
            by the application-drawn pop-up user interface (UI).
            If the application wants to show the standard tooltip
            in that case, regardless of whether the on-hover UI is showing,
            it can specify NIF_SHOWTIP to indicate the standard tooltip
            should still be shown.<br/>
            Note that the NIF_SHOWTIP flag is effective until the next call 
            to Shell_NotifyIcon.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.NotifyIcon.Interop.IconState">
            <summary>
            The state of the icon - can be set to
            hide the icon.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.IconState.Visible">
            <summary>
            The icon is visible.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.IconState.Hidden">
            <summary>
            Hide the icon.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.NotifyIcon.Interop.MouseEvent">
            <summary>
            Event flags for clicked events.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.MouseEvent.MouseMove">
            <summary>
            The mouse was moved withing the
            taskbar icon's area.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.MouseEvent.IconRightMouseDown">
            <summary>
            The right mouse button was clicked.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.MouseEvent.IconLeftMouseDown">
            <summary>
            The left mouse button was clicked.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.MouseEvent.IconRightMouseUp">
            <summary>
            The right mouse button was released.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.MouseEvent.IconLeftMouseUp">
            <summary>
            The left mouse button was released.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.MouseEvent.IconMiddleMouseDown">
            <summary>
            The middle mouse button was clicked.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.MouseEvent.IconMiddleMouseUp">
            <summary>
            The middle mouse button was released.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.MouseEvent.IconDoubleClick">
            <summary>
            The taskbar icon was double clicked.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.MouseEvent.BalloonToolTipClicked">
            <summary>
            The balloon tip was clicked.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.NotifyIcon.Interop.NotifyCommand">
            <summary>
            Main operations performed on the
            <see cref="M:Ay.Framework.WPF.NotifyIcon.Interop.WinApi.Shell_NotifyIcon(Ay.Framework.WPF.NotifyIcon.Interop.NotifyCommand,Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData@)"/> function.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyCommand.Add">
            <summary>
            The taskbar icon is being created.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyCommand.Modify">
            <summary>
            The settings of the taskbar icon are being updated.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyCommand.Delete">
            <summary>
            The taskbar icon is deleted.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyCommand.SetFocus">
            <summary>
            Focus is returned to the taskbar icon. Currently not in use.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyCommand.SetVersion">
            <summary>
            Shell32.dll version 5.0 and later only. Instructs the taskbar
            to behave according to the version number specified in the 
            uVersion member of the structure pointed to by lpdata.
            This message allows you to specify whether you want the version
            5.0 behavior found on Microsoft Windows 2000 systems, or the
            behavior found on earlier Shell versions. The default value for
            uVersion is zero, indicating that the original Windows 95 notify
            icon behavior should be used.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData">
            <summary>
            A struct that is submitted in order to configure
            the taskbar icon. Provides various members that
            can be configured partially, according to the
            values of the <see cref="T:Ay.Framework.WPF.NotifyIcon.Interop.IconDataMembers"/>
            that were defined.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.cbSize">
            <summary>
            Size of this structure, in bytes.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.WindowHandle">
            <summary>
            Handle to the window that receives notification messages associated with an icon in the
            taskbar status area. The Shell uses hWnd and uID to identify which icon to operate on
            when Shell_NotifyIcon is invoked.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.TaskbarIconId">
            <summary>
            Application-defined identifier of the taskbar icon. The Shell uses hWnd and uID to identify
            which icon to operate on when Shell_NotifyIcon is invoked. You can have multiple icons
            associated with a single hWnd by assigning each a different uID. This feature, however
            is currently not used.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.ValidMembers">
            <summary>
            Flags that indicate which of the other members contain valid data. This member can be
            a combination of the NIF_XXX constants.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.CallbackMessageId">
            <summary>
            Application-defined message identifier. The system uses this identifier to send
            notifications to the window identified in hWnd.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.IconHandle">
            <summary>
            A handle to the icon that should be displayed. Just
            <c>Icon.Handle</c>.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.ToolTipText">
            <summary>
            String with the text for a standard ToolTip. It can have a maximum of 64 characters including
            the terminating NULL. For Version 5.0 and later, szTip can have a maximum of
            128 characters, including the terminating NULL.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.IconState">
            <summary>
            State of the icon. Remember to also set the <see cref="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.StateMask"/>.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.StateMask">
            <summary>
            A value that specifies which bits of the state member are retrieved or modified.
            For example, setting this member to <see cref="F:Ay.Framework.WPF.NotifyIcon.Interop.IconState.Hidden"/>
            causes only the item's hidden
            state to be retrieved.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.BalloonText">
            <summary>
            String with the text for a balloon ToolTip. It can have a maximum of 255 characters.
            To remove the ToolTip, set the NIF_INFO flag in uFlags and set szInfo to an empty string.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.VersionOrTimeout">
            <summary>
            Mainly used to set the version when <see cref="M:Ay.Framework.WPF.NotifyIcon.Interop.WinApi.Shell_NotifyIcon(Ay.Framework.WPF.NotifyIcon.Interop.NotifyCommand,Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData@)"/> is invoked
            with <see cref="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyCommand.SetVersion"/>. However, for legacy operations,
            the same member is also used to set timouts for balloon ToolTips.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.BalloonTitle">
            <summary>
            String containing a title for a balloon ToolTip. This title appears in boldface
            above the text. It can have a maximum of 63 characters.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.BalloonFlags">
            <summary>
            Adds an icon to a balloon ToolTip, which is placed to the left of the title. If the
            <see cref="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.BalloonTitle"/> member is zero-length, the icon is not shown.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.TaskbarIconGuid">
            <summary>
            Windows XP (Shell32.dll version 6.0) and later.<br/>
            - Windows 7 and later: A registered GUID that identifies the icon.
              This value overrides uID and is the recommended method of identifying the icon.<br/>
            - Windows XP through Windows Vista: Reserved.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.CustomBalloonIconHandle">
            <summary>
            Windows Vista (Shell32.dll version 6.0.6) and later. The handle of a customized
            balloon icon provided by the application that should be used independently
            of the tray icon. If this member is non-NULL and the <see cref="F:Ay.Framework.WPF.NotifyIcon.Interop.BalloonFlags.User"/>
            flag is set, this icon is used as the balloon icon.<br/>
            If this member is NULL, the legacy behavior is carried out.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData.CreateDefault(System.IntPtr)">
            <summary>
            Creates a default data structure that provides
            a hidden taskbar icon without the icon being set.
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="T:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconVersion">
            <summary>
            The notify icon version that is used. The higher
            the version, the more capabilities are available.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconVersion.Win95">
            <summary>
            Default behavior (legacy Win95). Expects
            a <see cref="T:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData"/> size of 488.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconVersion.Win2000">
            <summary>
            Behavior representing Win2000 an higher. Expects
            a <see cref="T:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData"/> size of 504.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconVersion.Vista">
            <summary>
            Extended tooltip support, which is available
            for Vista and later.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.NotifyIcon.Interop.Point">
            <summary>
            Win API struct providing coordinates for a single point.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.Point.X">
            <summary>
            X coordinate.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.Point.Y">
            <summary>
            Y coordinate.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.NotifyIcon.Interop.TrayInfo">
            <summary>
            Resolves the current tray position.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.TrayInfo.GetTrayLocation">
            <summary>
            Gets the position of the system tray.
            </summary>
            <returns>Tray coordinates.</returns>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.TrayInfo.GetDeviceCoordinates(Ay.Framework.WPF.NotifyIcon.Interop.Point)">
            <summary>
            Recalculates OS coordinates in order to support WPFs coordinate
            system if OS scaling (DPIs) is not 100%.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:Ay.Framework.WPF.NotifyIcon.Interop.WinApi">
            <summary>
            Win32 API imports.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WinApi.Shell_NotifyIcon(Ay.Framework.WPF.NotifyIcon.Interop.NotifyCommand,Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData@)">
            <summary>
            Creates, updates or deletes the taskbar icon.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WinApi.CreateWindowEx(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Creates the helper window that receives messages from the taskar icon.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WinApi.DefWindowProc(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            Processes a default windows procedure.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WinApi.RegisterClass(Ay.Framework.WPF.NotifyIcon.Interop.WindowClass@)">
            <summary>
            Registers the helper window class.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WinApi.RegisterWindowMessage(System.String)">
            <summary>
            Registers a listener for a window message.
            </summary>
            <param name="lpString"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WinApi.DestroyWindow(System.IntPtr)">
            <summary>
            Used to destroy the hidden helper window that receives messages from the
            taskbar icon.
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WinApi.SetForegroundWindow(System.IntPtr)">
            <summary>
            Gives focus to a given window.
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WinApi.GetDoubleClickTime">
            <summary>
            Gets the maximum number of milliseconds that can elapse between a
            first click and a second click for the OS to consider the
            mouse action a double-click.
            </summary>
            <returns>The maximum amount of time, in milliseconds, that can
            elapse between a first click and a second click for the OS to
            consider the mouse action a double-click.</returns>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WinApi.GetPhysicalCursorPos(Ay.Framework.WPF.NotifyIcon.Interop.Point@)">
            <summary>
            Gets the screen coordinates of the current mouse position.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.NotifyIcon.Interop.WindowProcedureHandler">
            <summary>
            Callback delegate which is used by the Windows API to
            submit window messages.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.NotifyIcon.Interop.WindowClass">
            <summary>
            Win API WNDCLASS struct - represents a single window.
            Used to receive window messages.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink">
            <summary>
            Receives messages from the taskbar icon through
            window messages of an underlying helper window.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.CallbackMessageId">
            <summary>
            The ID of messages that are received from the the
            taskbar icon.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.taskbarRestartMessageId">
            <summary>
            The ID of the message that is being received if the
            taskbar is (re)started.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.isDoubleClick">
            <summary>
            Used to track whether a mouse-up event is just
            the aftermath of a double-click and therefore needs
            to be suppressed.
            </summary>
        </member>
        <member name="F:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.messageHandler">
            <summary>
            A delegate that processes messages of the hidden
            native window that receives window messages. Storing
            this reference makes sure we don't loose our reference
            to the message window.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.WindowId">
            <summary>
            Window class ID.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.MessageWindowHandle">
            <summary>
            Handle for the message window.
            </summary> 
        </member>
        <member name="P:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.Version">
            <summary>
            The version of the underlying icon. Defines how
            incoming messages are interpreted.
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.ChangeToolTipStateRequest">
            <summary>
            The custom tooltip should be closed or hidden.
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.MouseEventReceived">
            <summary>
            Fired in case the user clicked or moved within
            the taskbar icon area.
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.BalloonToolTipChanged">
            <summary>
            Fired if a balloon ToolTip was either displayed
            or closed (indicated by the boolean flag).
            </summary>
        </member>
        <member name="E:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.TaskbarCreated">
            <summary>
            Fired if the taskbar was created or restarted. Requires the taskbar
            icon to be reset.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.#ctor(Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconVersion)">
            <summary>
            Creates a new message sink that receives message from
            a given taskbar icon.
            </summary>
            <param name="version"></param>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.CreateEmpty">
            <summary>
            Creates a dummy instance that provides an empty
            pointer rather than a real window handler.<br/>
            Used at design time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.CreateMessageWindow">
            <summary>
            Creates the helper message window that is used
            to receive messages from the taskbar icon.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.OnWindowMessageReceived(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            Callback method that receives messages from the taskbar area.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.ProcessWindowMessage(System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            Processes incoming system messages.
            </summary>
            <param name="msg">Callback ID.</param>
            <param name="wParam">If the version is <see cref="F:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconVersion.Vista"/>
            or higher, this parameter can be used to resolve mouse coordinates.
            Currently not in use.</param>
            <param name="lParam">Provides information about the event.</param>
        </member>
        <member name="P:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.IsDisposed">
            <summary>
            Set to true as soon as <c>Dispose</c> has been invoked.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.Dispose">
            <summary>
            Disposes the object.
            </summary>
            <remarks>This method is not virtual by design. Derived classes
            should override <see cref="M:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.Dispose(System.Boolean)"/>.
            </remarks>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.Finalize">
            <summary>
            This destructor will run only if the <see cref="M:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.Dispose"/>
            method does not get called. This gives this base class the
            opportunity to finalize.
            <para>
            Important: Do not provide destructors in types derived from
            this class.
            </para>
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Interop.WindowMessageSink.Dispose(System.Boolean)">
            <summary>
            Removes the windows hook that receives window
            messages and closes the underlying helper window.
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.NotifyIcon.Util">
            <summary>
            Util and extension methods.
            </summary>
        </member>
        <member name="P:Ay.Framework.WPF.NotifyIcon.Util.IsDesignMode">
            <summary>
            Checks whether the application is currently in design mode.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Util.CreateHelperWindow">
            <summary>
            Creates an transparent window without dimension that
            can be used to temporarily obtain focus and/or
            be used as a window message sink.
            </summary>
            <returns>Empty window.</returns>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Util.WriteIconData(Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData@,Ay.Framework.WPF.NotifyIcon.Interop.NotifyCommand)">
            <summary>
            Updates the taskbar icons with data provided by a given
            <see cref="T:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData"/> instance.
            </summary>
            <param name="data">Configuration settings for the NotifyIcon.</param>
            <param name="command">Operation on the icon (e.g. delete the icon).</param>
            <returns>True if the data was successfully written.</returns>
            <remarks>See Shell_NotifyIcon documentation on MSDN for details.</remarks>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Util.WriteIconData(Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData@,Ay.Framework.WPF.NotifyIcon.Interop.NotifyCommand,Ay.Framework.WPF.NotifyIcon.Interop.IconDataMembers)">
            <summary>
            Updates the taskbar icons with data provided by a given
            <see cref="T:Ay.Framework.WPF.NotifyIcon.Interop.NotifyIconData"/> instance.
            </summary>
            <param name="data">Configuration settings for the NotifyIcon.</param>
            <param name="command">Operation on the icon (e.g. delete the icon).</param>
            <param name="flags">Defines which members of the <paramref name="data"/>
            structure are set.</param>
            <returns>True if the data was successfully written.</returns>
            <remarks>See Shell_NotifyIcon documentation on MSDN for details.</remarks>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Util.GetBalloonFlag(Ay.Framework.WPF.Controls.BalloonIcon)">
            <summary>
            Gets a <see cref="T:Ay.Framework.WPF.NotifyIcon.Interop.BalloonFlags"/> enum value that
            matches a given <see cref="T:Ay.Framework.WPF.Controls.BalloonIcon"/>.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Util.ToIcon(System.Windows.Media.ImageSource)">
            <summary>
            Reads a given image resource into a WinForms icon.
            </summary>
            <param name="imageSource">Image source pointing to
            an icon file (*.ico).</param>
            <returns>An icon object that can be used with the
            taskbar area.</returns>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Util.Is``1(``0,``0[])">
            <summary>
            Checks a list of candidates for equality to a given
            reference value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The evaluated value.</param>
            <param name="candidates">A liste of possible values that are
            regarded valid.</param>
            <returns>True if one of the submitted <paramref name="candidates"/>
            matches the evaluated value. If the <paramref name="candidates"/>
            parameter itself is null, too, the method returns false as well,
            which allows to check with null values, too.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="candidates"/>
            is a null reference.</exception>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Util.IsMatch(Ay.Framework.WPF.NotifyIcon.Interop.MouseEvent,Ay.Framework.WPF.Controls.PopupActivationMode)">
            <summary>
            Checks if a given <see cref="T:Ay.Framework.WPF.Controls.PopupActivationMode"/> is a match for
            an effectively pressed mouse button.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Util.ExecuteIfEnabled(System.Windows.Input.ICommand,System.Object,System.Windows.IInputElement)">
            <summary>
            Executes a given command if its <see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)"/> method
            indicates it can run.
            </summary>
            <param name="command">The command to be executed, or a null reference.</param>
            <param name="commandParameter">An optional parameter that is associated with
            the command.</param>
            <param name="target">The target element on which to raise the command.</param>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Util.GetDispatcher(System.Windows.Threading.DispatcherObject)">
            <summary>
            Returns a dispatcher for multi-threaded scenarios
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.NotifyIcon.Util.IsDataContextDataBound(System.Windows.FrameworkElement)">
            <summary>
            Checks whether the <see cref="F:System.Windows.FrameworkElement.DataContextProperty"/>
             is bound or not.
            </summary>
            <param name="element">The element to be checked.</param>
            <returns>True if the data context property is being managed by a
            binding expression.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="element"/>
            is a null reference.</exception>
        </member>
        <member name="M:Ay.Framework.WPF.AyException1.Show(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="messageBoxText"></param>
            <param name="caption"></param>
        </member>
        <member name="M:Ay.Framework.WPF.AyException1.Show(System.String,System.Exception,System.String)">
            <summary>
            
            </summary>
            <param name="messageBoxText"></param>
            <param name="ex"></param>
            <param name="caption"></param>
        </member>
        <member name="M:Ay.Framework.WPF.AyException1.Show(System.Exception)">
            <summary>
            显示错误信息
            </summary>
            <param name="ex">错误信息</param>
        </member>
        <member name="M:Ay.Framework.WPF.AyException1.Show(System.Exception,System.String,System.String)">
            <summary>
            详细错误信息
            </summary>
            <param name="ex">错误详细信息</param>
            <param name="messageBoxText">消息内容</param>
            <param name="caption">消息标题</param>
        </member>
        <member name="M:Ay.Framework.WPF.AyException1.Show(System.Exception,System.String)">
            <summary>
            显示错误信息
            </summary>
            <param name="ex"></param>
            <param name="caption">标题</param>
        </member>
        <member name="T:Ay.Framework.WPF.AySimplyBack">
            <summary>
            AyUserFeedBack.xaml 的交互逻辑
            </summary>
            <summary>
            AySimplyBack
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.AySimplyBack.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.AyCustomException.Show(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="messageBoxText"></param>
            <param name="caption"></param>
        </member>
        <member name="M:Ay.Framework.WPF.AyCustomException.Show(System.String,System.Exception,System.String)">
            <summary>
            
            </summary>
            <param name="messageBoxText"></param>
            <param name="ex"></param>
            <param name="caption"></param>
        </member>
        <member name="M:Ay.Framework.WPF.AyCustomException.Show(System.Exception)">
            <summary>
            显示错误信息
            </summary>
            <param name="ex">错误信息</param>
        </member>
        <member name="M:Ay.Framework.WPF.AyCustomException.Show(System.Exception,System.String,System.String)">
            <summary>
            详细错误信息
            </summary>
            <param name="ex">错误详细信息</param>
            <param name="messageBoxText">消息内容</param>
            <param name="caption">消息标题</param>
        </member>
        <member name="M:Ay.Framework.WPF.AyCustomException.Show(System.Exception,System.String)">
            <summary>
            显示错误信息
            </summary>
            <param name="ex"></param>
            <param name="caption">标题</param>
        </member>
        <member name="T:Ay.Framework.WPF.AyUserFeedBack">
            <summary>
            AyUserFeedBack.xaml 的交互逻辑
            </summary>
            <summary>
            AyUserFeedBack
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.AyUserFeedBack.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.SkinCommonSetWindow">
            <summary>
            SkinCommonSetWindow.xaml 的交互逻辑
            </summary>
            <summary>
            SkinCommonSetWindow
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.SkinCommonSetWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.SkinSetWindow">
            <summary>
            SkinSetWindow.xaml 的交互逻辑
            </summary>
            <summary>
            SkinSetWindow
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.SkinSetWindow.InitCurrentBgPath">
            <summary>
            设置参考对比路径
            2015-6-26 12:33:06 增加颜色设置
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.SkinSetWindow.SetBackgroundFromName(System.String)">
            <summary>
            设置背景图片
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Ay.Framework.WPF.SkinSetWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.AyFontAweSomeEnum">
            <summary>
            fontawesome字体C#
            作者:杨洋
            版本fontawesome 4.7
            收集. fontawesome 2016-12-9 17:43:47
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.EnumHelper.ToSelectList(System.Type,System.String,System.String)">
            <summary>  
            根据枚举生成下拉列表的数据源  
            </summary>  
            <param name="enumType">枚举类型</param>  
            <param name="firstText">第一行文本(一般用于查询。例如：全部/请选择)</param>  
            <param name="firstValue">第一行值(一般用于查询。例如：全部/请选择的值)</param>  
            <returns></returns>  
        </member>
        <member name="M:Ay.Framework.WPF.EnumHelper.ToSelectList(System.Type)">
            <summary>  
            根据枚举生成下拉列表的数据源  
            </summary>  
            <param name="enumType">枚举类型</param>  
            <param name="firstText">第一行文本(一般用于查询。例如：全部/请选择)</param>  
            <param name="firstValue">第一行值(一般用于查询。例如：全部/请选择的值)</param>  
            <returns></returns>  
        </member>
        <member name="M:Ay.Framework.WPF.EnumHelper.ToSelectListByDesc(System.Type,System.String,System.String)">
            <summary>  
            根据枚举的描述生成下拉列表的数据源  
            </summary>  
            <param name="enumType"></param>  
            <returns></returns>  
        </member>
        <member name="M:Ay.Framework.WPF.EnumHelper.GetDescription(System.Enum)">
            <summary>  
            获取枚举的描述信息  
            </summary>  
            <param name="enumValue">枚举值</param>  
            <returns>描述</returns>  
        </member>
        <member name="M:Ay.Framework.WPF.EnumHelper.GetEnumValue``1(System.String,System.Boolean)">
            <summary>
            把枚举转换为键值对集合
            </summary>
            <param name="enumType">枚举类型</param>
            <param name="getText">获得值得文本</param>
            <returns>以枚举值为key，枚举文本为value的键值对集合</returns>
        </member>
        <member name="M:Ay.Framework.WPF.EnumHelper.EnumToDictionary``1">
            <remarks>This will blow up wonderfully at runtime if T is not an enum type.</remarks>
        </member>
        <member name="M:Ay.Framework.WPF.EnumHelper.GetEnumValueAttributes``2">
            <remarks>If a field doesn't have the defined attribute, null is provided. If a field has an attribute more than once, it causes an exception.</remarks>
        </member>
        <member name="T:Ay.Framework.WPF.Helpers.RoutedEventHelper">
            <summary>
            2016-6-20 00:36:48 
            对客户端公开
            <see cref="!:TaskbarIcon"/> class.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.RoutedEventHelper.RaiseEvent(System.Windows.DependencyObject,System.Windows.RoutedEventArgs)">
            <summary>
            A static helper method to raise a routed event on a target UIElement or ContentElement.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
            <param name="args">RoutedEventArgs to use when raising the event</param>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.RoutedEventHelper.AddHandler(System.Windows.DependencyObject,System.Windows.RoutedEvent,System.Delegate)">
            <summary>
            A static helper method that adds a handler for a routed event 
            to a target UIElement or ContentElement.
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="routedEvent">Event that will be handled</param>
            <param name="handler">Event handler to be added</param>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.RoutedEventHelper.RemoveHandler(System.Windows.DependencyObject,System.Windows.RoutedEvent,System.Delegate)">
            <summary>
            A static helper method that removes a handler for a routed event 
            from a target UIElement or ContentElement.
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="routedEvent">Event that will no longer be handled</param>
            <param name="handler">Event handler to be removed</param>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.ExpandAll(System.Windows.Controls.TreeView)">
            <summary>
            Expands all children of a TreeView
            </summary>
            <param name="treeView">The TreeView whose children will be expanded</param>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.ExpandSubContainers(System.Windows.Controls.ItemsControl)">
            <summary>
            Expands all children of a TreeView or TreeViewItem
            </summary>
            <param name="parentContainer">The TreeView or TreeViewItem containing the children to expand</param>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.SelectItem(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Searches a TreeView for the provided object and selects it if found
            </summary>
            <param name="treeView">The TreeView containing the item</param>
            <param name="item">The item to search and select</param>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.ExpandAndSelectItem(System.Windows.Controls.ItemsControl,System.Object)">
            <summary>
            Finds the provided object in an ItemsControl's children and selects it
            </summary>
            <param name="parentContainer">The parent container whose children will be searched for the selected item</param>
            <param name="itemToSelect">The item to select</param>
            <returns>True if the item is found and selected, false otherwise</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.GetItemFromObject(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Returns the TreeViewItem of a data bound object.
            </summary>
            <param name="treeView">TreeView</param>
            <param name="obj">Data bound object</param>
            <returns>The TreeViewItem of the data bound object or null.</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.SelectObject(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Selects a data bound object of a TreeView.
            </summary>
            <param name="treeView">TreeView</param>
            <param name="obj">Data bound object</param>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.SelectObject(System.Windows.Controls.TreeView,System.Object,System.Boolean)">
            <summary>
            Selects or deselects a data bound object of a TreeView.
            </summary>
            <param name="treeView">TreeView</param>
            <param name="obj">Data bound object</param>
            <param name="selected">select or deselect</param>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.IsObjectSelected(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Returns if a data bound object of a TreeView is selected.
            </summary>
            <param name="treeView">TreeView</param>
            <param name="obj">Data bound object</param>
            <returns>Returns true if the object is selected, and false if it is not selected or obj is not in the tree.</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.IsObjectFocused(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Returns if a data bound object of a TreeView is focused.
            </summary>
            <param name="treeView">TreeView</param>
            <param name="obj">Data bound object</param>
            <returns>Returns true if the object is focused, and false if it is not focused or obj is not in the tree.</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.ExpandObject(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Expands a data bound object of a TreeView.
            </summary>
            <param name="treeView">TreeView</param>
            <param name="obj">Data bound object</param>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.ExpandObject(System.Windows.Controls.TreeView,System.Object,System.Boolean)">
            <summary>
            Expands or collapses a data bound object of a TreeView.
            </summary>
            <param name="treeView">TreeView</param>
            <param name="obj">Data bound object</param>
            <param name="expanded">expand or collapse</param>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.IsObjectExpanded(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Returns if a douta bound object of a TreeView is expanded.
            </summary>
            <param name="treeView">TreeView</param>
            <param name="obj">Data bound object</param>
            <returns>Returns true if the object is expanded, and false if it is collapsed or obj is not in the tree.</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.GetParentItem(System.Windows.Controls.TreeViewItem)">
            <summary>
            Retuns the parent TreeViewItem.
            </summary>
            <param name="item">TreeViewItem</param>
            <returns>Parent TreeViewItem</returns>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.GetTreeViewItem(System.Windows.Controls.ItemsControl,System.Object)">
            <summary>
            ay 2015-05-23 15:34:08 增加
            </summary>
            <param name="container"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.GetTreeViewItem2(System.Windows.Controls.ItemsControl,System.Object)">
            <summary>
            ay 2015-05-23 15:34:08 增加,不需要查找子容器
            </summary>
            <param name="container"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.Helpers.TreeViewHelper.MyVirtualizingStackPanel.BringIntoView(System.Int32)">
            <summary>
            Publically expose BringIndexIntoView.
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.WpfTreeHelper.GetChildObjects``1(System.Windows.DependencyObject,System.Type)">
            <summary>
            查找某种类型的子控件，并返回一个List集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="typename"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.WpfTreeHelper.GetChildObjects``1(System.Windows.DependencyObject,System.String)">
            <summary>
            通过名称查找子控件，并返回一个List集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.WpfTreeHelper.GetChildObject``1(System.Windows.DependencyObject,System.String)">
            <summary>
            通过名称查找某子控件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.WpfTreeHelper.GetParentObject``1(System.Windows.DependencyObject,System.String)">
            <summary>
            通过名称查找父控件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.WpfTreeHelper.CloneElement(System.Object)">
            <summary>
            复制一个节点
            </summary>
            <param name="elementToClone"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.WpfTreeHelper.FindVisualChild``1(System.Windows.Media.Visual)">
            <summary>
            查找可视子元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="visual"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.WpfTreeHelper.FindFirstVisualChildFromDataTemplate``1(System.Windows.DependencyObject,System.String)">
            <summary>
            从数据模板中获得数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="childName"></param>
            <returns></returns>
        </member>
        <member name="M:Ay.Framework.WPF.WpfTreeHelper.FindChild``1(System.Windows.DependencyObject)">
            遍历Listbox绑定模板中的控件
        </member>
        <member name="P:Ay.Framework.WPF.WpfTreeHelper.IsInDesignMode">
            <summary>
            Gets a value indicating whether the control is in design mode (running in Blend
            or Visual Studio).
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.UIChildFinder.GetLogicalAncestor``1(System.Windows.DependencyObject)">
            <summary>
            从逻辑树找控件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="T:Ay.Framework.WPF.Themes.AySkin.DefaultAyControl">
            <summary>
            DefaultAyControl
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Themes.AySkin.DefaultAyControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.Themes.Common.NoChanged">
            <summary>
            NoChanged
            </summary>
        </member>
        <member name="M:Ay.Framework.WPF.Themes.Common.NoChanged.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ay.Framework.WPF.AyTransitionGetter">
            <summary>
            获得容器过渡效果
            aaronyang 2015-03-03 13:21:46
            </summary>
        </member>
        <member name="T:Ay.MvcFramework.AyMarkupExtension.AyPage">
            <summary>
            生日：2016-10-27 00:22:36
            理想：简化xaml写法
            </summary>
        </member>
        <member name="T:Ay.MvcFramework.Wpf.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Ay.MvcFramework.Wpf.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Ay.MvcFramework.Wpf.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:Ay.MvcFramework.Wpf.Properties.Resources._4506">
            <summary>
              查找 System.Byte[] 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Ay.MvcFramework.Wpf.Properties.Resources.FontAwesome">
            <summary>
              查找 System.Byte[] 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Ay.MvcFramework.Wpf.Properties.Resources.seeviewloading">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="F:AyTableViewRowModel._ROWID">
            <summary>
            请勿设置
            </summary>
        </member>
        <member name="P:AyTableViewRowModel.ROWID">
            <summary>
            未填写
            </summary>
        </member>
        <member name="P:AyTableViewRowModel.IsEditRow">
            <summary>
            是否行编辑
            </summary>
        </member>
        <member name="P:AyTableViewRowModel.HasRowDetail">
            <summary>
            未填写
            </summary>
        </member>
        <member name="M:AyTableViewService.CopyModel(System.Object,System.Object)">
            <summary>  
            模型赋值  
            </summary>  
            <param name="target">目标</param>  
            <param name="source">数据源</param>  
        </member>
        <member name="M:AyTableViewService.Validate(RowOldNewValue,System.Action,System.Action)">
            <summary>
            验证行是否通过
            </summary>
            <param name="rowvalue"></param>
            <param name="passed">验证通过</param>
            <param name="failded">验证失败</param>
        </member>
        <member name="T:RowOldNewValue">
            <summary>
            2017-12-13 16:10:28
            AY 存储新旧对象
            </summary>
        </member>
        <member name="P:RowOldNewValue.OldValue">
            <summary>
            旧值
            </summary>
        </member>
        <member name="P:RowOldNewValue.NewValue">
            <summary>
            新值
            </summary>
        </member>
        <member name="T:AyExtension">
            <summary>
            一些 packuri 模板，一些window操作，屏幕最大化，获得窗口位置
            </summary>
        </member>
        <!-- 对于成员“M:AyExtension.CloseParentAyLayer(System.Windows.FrameworkElement)”忽略有格式错误的 XML 注释 -->
        <member name="P:AyExtension.ImageSourceConverter">
            <summary>
            ImageSourceConverter
            </summary>
        </member>
        <!-- 对于成员“M:AyExtension.SetAyWindowMouseLeftButtonCommonClick(System.Windows.UIElement,System.Action)”忽略有格式错误的 XML 注释 -->
        <member name="M:AyExtension.SetAyWindowMouseLeftButtonCommonClick(Ay.Framework.WPF.Controls.AyWindow,System.Action)">
            <summary>
            用于AyWindow，快速创建单击拖动，双击最大化或者还原窗体
            添加时间：2016-6-20 01:13:58
            作者：AY
            </summary>
            <param name="element"></param>
            <param name="e">鼠标对象</param>
            <param name="ClickTwoAction">双击执行的代码</param>
            <returns></returns>
        </member>
        <member name="M:AyExtension.GetWindowRectangle(System.Windows.Window)">
            <summary>
            根据激活窗口句柄获得窗体位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:AyExtension.GetWindowRectHandle">
            <summary>
            根据激活窗口句柄获得窗体位置
            </summary>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.Media.Wave.Native.MMSYSERR">
            <summary>
            This class holds MMSYSERR errors.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.NOERROR">
            <summary>
            Success.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.ERROR">
            <summary>
            Unspecified error.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.BADDEVICEID">
            <summary>
            Device ID out of range.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.NOTENABLED">
            <summary>
            Driver failed enable.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.ALLOCATED">
            <summary>
            Device already allocated.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.INVALHANDLE">
            <summary>
            Device handle is invalid.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.NODRIVER">
            <summary>
            No device driver present.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.NOMEM">
            <summary>
            Memory allocation error.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.NOTSUPPORTED">
            <summary>
            Function isn't supported.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.BADERRNUM">
            <summary>
            Error value out of range.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.INVALFLAG">
            <summary>
            Invalid flag passed.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.INVALPARAM">
            <summary>
            Invalid parameter passed.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.HANDLEBUSY">
            <summary>
            Handle being used simultaneously on another thread (eg callback).
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.INVALIDALIAS">
            <summary>
            Specified alias not found.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.BADDB">
            <summary>
            Bad registry database.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.KEYNOTFOUND">
            <summary>
            Registry key not found.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.READERROR">
            <summary>
            Registry read error.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.WRITEERROR">
            <summary>
            Registry write error.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.DELETEERROR">
            <summary>
            Eegistry delete error.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.VALNOTFOUND">
            <summary>
            Registry value not found. 
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.NODRIVERCB">
            <summary>
            Driver does not call DriverCallback.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.MMSYSERR.LASTERROR">
            <summary>
            Last error in range.
            </summary>
        </member>
        <member name="T:LumiSoft.Media.Wave.Native.WavConstants">
            <summary>
            This class provides most used wav constants.
            </summary>
        </member>
        <member name="T:LumiSoft.Media.Wave.Native.WAVEFORMATEX">
            <summary>
            This class represents WAVEFORMATEX structure.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEFORMATEX.wFormatTag">
            <summary>
            Waveform-audio format type. Format tags are registered with Microsoft Corporation for many 
            compression algorithms. A complete list of format tags can be found in the Mmreg.h header file. 
            For one- or two-channel PCM data, this value should be WAVE_FORMAT_PCM. When this structure is 
            included in a WAVEFORMATEXTENSIBLE structure, this value must be WAVE_FORMAT_EXTENSIBLE.</summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEFORMATEX.nChannels">
            <summary>
            Number of channels in the waveform-audio data. Monaural data uses one channel and stereo data 
            uses two channels.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEFORMATEX.nSamplesPerSec">
            <summary>
            Sample rate, in samples per second (hertz). If wFormatTag is WAVE_FORMAT_PCM, then common 
            values for nSamplesPerSec are 8.0 kHz, 11.025 kHz, 22.05 kHz, and 44.1 kHz.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEFORMATEX.nAvgBytesPerSec">
            <summary>
            Required average data-transfer rate, in bytes per second, for the format tag. If wFormatTag 
            is WAVE_FORMAT_PCM, nAvgBytesPerSec should be equal to the product of nSamplesPerSec and nBlockAlign.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEFORMATEX.nBlockAlign">
            <summary>
            Block alignment, in bytes. The block alignment is the minimum atomic unit of data for the wFormatTag 
            format type. If wFormatTag is WAVE_FORMAT_PCM or WAVE_FORMAT_EXTENSIBLE, nBlockAlign must be equal 
            to the product of nChannels and wBitsPerSample divided by 8 (bits per byte).
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEFORMATEX.wBitsPerSample">
            <summary>
            Bits per sample for the wFormatTag format type. If wFormatTag is WAVE_FORMAT_PCM, then 
            wBitsPerSample should be equal to 8 or 16.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEFORMATEX.cbSize">
            <summary>
            Size, in bytes, of extra format information appended to the end of the WAVEFORMATEX structure.
            </summary>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WAVEFORMATEX.ToString">
            <summary>
            Returns this object field values as string list.
            </summary>
            <returns>Returns this object field values as string list.</returns>
        </member>
        <member name="T:LumiSoft.Media.Wave.Native.WAVEHDR">
            <summary>
            This class represents WAVEHDR structure.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEHDR.lpData">
            <summary>
            Long pointer to the address of the waveform buffer.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEHDR.dwBufferLength">
            <summary>
            Specifies the length, in bytes, of the buffer.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEHDR.dwBytesRecorded">
            <summary>
            When the header is used in input, this member specifies how much data is in the buffer. 
            When the header is used in output, this member specifies the number of bytes played from the buffer.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEHDR.dwUser">
            <summary>
            Specifies user data.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEHDR.dwFlags">
            <summary>
            Specifies information about the buffer.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEHDR.dwLoops">
            <summary>
            Specifies the number of times to play the loop.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEHDR.lpNext">
            <summary>
            Reserved. This member is used within the audio driver to maintain a first-in, first-out linked list of headers awaiting playback.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEHDR.reserved">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="T:LumiSoft.Media.Wave.Native.WAVEOUTCAPS">
            <summary>
            This class represents WAVEOUTCAPS structure.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEOUTCAPS.wMid">
            <summary>
            Manufacturer identifier for the device driver for the device.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEOUTCAPS.wPid">
            <summary>
            Product identifier for the device.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEOUTCAPS.vDriverVersion">
            <summary>
            Version number of the device driver for the device.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEOUTCAPS.szPname">
            <summary>
            Product name in a null-terminated string.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEOUTCAPS.dwFormats">
            <summary>
            Standard formats that are supported.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEOUTCAPS.wChannels">
            <summary>
            Number specifying whether the device supports mono (1) or stereo (2) output.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEOUTCAPS.wReserved1">
            <summary>
            Packing.
            </summary>
        </member>
        <member name="F:LumiSoft.Media.Wave.Native.WAVEOUTCAPS.dwSupport">
            <summary>
            Optional functionality supported by the device.
            </summary>
        </member>
        <member name="T:LumiSoft.Media.Wave.Native.WavFormat">
            <summary>
            This class holds most known wav compression formats.
            </summary>
        </member>
        <member name="T:LumiSoft.Media.Wave.Native.waveOutProc">
            <summary>
            The waveOutProc function is the callback function used with the waveform-audio output device.
            </summary>
            <param name="hdrvr">Handle to the waveform-audio device associated with the callback.</param>
            <param name="uMsg">Waveform-audio output message.</param>
            <param name="dwUser">User-instance data specified with waveOutOpen.</param>
            <param name="dwParam1">Message parameter.</param>
            <param name="dwParam2">Message parameter.</param>
        </member>
        <member name="T:LumiSoft.Media.Wave.Native.waveInProc">
            <summary>
            The waveInProc function is the callback function used with the waveform-audio input device.
            </summary>
            <param name="hdrvr">Handle to the waveform-audio device associated with the callback.</param>
            <param name="uMsg">Waveform-audio input message.</param>
            <param name="dwUser">User-instance data specified with waveOutOpen.</param>
            <param name="dwParam1">Message parameter.</param>
            <param name="dwParam2">Message parameter.</param>
        </member>
        <member name="T:LumiSoft.Media.Wave.Native.WavMethods">
            <summary>
            This class provides windows wav methods.
            </summary>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveInAddBuffer(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            The waveInAddBuffer function sends an input buffer to the given waveform-audio input device. When the buffer is filled, the application is notified.
            </summary>
            <param name="hWaveOut">Handle to the waveform-audio input device.</param>
            <param name="lpWaveOutHdr">Pointer to a WAVEHDR structure that identifies the buffer.</param>
            <param name="uSize">Size, in bytes, of the WAVEHDR structure.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveInClose(System.IntPtr)">
            <summary>
            Closes the specified waveform input device.
            </summary>
            <param name="hWaveOut">Handle to the waveform-audio input device. If the function succeeds, the handle is no longer valid after this call.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveInGetDevCaps(System.UInt32,LumiSoft.Media.Wave.Native.WAVEOUTCAPS@,System.Int32)">
            <summary>
            Queries a specified waveform device to determine its capabilities.
            </summary>
            <param name="hwo">Identifier of the waveform-audio input device. It can be either a device identifier or a Handle to an open waveform-audio output device.</param>
            <param name="pwoc">Pointer to a WAVEOUTCAPS structure to be filled with information about the capabilities of the device.</param>
            <param name="cbwoc">Size, in bytes, of the WAVEOUTCAPS structure.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveInGetNumDevs">
            <summary>
            Get the waveInGetNumDevs function returns the number of waveform-audio input devices present in the system.
            </summary>
            <returns>Returns the waveInGetNumDevs function returns the number of waveform-audio input devices present in the system.
            </returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveInOpen(System.IntPtr@,System.Int32,LumiSoft.Media.Wave.Native.WAVEFORMATEX,LumiSoft.Media.Wave.Native.waveInProc,System.Int32,System.Int32)">
            <summary>
            The waveInOpen function opens the given waveform-audio input device for recording.
            </summary>
            <param name="hWaveOut">Pointer to a buffer that receives a handle identifying the open waveform-audio input device.</param>
            <param name="uDeviceID">Identifier of the waveform-audio input device to open. It can be either a device identifier or a handle of an open waveform-audio input device. You can use the following flag instead of a device identifier.</param>
            <param name="lpFormat">Pointer to a WAVEFORMATEX structure that identifies the desired format for recording waveform-audio data. You can free this structure immediately after waveInOpen returns.</param>
            <param name="dwCallback">Pointer to a fixed callback function, an event handle, a handle to a window, 
            or the identifier of a thread to be called during waveform-audio recording to process messages related 
            to the progress of recording. If no callback function is required, this value can be zero. 
            For more information on the callback function, see waveInProc.</param>
            <param name="dwInstance">User-instance data passed to the callback mechanism.</param>
            <param name="dwFlags">Flags for opening the device.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveInPrepareHeader(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Prepares a waveform data block for recording.
            </summary>
            <param name="hWaveOut">Handle to the waveform-audio input device.</param>
            <param name="lpWaveOutHdr">Pointer to a WAVEHDR structure that identifies the data block to be prepared. 
            The buffer's base address must be aligned with the respect to the sample size.</param>
            <param name="uSize">Size, in bytes, of the WAVEHDR structure.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveInReset(System.IntPtr)">
            <summary>
            Stops input on a specified waveform output device and resets the current position to 0.
            </summary>
            <param name="hWaveOut">Handle to the waveform-audio input device.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveInStart(System.IntPtr)">
            <summary>
            Starts input on the given waveform-audio input device.
            </summary>
            <param name="hWaveOut">Handle to the waveform-audio input device.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveInStop(System.IntPtr)">
            <summary>
            Stops input on the given waveform-audio input device.
            </summary>
            <param name="hWaveOut">Handle to the waveform-audio input device.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveInUnprepareHeader(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Cleans up the preparation performed by waveInPrepareHeader.
            </summary>
            <param name="hWaveOut">Handle to the waveform-audio input device.</param>
            <param name="lpWaveOutHdr">Pointer to a WAVEHDR structure identifying the data block to be cleaned up.</param>
            <param name="uSize">Size, in bytes, of the WAVEHDR structure.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveOutClose(System.IntPtr)">
            <summary>
            Closes the specified waveform output device.
            </summary>
            <param name="hWaveOut">Handle to the waveform-audio output device. If the function succeeds, the handle is no longer valid after this call.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveOutGetDevCaps(System.UInt32,LumiSoft.Media.Wave.Native.WAVEOUTCAPS@,System.Int32)">
            <summary>
            Queries a specified waveform device to determine its capabilities.
            </summary>
            <param name="hwo">Identifier of the waveform-audio output device. It can be either a device identifier or a Handle to an open waveform-audio output device.</param>
            <param name="pwoc">Pointer to a WAVEOUTCAPS structure to be filled with information about the capabilities of the device.</param>
            <param name="cbwoc">Size, in bytes, of the WAVEOUTCAPS structure.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveOutGetNumDevs">
            <summary>
            Retrieves the number of waveform output devices present in the system.
            </summary>
            <returns>The number of devices indicates success. Zero indicates that no devices are present or that an error occurred.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveOutGetPosition(System.IntPtr,System.Int32@,System.Int32)">
            <summary>
            Retrieves the current playback position of the specified waveform output device.
            </summary>
            <param name="hWaveOut">Handle to the waveform-audio output device.</param>
            <param name="lpInfo">Pointer to an MMTIME structure.</param>
            <param name="uSize">Size, in bytes, of the MMTIME structure.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveOutGetVolume(System.IntPtr,System.Int32@)">
            <summary>
            Queries the current volume setting of a waveform output device.
            </summary>
            <param name="hWaveOut">Handle to an open waveform-audio output device. This parameter can also be a device identifier.</param>
            <param name="dwVolume">Pointer to a variable to be filled with the current volume setting. 
            The low-order word of this location contains the left-channel volume setting, and the high-order 
            word contains the right-channel setting. A value of 0xFFFF represents full volume, and a 
            value of 0x0000 is silence.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveOutOpen(System.IntPtr@,System.Int32,LumiSoft.Media.Wave.Native.WAVEFORMATEX,LumiSoft.Media.Wave.Native.waveOutProc,System.Int32,System.Int32)">
            <summary>
            The waveOutOpen function opens the given waveform-audio output device for playback.
            </summary>
            <param name="hWaveOut">Pointer to a buffer that receives a handle identifying the open waveform-audio output device. Use the handle to identify the device when calling other waveform-audio output functions. This parameter might be NULL if the WAVE_FORMAT_QUERY flag is specified for fdwOpen.</param>
            <param name="uDeviceID">Identifier of the waveform-audio output device to open. It can be either a device identifier or a handle of an open waveform-audio input device.</param>
            <param name="lpFormat">Pointer to a WAVEFORMATEX structure that identifies the format of the waveform-audio data to be sent to the device. You can free this structure immediately after passing it to waveOutOpen.</param>
            <param name="dwCallback">Pointer to a fixed callback function, an event handle, a handle to a window, or the identifier of a thread to be called during waveform-audio playback to process messages related to the progress of the playback. If no callback function is required, this value can be zero.</param>
            <param name="dwInstance">User-instance data passed to the callback mechanism.</param>
            <param name="dwFlags">Flags for opening the device.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveOutPause(System.IntPtr)">
            <summary>
            Pauses playback on a specified waveform output device.
            </summary>
            <param name="hWaveOut">Handle to the waveform-audio output device.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveOutPrepareHeader(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Prepares a waveform data block for playback.
            </summary>
            <param name="hWaveOut">Handle to the waveform-audio output device.</param>
            <param name="lpWaveOutHdr">Pointer to a WAVEHDR structure that identifies the data block to be prepared. The buffer's base address must be aligned with the respect to the sample size.</param>
            <param name="uSize">Size, in bytes, of the WAVEHDR structure.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveOutReset(System.IntPtr)">
            <summary>
            Stops playback on a specified waveform output device and resets the current position to 0.
            </summary>
            <param name="hWaveOut">Handle to the waveform-audio output device.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveOutRestart(System.IntPtr)">
            <summary>
            Restarts a paused waveform output device.
            </summary>
            <param name="hWaveOut">Handle to the waveform-audio output device.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveOutSetVolume(System.IntPtr,System.Int32)">
            <summary>
            Sets the volume of a waveform output device.
            </summary>
            <param name="hWaveOut">Handle to an open waveform-audio output device. This parameter can also be a device identifier.</param>
            <param name="dwVolume">Specifies a new volume setting. The low-order word contains the left-channel 
            volume setting, and the high-order word contains the right-channel setting. A value of 0xFFFF 
            represents full volume, and a value of 0x0000 is silence.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveOutUnprepareHeader(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Cleans up the preparation performed by waveOutPrepareHeader.
            </summary>
            <param name="hWaveOut">Handle to the waveform-audio output device.</param>
            <param name="lpWaveOutHdr">Pointer to a WAVEHDR structure identifying the data block to be cleaned up.</param>
            <param name="uSize">Size, in bytes, of the WAVEHDR structure.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="M:LumiSoft.Media.Wave.Native.WavMethods.waveOutWrite(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Sends a data block to the specified waveform output device.
            </summary>
            <param name="hWaveOut">Handle to the waveform-audio output device.</param>
            <param name="lpWaveOutHdr">Pointer to a WAVEHDR structure containing information about the data block.</param>
            <param name="uSize">Size, in bytes, of the WAVEHDR structure.</param>
            <returns>Returns value of MMSYSERR.</returns>
        </member>
        <member name="T:LumiSoft.Media.Wave.BufferFullHandler">
            <summary>
            Represents the method that will handle the <b>WavRecorder.BufferFull</b> event.
            </summary>
            <param name="buffer">Recorded data.</param>
        </member>
        <member name="T:LumiSoft.Media.Wave.WaveIn">
            <summary>
            This class implements streaming microphone wav data receiver.
            </summary>
        </member>
        <member name="T:LumiSoft.Media.Wave.WaveIn.BufferItem">
            <summary>
            This class holds queued recording buffer.
            </summary>
        </member>
        <member name="M:LumiSoft.Media.Wave.WaveIn.BufferItem.#ctor(System.Runtime.InteropServices.GCHandle@,System.Runtime.InteropServices.GCHandle@,System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="headerHandle">Header handle.</param>
            <param name="header">Wav header.</param>
            <param name="dataHandle">Wav header data handle.</param>
            <param name="dataSize">Data size in bytes.</param>
        </member>
        <member name="M:LumiSoft.Media.Wave.WaveIn.BufferItem.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="P:LumiSoft.Media.Wave.WaveIn.BufferItem.HeaderHandle">
            <summary>
            Gets header handle.
            </summary>
        </member>
        <member name="P:LumiSoft.Media.Wave.WaveIn.BufferItem.Header">
            <summary>
            Gets header.
            </summary>
        </member>
        <member name="P:LumiSoft.Media.Wave.WaveIn.BufferItem.DataHandle">
            <summary>
            Gets wav header data pointer handle.
            </summary>
        </member>
        <member name="P:LumiSoft.Media.Wave.WaveIn.BufferItem.Data">
            <summary>
            Gets wav header data.
            </summary>
        </member>
        <member name="P:LumiSoft.Media.Wave.WaveIn.BufferItem.DataSize">
            <summary>
            Gets wav header data size in bytes.
            </summary>
        </member>
        <member name="M:LumiSoft.Media.Wave.WaveIn.#ctor(LumiSoft.Media.Wave.WavInDevice,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="outputDevice">Input device.</param>
            <param name="samplesPerSec">Sample rate, in samples per second (hertz). For PCM common values are 
            8.0 kHz, 11.025 kHz, 22.05 kHz, and 44.1 kHz.</param>
            <param name="bitsPerSample">Bits per sample. For PCM 8 or 16 are the only valid values.</param>
            <param name="channels">Number of channels.</param>
            <param name="bufferSize">Specifies recording buffer size.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>outputDevice</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the aruments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.Media.Wave.WaveIn.Finalize">
            <summary>
            Default destructor.
            </summary>
        </member>
        <member name="M:LumiSoft.Media.Wave.WaveIn.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.Media.Wave.WaveIn.Start">
            <summary>
            Starts recording.
            </summary>
        </member>
        <member name="M:LumiSoft.Media.Wave.WaveIn.Stop">
            <summary>
            Stops recording.
            </summary>
        </member>
        <member name="M:LumiSoft.Media.Wave.WaveIn.OnWaveInProc(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method is called when wav device generates some event.
            </summary>
            <param name="hdrvr">Handle to the waveform-audio device associated with the callback.</param>
            <param name="uMsg">Waveform-audio input message.</param>
            <param name="dwUser">User-instance data specified with waveOutOpen.</param>
            <param name="dwParam1">Message parameter.</param>
            <param name="dwParam2">Message parameter.</param>
        </member>
        <member name="M:LumiSoft.Media.Wave.WaveIn.ProcessFirstBuffer(System.Object)">
            <summary>
            Processes first first filled buffer in queue and disposes it if done.
            </summary>
            <param name="state">User data.</param>
        </member>
        <member name="M:LumiSoft.Media.Wave.WaveIn.EnsureBuffers">
            <summary>
            Fills recording buffers.
            </summary>
        </member>
        <member name="P:LumiSoft.Media.Wave.WaveIn.Devices">
            <summary>
            Gets all available input audio devices.
            </summary>
        </member>
        <member name="P:LumiSoft.Media.Wave.WaveIn.IsDisposed">
            <summary>
            Gets if this object is disposed.
            </summary>
        </member>
        <member name="P:LumiSoft.Media.Wave.WaveIn.InputDevice">
            <summary>
            Gets current input device.
            </summary>
            <exception cref="!:">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Media.Wave.WaveIn.SamplesPerSec">
            <summary>
            Gets number of samples per second.
            </summary>
            <exception cref="!:">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Media.Wave.WaveIn.BitsPerSample">
            <summary>
            Gets number of buts per sample.
            </summary>
            <exception cref="!:">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Media.Wave.WaveIn.Channels">
            <summary>
            Gets number of channels.
            </summary>
            <exception cref="!:">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.Media.Wave.WaveIn.BufferSize">
            <summary>
            Gets recording buffer size.
            </summary>
            <exception cref="!:">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <!-- 对于成员“P:LumiSoft.Media.Wave.WaveIn.BlockSize”忽略有格式错误的 XML 注释 -->
        <member name="E:LumiSoft.Media.Wave.WaveIn.BufferFull">
            <summary>
            This event is raised when record buffer is full and application should process it.
            </summary>
        </member>
        <member name="M:LumiSoft.Media.Wave.WaveIn.OnBufferFull(System.Byte[])">
            <summary>
            This method raises event <b>BufferFull</b> event.
            </summary>
            <param name="buffer">Receive buffer.</param>
        </member>
        <member name="T:LumiSoft.Media.Wave.WavInDevice">
            <summary>
            This class represents wav input device.
            </summary>
        </member>
        <member name="M:LumiSoft.Media.Wave.WavInDevice.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="index">Device index in devices.</param>
            <param name="name">Device name.</param>
            <param name="channels">Number of audio channels.</param>
        </member>
        <member name="P:LumiSoft.Media.Wave.WavInDevice.Name">
            <summary>
            Gets device name.
            </summary>
        </member>
        <member name="P:LumiSoft.Media.Wave.WavInDevice.Channels">
            <summary>
            Gets number of input channels(mono,stereo,...) supported.
            </summary>
        </member>
        <member name="P:LumiSoft.Media.Wave.WavInDevice.Index">
            <summary>
            Gets device index in devices.
            </summary>
        </member>
        <member name="T:ActionOnDispose">
            <summary>
                Provides a wrapper over <see cref="T:System.IDisposable"/> that
                invokes the provided delegate when <see cref="M:System.IDisposable.Dispose"/>
                is called.
            </summary>
            <example>
            <code>
            SqlConnection conn = new SqlConnection(connectionString);
            using(new ActionOnDispose(new Action(conn.Close))
            {
                // Do work here...
                // For cases where you want the connection closed
                // but not disposed
            }
            </code>
            </example>
        </member>
        <member name="M:ActionOnDispose.#ctor(System.Action)">
            <summary>
                Creats a new <see cref="T:ActionOnDispose"/>
                using the provided <see cref="T:System.Action"/>.
            </summary>
            <param name="unlockAction">
                The <see cref="T:System.Action"/> to invoke when <see cref="M:ActionOnDispose.Dispose"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="unlockAction"/> is null.</exception>
        </member>
        <member name="M:ActionOnDispose.Dispose">
            <summary>
                Calls the provided Action if it has not been called;
                otherwise, throws an <see cref="T:System.Exception"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">If <see cref="M:ActionOnDispose.Dispose"/> has already been called.</exception>
        </member>
        <member name="T:PixelLab.Common.BotUtil">
            <summary>
                Contains general helper methods.
            </summary>
        </member>
        <member name="M:PixelLab.Common.BotUtil.InterlockedSetIfNotNull``1(``0@,``0)">
            <summary>
                Wraps <see cref="M:System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)"/>
                for atomically setting null fields.
            </summary>
            <typeparam name="T">The type of the field to set.</typeparam>
            <param name="location">
                The field that, if null, will be set to <paramref name="value"/>.
            </param>
            <param name="value">
                If <paramref name="location"/> is null, the object to set it to.
            </param>
            <returns>true if <paramref name="location"/> was null and has now been set; otherwise, false.</returns>
        </member>
        <member name="M:PixelLab.Common.BotUtil.InterlockedSetNullField``1(``0@,``0)">
            <summary>
                Wraps <see cref="M:System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)"/>
                for atomically setting null fields.
            </summary>
            <typeparam name="T">The type of the field to set.</typeparam>
            <param name="location">
                The field that, if null, will be set to <paramref name="value"/>.
            </param>
            <param name="value">
                If <paramref name="location"/> is null, the object to set it to.
            </param>
            <returns>true if <paramref name="location"/> was null and has now been set; otherwise, false.</returns>
        </member>
        <!-- 对于成员“M:PixelLab.Common.BotUtil.IsCriticalException(System.Exception)”忽略有格式错误的 XML 注释 -->
        <member name="M:PixelLab.Common.BotUtil.VerifyPropertyNamesOnChange(System.ComponentModel.INotifyPropertyChanged)">
            <summary>
            Verifies that a property name exists in this ViewModel. This method
            can be called before the property is used, for instance before
            calling RaisePropertyChanged. It avoids errors when a property name
            is changed but some places are missed.
            <para>This method is only active in DEBUG mode.</para>
            </summary>
            <param name="element">The object to watch.</param>
            <remarks>Thanks to Laurent Bugnion for the idea.</remarks>
        </member>
        <member name="M:PixelLab.Common.Changeable.UpdateProperty``1(System.String,``0@,``0)">
            <summary>
            Helper method for raising the PropertyChanged event.
            </summary>
            <typeparam name="T">The type of the property that has changed.</typeparam>
            <param name="propertyName">The name of the property that has changed.</param>
            <param name="propertyValue">The original value of the property that has changed.</param>
            <param name="value">The new value of the property that has changed.</param>
            <returns><c>True</c> if the property was update; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:PixelLab.Common.FilteredObservableEnumerable`2.ResetFilter">
            <summary>
            If a Filter is active, raise a collection reset event.
            </summary>
        </member>
        <member name="M:PixelLab.Common.GeoHelper.ScaleToFit(System.Windows.Size,System.Windows.Size)">
            <summary>
                Returns the scale factor by which an object of size <paramref name="source"/>
                should be scaled to fit within an object of size <param name="target"/>.
            </summary>
            <param name="target">The target size.</param>
            <param name="size2">The source size.</param>
        </member>
        <member name="M:CollectionExtensions.CountForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
            <summary>
            Calls the provided action on each item, providing the item and its index into the source.
            </summary>
        </member>
        <member name="M:CollectionExtensions.AllUnique``1(System.Collections.Generic.IList{``0})">
            <summary>
                Returns true if all items in the list are unique using
                <see cref="P:System.Collections.Generic.EqualityComparer`1.Default">EqualityComparer&lt;T&gt;.Default</see>.
            </summary>
            <exception cref="T:System.ArgumentNullException">if <param name="source"/> is null.</exception>
        </member>
        <member name="M:CollectionExtensions.TrueForAllPairs``1(System.Collections.Generic.IList{``0},System.Func{``0,``0,System.Boolean})">
            <summary>
                Returns true if <paramref name="compare"/> returns
                列表中的每一个都不相等，如果全部相等，就返回true
                2016-8-4 10:50:14
                AY
            </summary>
        </member>
        <member name="M:CollectionExtensions.TrueForAllAdjacentPairs``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean})">
            <summary>
            在一个集合里，查看2个是否相邻
                Returns true if <paramref name="compare"/> returns true of every
                adjacent pair of items in the <paramref name="source"/>.
            </summary>
            <remarks>
            <para>
                If there are n items in the collection, n-1 comparisons are done.
            </para>
            <para>
                Every valid [i] and [i+1] pair are passed into <paramref name="compare"/>.
            </para>
            <para>
                If <paramref name="source"/> has 0 or 1 items, true is returned.
            </para>
            </remarks>
        </member>
        <member name="M:CollectionExtensions.AllNotNullOrEmpty(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Returns true if all of the items in <paramref name="source"/> are not
                null or empty.
            </summary>
            <exception cref="T:System.ArgumentNullException">if <param name="source"/> is null.</exception>
        </member>
        <member name="M:CollectionExtensions.AllExistIn``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Returns true if all items in <paramref name="source"/> exist
                in <paramref name="set"/>.
            </summary>
            <exception cref="T:System.ArgumentNullException">if <param name="source"/> or <param name="set"/> are null.</exception>
        </member>
        <member name="M:CollectionExtensions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Returns true if <paramref name="source"/> has no items in it; otherwise, false.
            </summary>
            <remarks>
            <para>
                If an <see cref="T:System.Collections.Generic.ICollection`1"/> is provided,
                <see cref="P:System.Collections.Generic.ICollection`1.Count"/> is used.
            </para>
            <para>
                Yes, this does basically the same thing as the
                <see cref="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})"/>
                extention. The differences: 'IsEmpty' is easier to remember and it leverages
                <see cref="P:System.Collections.Generic.ICollection`1.Count">ICollection.Count</see> if it exists.
            </para>
            </remarks>
        </member>
        <member name="M:CollectionExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
                Returns the index of the first item in <paramref name="source"/>
                for which <paramref name="predicate"/> returns true. If none, -1.
            </summary>
            <param name="source">The source enumerable.</param>
            <param name="predicate">The function to evaluate on each element.</param>
        </member>
        <member name="M:CollectionExtensions.ToReadOnlyCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Returns a new <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> using the
                contents of <paramref name="source"/>.
            </summary>
            <remarks>
                The contents of <paramref name="source"/> are copied to
                an array to ensure the contents of the returned value
                don't mutate.
            </remarks>
        </member>
        <member name="M:CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
                Performs the specified <paramref name="action"/>
                on each element of the specified <paramref name="source"/>.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">The sequence to which is applied the specified <paramref name="action"/>.</param>
            <param name="action">The action applied to each element in <paramref name="source"/>.</param>
        </member>
        <member name="M:CollectionExtensions.RemoveLast``1(System.Collections.Generic.IList{``0})">
            <summary>
                Removes the last element from <paramref name="source"/>.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">The list from which to remove the last element.</param>
            <returns>The last element.</returns>
            <remarks><paramref name="source"/> must have at least one element and allow changes.</remarks>
        </member>
        <member name="M:CollectionExtensions.EmptyIfNull``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
                If <paramref name="source"/> is null, return an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>;
                otherwise, return <paramref name="source"/>.
            </summary>
        </member>
        <member name="M:CollectionExtensions.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an <see cref="!:ObservableCollection"/> from the <see cref="!:IEnumerable"/>.
            </summary>
            <typeparam name="T">The type of the source elements.</typeparam>
            <param name="source">The <see cref="!:IEnumerable"/> to create the <see cref="!:ObservableCollection"/> from.</param>
            <returns>An <see cref="!:ObservableCollection"/> that contains elements from the input sequence.</returns>
        </member>
        <member name="M:ObservableCollectionPlus`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <remarks>It's recommended that you use this method within BeginMultiUpdate</remarks>
        </member>
        <member name="T:IAyCheckedItem">
            <summary>
            AY
            生日：2016-12-19 16:21:05
            提供一组check的行为特性
            </summary>
        </member>
        <member name="P:IAyCheckedItem.IsChecked">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="P:IAyCheckedItem.ItemText">
            <summary>
            显示的内容
            </summary>
        </member>
        <member name="P:IAyCheckedItem.ItemValue">
            <summary>
            隐藏选中的值
            </summary>
        </member>
        <member name="T:WpfAnimatedGif.ImageAnimationController">
            <summary>
            Provides a way to pause, resume or seek a GIF animation.
            </summary>
        </member>
        <member name="P:WpfAnimatedGif.ImageAnimationController.FrameCount">
            <summary>
            Returns the number of frames in the image.
            </summary>
        </member>
        <member name="P:WpfAnimatedGif.ImageAnimationController.IsPaused">
            <summary>
            Returns a value that indicates whether the animation is paused.
            </summary>
        </member>
        <member name="P:WpfAnimatedGif.ImageAnimationController.IsComplete">
            <summary>
            Returns a value that indicates whether the animation is complete.
            </summary>
        </member>
        <member name="M:WpfAnimatedGif.ImageAnimationController.GotoFrame(System.Int32)">
            <summary>
            Seeks the animation to the specified frame index.
            </summary>
            <param name="index">The index of the frame to seek to</param>
        </member>
        <member name="P:WpfAnimatedGif.ImageAnimationController.CurrentFrame">
            <summary>
            Returns the current frame index.
            </summary>
        </member>
        <member name="M:WpfAnimatedGif.ImageAnimationController.Pause">
            <summary>
            Pauses the animation.
            </summary>
        </member>
        <member name="M:WpfAnimatedGif.ImageAnimationController.Play">
            <summary>
            Starts or resumes the animation. If the animation is complete, it restarts from the beginning.
            </summary>
        </member>
        <member name="E:WpfAnimatedGif.ImageAnimationController.CurrentFrameChanged">
            <summary>
            Raised when the current frame changes.
            </summary>
        </member>
        <member name="M:WpfAnimatedGif.ImageAnimationController.Finalize">
            <summary>
            Finalizes the current object.
            </summary>
        </member>
        <member name="M:WpfAnimatedGif.ImageAnimationController.Dispose">
            <summary>
            Disposes the current object.
            </summary>
        </member>
        <member name="M:WpfAnimatedGif.ImageAnimationController.Dispose(System.Boolean)">
            <summary>
            Disposes the current object
            </summary>
            <param name="disposing">true to dispose both managed an unmanaged resources, false to dispose only managed resources</param>
        </member>
        <member name="P:AyUIEntity.Selected">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="P:AyUIEntity.IsExpanded">
            <summary>
            2016-8-1 11:29:28 增加
            </summary>
        </member>
        <member name="F:LanuageManager.DisabledLanuage">
            <summary>
            禁用语言选择
            </summary>
        </member>
        <member name="M:LanuageManager.GetThemeLanguage(System.String)">
            <summary>
            获得主题的 语言
            </summary>
            <param name="assemblyName">程序集名字</param>
            <returns></returns>
        </member>
        <member name="F:ThemeManager.AvgColor">
            <summary>
            背景图均色
            </summary>
        </member>
        <member name="F:ThemeManager.exptionGlobalFilter">
            <summary>
            添加字体
            作用：设置application应用到的字体,设置后，xaml直接FontFamily={DynamicResource 你的key}
            请提前在Resources.resx中添加资源，这里传递例如#iconfont，那么就传递#iconfont，备用字体方式#iconfont,微软雅黑  逗号隔开
            作者：AY
            时间:2016-6-23 16:00:00
            </summary>
            <param name="app">当前开发的application</param>
            <param name="resourceKey">字体key</param>
            <param name="packuri">直接传递component/后面的内容,示例"Resources/#iconfont, 微软雅黑"</param>
            <param name="isResourceFolder">是否在resources文件夹下，默认true，那么传递参数就不用填写resources/了</param>
            <returns></returns>
        </member>
        <member name="M:ThemeManager.AddExceptionCustom(System.Windows.Application)">
            <summary>
            对应用程序  新增 全局异常捕获，此窗体提示  是医疗风的那个错误提示，没有AYUI源码，不要使用。
            </summary>
            <param name="app">当前Application</param>
            <returns>当前Application</returns>
        </member>
        <member name="M:ThemeManager.AddExceptionSimply(System.Windows.Application)">
            <summary>
            对应用程序  新增 全局异常捕获，异常时会 弹窗
            </summary>
            <param name="app">当前Application</param>
            <returns>当前Application</returns>
        </member>
        <member name="M:ThemeManager.AddExceptionLog(System.Windows.Application)">
            <summary>
            对应用程序  新增 全局异常捕获,异常时会 输出错误日志
            对AyuiConfig.AYUI_LogDebugDirectoryPath 设置 错误输出的目录
            </summary>
            <param name="app">当前Application</param>
            <returns>当前Application</returns>
        </member>
        <member name="M:ThemeManager.AddExceptionLog(System.Windows.Application,System.String)">
            <summary>
             对应用程序  新增 全局异常捕获,异常时会 输出错误日志
            </summary>
            <param name="app">当前Application</param>
            <param name="logDirectory">错误文件 输出的目录</param>
            <returns>当前Application</returns>
        </member>
        <member name="M:ThemeManager.TaskScheduler_UnobservedTaskException(System.Object,System.Threading.Tasks.UnobservedTaskExceptionEventArgs)">
            <summary>
            当出错的 System.Threading.Tasks.Task 的未观察到的异常将要触发异常升级策略时发生。
            处理它防止唯一察觉异常引发程序崩溃。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ThemeManager.ApplicationCurrent_DispatcherUnhandledException(System.Object,System.Windows.Threading.DispatcherUnhandledExceptionEventArgs)">
            <summary>
            未进行处理的异常事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ThemeManager.CurrentDomain_UnhandledException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            当某个异常未被捕获时触发此事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ThemeManager.App_CleanSystemMemory(System.Object,System.Windows.StartupEventArgs)">
            <summary>
            清理系统内存
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ThemeManager.Flush">
            <summary>
            刷新一次清理一次缓存
            </summary>
        </member>
        <member name="M:ThemeManager.App_DisableBackspaceShortcutKeysStartup(System.Object,System.Windows.StartupEventArgs)">
            <summary>
            禁用Backspace快捷键向后回退各个页面
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ThemeManager.App_DisableF5ShortcutKeysStartup(System.Object,System.Windows.StartupEventArgs)">
            <summary>
            禁用F5快捷键界面刷新
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ThemeManager.App_ImproveProcessPriorityStartup(System.Object,System.Windows.StartupEventArgs)">
            <summary>
            提高程序进程优先级
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
